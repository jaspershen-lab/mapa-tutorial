# Data input and preprocessing

This chapter covers the input data requirements for mapa analysis, including the expected data formats and data preprocessing for converting your data to the required format.

```{r}
#| message: false
library(mapa)
```

## Input Data Format Requirements

### Gene Expression Data

mapa accepts gene expression data with flexible identifier requirements, depending on your analysis type. Your input data must contain **at least one** of the following identifier columns:

-   `ensembl`: [Ensembl gene IDs](https://asia.ensembl.org/info/genome/stable_ids/index.html) (e.g., "ENSG00000141510")
-   `entrezid`: [NCBI Entrez gene IDs](https://pmc.ncbi.nlm.nih.gov/articles/PMC1761442/) (e.g., "7157")
-   `uniprot`: [UniProtKB accession numbers](https://www.uniprot.org/help/accession_numbers) (e.g., "P04637")
-   `symbol`: [Gene symbols](https://www.pnas.org/doi/full/10.1073/pnas.2025207118) (e.g., "TP53")

::: callout-important
Column names must be in lowercase.
:::

::: panel-tabset
##### Over-Representation Analysis (ORA)

For ORA, you **only need one identifier column** plus any additional metadata:

```{r}
# Example ORA input data

ora_data <- readr::read_csv("examples/example_ora_gene_data.csv", show_col_types = FALSE)
head(ora_data)
```

##### Gene Set Enrichment Analysis (GSEA)

For GSEA, you need:

1.  **One identifier column** (ensembl, entrezid, uniprot, or symbol)
2.  **An `order_by` column** containing numeric values to rank genes (This is used to create the **ranked gene list** required for GSEA. Common choices like Log2 fold change values, pvalue)

```{r}
# Example GSEA input data

gsea_data <- readr::read_csv("examples/example_gsea_data.csv", show_col_types = FALSE)
head(gsea_data)
```
:::

### Metabolite Data

For metabolite analysis, mapa currently supports **Over-Representation Analysis (ORA) only**. You **only need one identifier column** plus any additional metadata (Column names must be in lowercase):

-   `hmdbid`: [Human Metabolome Database IDs](https://www.hmdb.ca) (e.g., "HMDB0000001", "HMDB0000002") - **Human only**
-   `keggid`: [KEGG Compound IDs](https://www.genome.jp/kegg/compound/) (e.g., "C00001", "C00002") - **All organisms**

::: callout-note
-   For human metabolites: You can use either hmdbid or keggid as input
-   For other organisms: Only keggid is supported
-   GSEA for metabolites is not currently supported
:::

```{r}
# Example metabolite input data with KEGG IDs (works for all organisms)
# metabolite_kegg_data <- readr::read_csv("examples/example_metabolite_kegg.csv", show_col_types = FALSE)
# head(metabolite_kegg_data)
```

```{r}
# Example metabolite input data with HMDB IDs (human only)
metabolite_data <- readr::read_csv("examples/example_metabolite_data.csv", show_col_types = FALSE)
head(metabolite_data)
```

## Input Data Preprocessing

**This step is required except for non-human metabolite analysis** - mapa provides the `convert_id()` function to perform ID conversion for downstream analysis. Even if your data already contains one of the required identifier columns, you must run this function to ensure all necessary identifiers are present for pathway analysis.

### Gene ID conversion {#sec-gene_id_conversion}

The `convert_id()` function converts between different ID types and **always returns data with all four gene identifier columns** (`ensembl`, `entrezid`, `uniprot`, `symbol`), which are required for mapa to work properly. Since organism-specific annotation database are required for ID conversion and the following enrichment analysis, choose the ID conversion method based on your organism.

::::: panel-tabset
##### Model Organisms

For common model organisms, use standard organism database Bioconductor packages.

::: callout-note
For most model organisms, Bioconductor already supplies curated organism annotation databases (the OrgDb packages). You can browse the complete list and install the one that matches your species of interest [here](https://bioconductor.org/packages/release/BiocViews.html#___OrgDb).
:::

```{r}
# Human
variable_info <- convert_id(
  data = ora_data,
  query_type = "gene",
  from_id_type = "ensembl",  # This tells the function what your input column represents
  organism = "org.Hs.eg.db"  # install the package at first
)
head(variable_info)
```

##### Non-Model Organisms

For organisms without standard packages, use AnnotationHub IDs:

```{r}
#| eval: false

# Macaca fascicularis (taxid: 9541)
variable_info <- convert_id(
  data = your_data,
  query_type = "gene",
  from_id_type = "ensembl",
  ah_id = "AH119902",  # AnnotationHub ID for Macaca fascicularis
  return_orgdb = TRUE  # The organism database is needed for downstream analysis
)
```

::: callout-tip
**How to find AnnotationHub IDs according to taxid?**

```{r}
#| eval: false

if (!require("BiocManager", quietly = TRUE))
    install.packages("BiocManager")

BiocManager::install("AnnotationHub")

library(AnnotationHub)
ah <- AnnotationHub()
# Search for your organism database by taxid (here taxid is "9541")
query_result <- AnnotationHub::query(ah, c("OrgDb", "9541"))
# Use the ah_id from the results
query_result$ah_id
```
:::
:::::

### Metabolite ID Conversion

For human metabolite data, convert IDs bwteen KEGG and HMDB:

```{r}
# Convert KEGG IDs to HMDB IDs (human only)
variable_info <- convert_id(
  data = metabolite_data,
  query_type = "metabolite", 
  from_id_type = "keggid",
  organism = "hsa" # KEGG organism code
)

# Result will include both hmdbid and keggid columns
head(variable_info)
```

## Next Steps

Once your data meets the format requirements, you can proceed to [enrichment analysis](03_enrichment_analysis.qmd) to begin your mapa workflow.
