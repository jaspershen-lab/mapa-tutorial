[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "mapa tutorial",
    "section": "",
    "text": "Overview",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "index.html#mapa-functional-module-annotation-for-pathway-analysis-results-using-llm",
    "href": "index.html#mapa-functional-module-annotation-for-pathway-analysis-results-using-llm",
    "title": "mapa tutorial",
    "section": "mapa: Functional Module Annotation for Pathway Analysis Results Using LLM",
    "text": "mapa: Functional Module Annotation for Pathway Analysis Results Using LLM\nmapa is a streamlined workflow for pathway-enrichment analysis and enrichment result interpretation that turns large omics datasets into clear biological insight. It:\n\nDetects enriched pathways from your data via over-representation analysis (ORA) or gene set enrichment analysis (GSEA).\nClusters overlapping or functional-related pathways into functional modules, so every informative pathway—not just the “top 5 or 10”—contributes to the story.\nSummarises each module with large-language models (LLM) (e.g., ChatGPT), linking the results to the latest findings in literature from PubMed.\n\nThe outcome is a fast, reproducible, and user-friendly pipeline that reduces redundancy and delivers biologically meaningful interpretations for enrichment results.",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "index.html#aim-of-this-tutorial",
    "href": "index.html#aim-of-this-tutorial",
    "title": "mapa tutorial",
    "section": "Aim of This Tutorial",
    "text": "Aim of This Tutorial\nThis guide walks you through the two faces of mapa: the R package for command-line workflows and the Shiny app for point-and-click exploration. By the end, with your gene/metabolite list as input, you will be able to:\n\nMerge overlapping enriched pathways into informative functional modules.\nGenerate biological interpretations of each module with large-language models.\nCreate publication-ready visuals of enrichment results, module networks, and pathway–molecule relationships.\nExport a comprehensive report that gathers every table, figure, and LLM-based summary in one place.\n\nWhether you favour the command line or a browser, the tutorial gives you everything you need to apply MAPA confidently in your bioinformatics projects.",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "01_package_installation.html",
    "href": "01_package_installation.html",
    "title": "1  Installation",
    "section": "",
    "text": "Follow the steps below to install the latest development version of mapa from GitHub (the script first installs BiocManager and remotes if you don’t have them):\n\nif (!requireNamespace(\"BiocManager\", quietly = TRUE)) {\n install.packages(\"BiocManager\") \n}\n\nif (!requireNamespace(\"remotes\", quietly = TRUE)) {\n install.packages(\"remotes\") \n}\n\nremotes::install_github(\n  \"jaspershen-lab/mapa\",\n  dependencies = TRUE,\n  repos = BiocManager::repositories(),\n  upgrade = \"ask\"\n)",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Installation</span>"
    ]
  },
  {
    "objectID": "02_input.html",
    "href": "02_input.html",
    "title": "2  Data input and preprocessing",
    "section": "",
    "text": "2.1 Input Data Format Requirements\nThis chapter covers the input data requirements for mapa analysis, including the expected data formats and data preprocessing for converting your data to the required format.",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data input and preprocessing</span>"
    ]
  },
  {
    "objectID": "02_input.html#input-data-format-requirements",
    "href": "02_input.html#input-data-format-requirements",
    "title": "2  Data input and preprocessing",
    "section": "",
    "text": "2.1.1 Gene Expression Data\nmapa accepts gene expression data with flexible identifier requirements, depending on your analysis type. Your input data must contain at least one of the following identifier columns:\n\nensembl: Ensembl gene IDs (e.g., “ENSG00000141510”)\nentrezid: NCBI Entrez gene IDs (e.g., “7157”)\nuniprot: UniProtKB accession numbers (e.g., “P04637”)\nsymbol: Gene symbols (e.g., “TP53”)\n\n\n\n\n\n\n\nImportant\n\n\n\nColumn names must be in lowercase.\n\n\n\nOver-Representation Analysis (ORA)Gene Set Enrichment Analysis (GSEA)\n\n\nFor ORA, you only need one identifier column plus any additional metadata:\n\n# Example ORA input data\nora_data &lt;- readr::read_csv(\"examples/example_ora_gene_data.csv\")\nhead(ora_data)\n# # A tibble: 6 × 2\n#   variable_id ensembl        \n#   &lt;chr&gt;       &lt;chr&gt;          \n# 1 gene_1      ENSG00000100097\n# 2 gene_2      ENSG00000139193\n# 3 gene_3      ENSG00000163513\n# 4 gene_4      ENSG00000127863\n# 5 gene_5      ENSG00000115604\n# 6 gene_6      ENSG00000153002\n\n\n\nFor GSEA, you need:\n\nOne identifier column (ensembl, entrezid, uniprot, or symbol)\nAn order_by column containing numeric values to rank genes (This is used to create the ranked gene list required for GSEA. Common choices like Log2 fold change values, pvalue)\n\n\n# Example GSEA input data\ngsea_data &lt;- readr::read_csv(\"examples/example_gsea_data.csv\")\nhead(gsea_data)\n# # A tibble: 6 × 8\n#   variable_id ensembl         genename                                                 genetype       length     fc  p_value p_value_adjust\n#   &lt;chr&gt;       &lt;chr&gt;           &lt;chr&gt;                                                    &lt;chr&gt;           &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;          &lt;dbl&gt;\n# 1 gene_1      ENSG00000160072 ATPase family AAA domain containing 3B                   protein-coding  26084 0.358  0.00517         0.0202 \n# 2 gene_11     ENSG00000157911 peroxisomal biogenesis factor 10                         protein-coding   9834 0.234  0.000261        0.00514\n# 3 gene_12     ENSG00000269896 small nuclear ribonucleoprotein polypeptide N pseudogene pseudo            214 0.0665 0.00884         0.0277 \n# 4 gene_16     ENSG00000157933 SKI proto-oncogene                                       protein-coding  82826 0.232  0.000220        0.00490\n# 5 gene_29     ENSG00000149527 phospholipase C eta 2                                    protein-coding  79553 0.0373 0.00720         0.0244 \n# 6 gene_31     ENSG00000171621 splA/ryanodine receptor domain and SOCS box containing 1 protein-coding  76639 2.68   0.00636         0.0226 \n\n\n\n\n\n\n2.1.2 Metabolite Data\nFor metabolite analysis, mapa currently supports Over-Representation Analysis (ORA) only. You only need one identifier column plus any additional metadata (Column names must be in lowercase):\n\nhmdbid: Human Metabolome Database IDs (e.g., “HMDB0000001”, “HMDB0000002”) - Human only\nkeggid: KEGG Compound IDs (e.g., “C00001”, “C00002”) - All organisms\n\n\n\n\n\n\n\nNote\n\n\n\n\nFor human metabolites: You can use either hmdbid or keggid as input\nFor other organisms: Only keggid is supported\nGSEA for metabolites is not currently supported\n\n\n\n\n# Example metabolite input data with HMDB IDs (human only)\nmetabolite_data &lt;- readr::read_csv(\"examples/example_metabolite_data.csv\")\nhead(metabolite_data)\n# # A tibble: 6 × 4\n#   variable_id    keggid      fdr score\n#   &lt;chr&gt;          &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;\n# 1 M441T680_2_NEG NA     3.59e-16  1.11\n# 2 M448T566_NEG   C05466 5.12e- 3  1.13\n# 3 M229T462_NEG   C02678 7.43e- 4  1.20\n# 4 M367T590_NEG   C04555 2.28e- 4  1.34\n# 5 M221T50_POS    C13008 7.99e- 3  1.36\n# 6 M544T604_POS   C04230 1.19e-18  1.53",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data input and preprocessing</span>"
    ]
  },
  {
    "objectID": "02_input.html#input-data-preprocessing",
    "href": "02_input.html#input-data-preprocessing",
    "title": "2  Data input and preprocessing",
    "section": "2.2 Input Data Preprocessing",
    "text": "2.2 Input Data Preprocessing\nThis step is required except for non-human metabolite analysis - mapa provides the convert_id() function to perform ID conversion for downstream analysis. Even if your data already contains one of the required identifier columns, you must run this function to ensure all necessary identifiers are present for pathway analysis.\n\n2.2.1 Gene ID conversion\nThe convert_id() function converts between different ID types and always returns data with all four gene identifier columns (ensembl, entrezid, uniprot, symbol), which are required for mapa to work properly. Since organism-specific annotation database are required for ID conversion and the following enrichment analysis, choose the ID conversion method based on your organism.\n\nModel OrganismsNon-Model Organisms\n\n\nFor common model organisms, use standard organism database Bioconductor packages.\n\n\n\n\n\n\nNote\n\n\n\nFor most model organisms, Bioconductor already supplies curated organism annotation databases (the OrgDb packages). You can browse the complete list and install the one that matches your species of interest here.\n\n\n\n# Human\nvariable_info &lt;- convert_id(\n  data = ora_data,\n  query_type = \"gene\",\n  from_id_type = \"ensembl\",  # This tells the function what your input column represents\n  organism = \"org.Hs.eg.db\"  # install the package at first\n)\nhead(variable_info)\n# # A tibble: 6 × 5\n#   ensembl         entrezid uniprot    symbol   variable_id\n#   &lt;chr&gt;           &lt;chr&gt;    &lt;chr&gt;      &lt;chr&gt;    &lt;chr&gt;      \n# 1 ENSG00000100097 3956     A0A384MR27 LGALS1   gene_1     \n# 2 ENSG00000139193 939      B2RDZ0     CD27     gene_2     \n# 3 ENSG00000163513 7048     A0AAQ5BI03 TGFBR2   gene_3     \n# 4 ENSG00000127863 55504    Q9NS68     TNFRSF19 gene_4     \n# 5 ENSG00000115604 8809     Q13478     IL18R1   gene_5     \n# 6 ENSG00000153002 1360     O60834     CPB1     gene_6  \n\n\n\nFor organisms without standard packages, use AnnotationHub IDs:\n\nnon_model_org_dt &lt;- readr::read_csv(\"examples/example_non_model_org_data.csv\")\n# Macaca fascicularis (taxid: 9541)\nvariable_info &lt;- convert_id(\n  data = non_model_org_dt,\n  query_type = \"gene\",\n  from_id_type = \"ensembl\",\n  ah_id = \"AH119902\",  # AnnotationHub ID for Macaca fascicularis\n  return_orgdb = TRUE  # The organism database is needed for downstream analysis\n)\n\n# Successfully loaded organism database from AnnotationHub\n# Database information:\n# OrgDb object:\n# | DBSCHEMAVERSION: 2.1\n# | DBSCHEMA: NOSCHEMA_DB\n# | ORGANISM: Simia fascicularis\n# | SPECIES: Simia fascicularis\n# | CENTRALID: GID\n# | Taxonomy ID: 9541\n# | Db type: OrgDb\n# | Supporting package: AnnotationDbi\n# \n# Please see: help('select') for usage information\n# Note: The following ID types are not available in the organism database and will be filled with NA: uniprot\n# Available ID types in database: ACCNUM, ALIAS, ENSEMBL, ENTREZID, EVIDENCE, EVIDENCEALL, GENENAME, GID, GO, GOALL, ONTOLOGY, ONTOLOGYALL, PMID, REFSEQ, SYMBOL, UNIGENE\n# 'select()' returned 1:many mapping between keys and columns\n# Warning in clusterProfiler::bitr(geneID = data[[from_id_type]], fromType = from_clusterprofiler_type,  :\n#   57.38% of input gene IDs are fail to map...\n\nvariable_info\n# $data\n# # A tibble: 183 × 8\n#    ensembl            entrezid  uniprot symbol       Symbol  `Gene type`    Tissue     Cluster  \n#    &lt;chr&gt;              &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;        &lt;chr&gt;   &lt;chr&gt;          &lt;chr&gt;      &lt;chr&gt;    \n#  1 ENSMFAG00000000264 NA        NA      NA           APH1B   protein_coding Liver (LL) Cluster U\n#  2 ENSMFAG00000000283 NA        NA      NA           PLCG1   protein_coding Liver (LL) Cluster U\n#  3 ENSMFAG00000000444 102141791 NA      EPS15L1      EPS15L1 protein_coding Liver (LL) Cluster U\n#  4 ENSMFAG00000000464 NA        NA      NA           RCOR3   protein_coding Liver (LL) Cluster U\n#  5 ENSMFAG00000000583 101865185 NA      EXOC7        EXOC7   protein_coding Liver (LL) Cluster U\n#  6 ENSMFAG00000000608 NA        NA      NA           CD99    protein_coding Liver (LL) Cluster U\n#  7 ENSMFAG00000000627 102121020 NA      MTFMT        MTFMT   protein_coding Liver (LL) Cluster U\n#  8 ENSMFAG00000000639 NA        NA      NA           GJC2    protein_coding Liver (LL) Cluster U\n#  9 ENSMFAG00000000737 101866375 NA      MKRN1        MKRN1   protein_coding Liver (LL) Cluster U\n# 10 ENSMFAG00000000852 102131151 NA      LOC102131151 CYB5R1  protein_coding Liver (LL) Cluster U\n# # ℹ 173 more rows\n# # ℹ Use `print(n = ...)` to see more rows\n# \n# $orgdb\n# OrgDb object:\n# | DBSCHEMAVERSION: 2.1\n# | DBSCHEMA: NOSCHEMA_DB\n# | ORGANISM: Simia fascicularis\n# | SPECIES: Simia fascicularis\n# | CENTRALID: GID\n# | Taxonomy ID: 9541\n# | Db type: OrgDb\n# | Supporting package: AnnotationDbi\n# Please see: help('select') for usage information\n\n\n\n\n\n\n\nTip\n\n\n\nHow to find AnnotationHub IDs according to taxid?\n\nif (!require(\"BiocManager\", quietly = TRUE))\n    install.packages(\"BiocManager\")\n\nBiocManager::install(\"AnnotationHub\")\n\nlibrary(AnnotationHub)\nah &lt;- AnnotationHub()\n# Search for your organism database by taxid (here taxid is \"9541\")\nquery_result &lt;- AnnotationHub::query(ah, c(\"OrgDb\", \"9541\"))\n# Use the ah_id from the results\nquery_result$ah_id\n# [1] \"AH119899\" \"AH119900\" \"AH119901\" \"AH119902\"\n\n\n\n\n\n\n\n\n2.2.2 Metabolite ID Conversion\nFor human metabolite data, convert IDs bwteen KEGG and HMDB:\n\n# Convert KEGG IDs to HMDB IDs (human only)\nvariable_info &lt;- convert_id(\n  data = metabolite_data,\n  query_type = \"metabolite\", \n  from_id_type = \"keggid\",\n  organism = \"hsa\" # KEGG organism code\n)\n\n# Result will include both hmdbid and keggid columns\nhead(variable_info)\n# # A tibble: 6 × 5\n#   variable_id  keggid      fdr score hmdbid     \n#   &lt;chr&gt;        &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n# 1 M448T566_NEG C05466 5.12e- 3  1.13 HMDB0000637\n# 2 M229T462_NEG C02678 7.43e- 4  1.20 HMDB0000623\n# 3 M367T590_NEG C04555 2.28e- 4  1.34 HMDB0001032\n# 4 M221T50_POS  C13008 7.99e- 3  1.36 HMDB0006240\n# 5 M544T604_POS C04230 1.19e-18  1.53 HMDB0002815\n# 6 M544T604_POS C04230 1.19e-18  1.53 HMDB0010380",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data input and preprocessing</span>"
    ]
  },
  {
    "objectID": "02_input.html#next-steps",
    "href": "02_input.html#next-steps",
    "title": "2  Data input and preprocessing",
    "section": "2.3 Next Steps",
    "text": "2.3 Next Steps\nOnce your data meets the format requirements, you can proceed to enrichment analysis to begin your mapa workflow.",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data input and preprocessing</span>"
    ]
  },
  {
    "objectID": "03_enrichment_analysis.html",
    "href": "03_enrichment_analysis.html",
    "title": "3  Enrichment Analysis",
    "section": "",
    "text": "3.1 Gene-based Enrichment\nThe mapa package provides two powerful functions for pathway enrichment analysis: enrich_pathway() for Over-Representation Analysis (ORA) and do_gsea() for Gene Set Enrichment Analysis (GSEA). Both functions support multiple databases and can handle both gene and metabolite data (for metabolite, currently supports ORA only). Here we provide a unified, streamlined workflow that eliminates the need to run separate analyses for different databases, allowing you to analyze multiple databases simultaneously in a single function call.",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Enrichment Analysis</span>"
    ]
  },
  {
    "objectID": "03_enrichment_analysis.html#gene-based-enrichment",
    "href": "03_enrichment_analysis.html#gene-based-enrichment",
    "title": "3  Enrichment Analysis",
    "section": "",
    "text": "3.1.1 Supported Databases and Keytypes\nThe mapa package leverages the powerful enrichment functions from the clusterProfiler package for pathway analysis. The following table shows which databases you can use for your organism and the supported key types:\n\n\n\nDatabase\nSupported Organism\nKeytype Options\n\n\n\n\nGene Ontology (GO)\nAny organism with OrgDb object (organism annotation database package from Bioconductor or OrgDb object retrieved from AnnotationHub, see Section 2.2.1)\nAny keyType supported by your OrgDb object\n\n\nKEGG\nAll KEGG organisms\n\"kegg\", \"ncbi-geneid\", \"ncbi-proteinid\", \"uniprot\"\n\n\nReactome\nhuman, rat, mouse, celegans, yeast, zebrafish, fly, bovine, canine, chicken\nENTREZID only\n\n\n\n\n\n\n\n\n\nTip\n\n\n\n\nTo check available GO keytype for your organism:\nFor model organisms with Bioconductor annotation packages\n\n## For model organisms with Bioconductor annotation packages\nlibrary(org.Hs.eg.db)\nAnnotationDbi::keytypes(org.Hs.eg.db)\n# [1] \"ACCNUM\" \"ALIAS\" \"ENSEMBL\" \"ENSEMBLPROT\" \"ENSEMBLTRANS\" \"ENTREZID\" \"ENZYME\"  \"EVIDENCE\" \"EVIDENCEALL\" \"GENENAME\"    \n# [11] \"GENETYPE\" \"GO\" \"GOALL\" \"IPI\" \"MAP\" \"OMIM\" \"ONTOLOGY\" \"ONTOLOGYALL\" \"PATH\" \"PFAM\"        \n# [21] \"PMID\" \"PROSITE\" \"REFSEQ\" \"SYMBOL\" \"UCSCKG\" \"UNIPROT\" \n\nFor non-model organisms with annotation OrgDb retrieved from AnnotationHub\n\n# variable_info is the output from the ID conversion step in Chapter 2 - Data Input and Preprocessing\nAnnotationDbi::keytypes(variable_info$orgdb)\n\nFor comprehensive understanding of enrichment analysis concepts, methodologies, we highly recommend reading the Biomedical Knowledge Mining using GOSemSim and clusterProfiler book. This book covers all the underlying methods that mapa uses and will help you make informed decisions about your analysis parameters.\n\n\n\n\n\n3.1.2 Basic Usage\n\nOver-Representation Analysis (ORA)Gene Set Enrichment Analysis (GSEA)\n\n\nUse enrich_pathway() for Over-Representation Analysis.\n\nenriched_pathways &lt;- \n  enrich_pathway(\n    variable_info = variable_info,\n    query_type = \"gene\",\n    database = c(\"go\", \"kegg\", \"reactome\"),\n    # GO parameters\n    go.orgdb = org.Hs.eg.db,\n    go.keytype = \"ENTREZID\",\n    go.ont = \"ALL\",\n    # KEGG parameters\n    kegg.organism = \"hsa\",\n    kegg.keytype = \"kegg\",\n    # Reactome parameters\n    reactome.organism = \"human\",\n    # Statistical parameters\n    pvalueCutoff = 0.05,\n    pAdjustMethod = \"BH\"\n  )\n\n# GO database...\n# KEGG database...\n# Reading KEGG annotation online: \"https://rest.kegg.jp/link/hsa/pathway\"...\n# Reading KEGG annotation online: \"https://rest.kegg.jp/list/pathway/hsa\"...\n# Reactome database...\n# Done.\n\n\n\nThe do_gsea() function performs GSEA using ranked gene lists based on fold changes or other metrics.\n\ngsea_pathways &lt;- \n  do_gsea(\n    variable_info = variable_info,\n    query_type = \"gene\",\n    order_by = \"fc\",              # Column to rank genes by\n    database = c(\"go\", \"kegg\", \"reactome\"),\n    # Database parameters\n    go.orgdb = org.Hs.eg.db,\n    go.ont = \"ALL\",\n    go.keytype = \"ENTREZID\",\n    kegg.organism = \"hsa\",\n    kegg.keytype = \"kegg\",\n    reactome.organism = \"human\",\n    # GSEA parameters\n    pvalueCutoff = 0.05,\n    pAdjustMethod = \"BH\"\n  )\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nModel organisms: use variable_info directly and package name for go.orgdb\nNon-model organisms: use variable_info$data for parameter variable_info and variable_info$orgdb for go.orgdb",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Enrichment Analysis</span>"
    ]
  },
  {
    "objectID": "03_enrichment_analysis.html#metabolite-based-enrichment",
    "href": "03_enrichment_analysis.html#metabolite-based-enrichment",
    "title": "3  Enrichment Analysis",
    "section": "3.2 Metabolite-based Enrichment",
    "text": "3.2 Metabolite-based Enrichment\n\n3.2.1 Supported Databases and Keytypes\n\n\n\nDatabase\nSupported Organism\nKeytype Options\n\n\n\n\nKEGG\nAll KEGG organisms\nKEGG compound IDs\n\n\nHMDB\nOnly for human\nHMDB IDs\n\n\n\n\n\n3.2.2 Basic Usage\nFor metabolite data, ensure your variable_info contains HMDB IDs and/or KEGG compound IDs.\n\nmet_enriched_pathways &lt;- \n  enrich_pathway(\n    variable_info = met_variable_info,\n    query_type = \"metabolite\",\n    database = c(\"hmdb\", \"metkegg\"),\n    met_organism = \"hsa\",\n    save_to_local = TRUE,\n    pvalueCutoff = 0.05,\n    pAdjustMethod = \"BH\"\n  )",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Enrichment Analysis</span>"
    ]
  },
  {
    "objectID": "03_enrichment_analysis.html#results-interpretation",
    "href": "03_enrichment_analysis.html#results-interpretation",
    "title": "3  Enrichment Analysis",
    "section": "3.3 Results interpretation",
    "text": "3.3 Results interpretation\nAfter enrichment analysis, view the enrichment analysis summary:\n\nenriched_pathways\n# -------------------- \n# Analysis method: enrich_pathway \n# -------------------- \n# -----------Variable information------------\n# 119  features/markers in total\n# -----------Enrichment results and modules of genes------------\n# -----------GO------------\n# 1025 GO terms with p.adjust &lt; 0.05 \n# No GO modules\n# -----------KEGG------------\n# 48 KEGG pathways with p.adjust &lt; 0.05 \n# No KEGG modules\n# -----------Reactome------------\n# 48 Reactome pathways with p.adjust &lt; 0.05 \n# No Reactome modules\n# -----------Enrichment results and modules of metabolites------------\n# -----------HMDB------------\n# No HMDB results\n# No HMDB modules\n# -----------KEGG Metabolite------------\n# No KEGG metabolite results\n# No KEGG modules\n# -----------Functional modules------------\n# No Functional modules\n# -----------LLM module interpretation------------\n# No LLM module interpretation results\n# -------------------- \n# Processing information\n# 1 processings in total\n# enrich_pathway ---------- \n#   Package    Function.used                Time\n# 1    mapa enrich_pathway() 2025-06-08 14:34:13\n\nYou can access specific database results via @:\n\nORA enrichment resultGSEA enrichment result\n\n\n\nhead(enriched_pathways@enrichment_go_result@result)\n#            ONTOLOGY         ID                                                      Description GeneRatio   BgRatio RichFactor FoldEnrichment   zScore       pvalue\n# GO:0038084       BP GO:0038084             vascular endothelial growth factor signaling pathway    13/116  95/18805 0.13684211       22.18376 16.30756 2.147803e-14\n# GO:0036005       BP GO:0036005                 response to macrophage colony-stimulating factor    11/116  64/18805 0.17187500       27.86301 16.95936 1.713923e-13\n# GO:0035924       BP GO:0035924 cellular response to vascular endothelial growth factor stimulus    13/116 122/18805 0.10655738       17.27424 14.20752 5.888098e-13\n# GO:0006935       BP GO:0006935                                                       chemotaxis    21/116 466/18805 0.04506438        7.30548 10.85886 8.851862e-13\n# GO:0042330       BP GO:0042330                                                            taxis    21/116 468/18805 0.04487179        7.27426 10.82885 9.608949e-13\n# GO:0038145       BP GO:0038145           macrophage colony-stimulating factor signaling pathway    10/116  54/18805 0.18518519       30.02075 16.82498 1.024076e-12\n#                p_adjust       qvalue                                                                                                       geneID Count\n# GO:0038084 5.859206e-11 3.635439e-11                                            3480/28514/1969/1956/64094/2050/5156/7422/8828/2064/5979/2324/780    13\n# GO:0036005 2.337791e-10 1.450520e-10                                                        3480/1435/1969/1956/6696/2050/5156/2064/5979/2324/780    11\n# GO:0035924 4.656131e-10 2.888971e-10                                            3480/28514/1969/1956/64094/2050/5156/7422/8828/2064/5979/2324/780    13\n# GO:0006935 4.656131e-10 2.888971e-10 6370/3958/5919/1435/7040/8633/56477/1969/58191/64094/5054/3491/5156/3569/6359/7422/3082/6360/10457/5328/8828    21\n# GO:0042330 4.656131e-10 2.888971e-10 6370/3958/5919/1435/7040/8633/56477/1969/58191/64094/5054/3491/5156/3569/6359/7422/3082/6360/10457/5328/8828    21\n# GO:0038145 4.656131e-10 2.888971e-10                                                             3480/1435/1969/1956/2050/5156/2064/5979/2324/780    10\n\n\n\n\nhead(gsea_pathways@enrichment_kegg_result@result)\n#                ID                                       Description setSize enrichmentScore      NES       pvalue     p_adjust       qvalue rank\n# hsa05014 hsa05014                     Amyotrophic lateral sclerosis      11       0.6473595 2.500196 0.0001092759 0.0006556554 0.0003450818  218\n# hsa05022 hsa05022 Pathways of neurodegeneration - multiple diseases      11       0.4649904 1.795860 0.0102663060 0.0307989180 0.0162099568  232\n# hsa05010 hsa05010                                 Alzheimer disease      10       0.4709263 1.667865 0.0220601399 0.0441202798 0.0232211999  214\n#                             leading_edge                                            core_enrichment Count\n# hsa05014 tags=100%, list=36%, signal=65% 6390/23435/4720/5690/56893/6391/55706/842/5710/22926/55746    11\n# hsa05022  tags=91%, list=39%, signal=57%         6390/23435/4720/5690/6391/1435/842/5710/22926/9927    10\n# hsa05010  tags=90%, list=36%, signal=59%              6390/10000/4720/5690/6391/1435/842/5710/22926     9\n\n\n\n\nKey columns in enrichment results:\n\nGene ORAGSEAMetabolite ORA\n\n\nCore Information:\n\nID: Pathway identifier (e.g., GO:0042060 for GO, hsa04060 for KEGG, R-HSA-5669034 for Reactome)\nDescription: Pathway name\nONTOLOGY: Biological ontology (for GO only: MF=molecular function, CC=cellular component, BP=biological process)\ncategory/subcategory: KEGG pathway categories (for KEGG only)\n\nStatistical Measures:\n\npvalue: Raw p-value from hypergeometric test (equivalent to one-sided Fisher’s exact test)\np_adjust: Adjusted p-value after multiple testing correction (BH method by default)\nqvalue: Q-value for FDR control. For more information, see ?qvalue::qvalue\n\nGene Mapping:\n\nGeneRatio: Ratio of input genes annotated to this pathway (format: “genes_in_pathway/total_input_genes”)\nBgRatio: Ratio of all genes annotated to this pathway in the background universe (format: “pathway_genes/universe_genes”)\nCount: Total number of genes from input list that match this pathway\ngeneID: Gene IDs that overlap between your gene list and the pathway (separated by “/”)\n\nEnrichment Metrics:\n\nRichFactor: Ratio of input genes annotated to a pathway vs. all genes annotated to this pathway\nFoldEnrichment: Enrichment fold change (GeneRatio divided by BgRatio)\nzScore: Standard deviations away from expected overlap (How unusual or extreme the observed enrichment is compared to what you’d expect by chance. Higher absolute z-score means more “surprising” or significant enrichment.)\n\n\n\nFor GSEA results, additional columns specific to ranked list analysis include:\n\nsetSize: Total number of genes in the gene set/pathway\nenrichmentScore: Degree of overrepresentation at top/bottom of ranked list\nNES: Normalized Enrichment Score - main metric for interpretation\n\nPositive NES: pathway enriched in upregulated genes (pathway activation)\nNegative NES: pathway enriched in downregulated genes (pathway suppression)\n\nrank: Position in ranked list where maximum enrichment score occurred\nleading_edge: Statistics for the leading-edge subset of genes\ncore_enrichment: Core enriched genes that contribute most to the enrichment signal\nCount: Number of core enriched genes\n\n\n\nFor metabolite ORA results, the result structure differs from gene-based analysis:\nPathway Information:\n\npathway_id: Pathway identifier (e.g., SMP0000028 for HMDB pathways)\npathway_name: Name of the metabolic pathway (e.g., “Caffeine Metabolism”)\ndescribtion: Detailed description of the pathway from the corresponding database\npathway_class: Classification of pathway (e.g., “Metabolic;primary_pathway”, “Disease;primary_pathway”)\n\nStatistical Measures:\n\np_value: Raw p-value from enrichment test\np_adjust: Adjusted p-value for multiple testing correction\n\nMetabolite Mapping:\n\nall_id: All metabolite IDs in this pathway (separated by “;”)\nall_number: Total number of metabolites in the pathway\nmapped_id: Your input metabolite IDs that map to this pathway (separated by “;”)\nmapped_number: Number of your metabolites that map to this pathway\nmapped_percentage: Percentage of pathway metabolites covered by your input data\n\n\n\n\nThe enrichment results provide the foundation for downstream similarity analysis and functional module identification in the mapa workflow.",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Enrichment Analysis</span>"
    ]
  },
  {
    "objectID": "04_sim_cluster.html",
    "href": "04_sim_cluster.html",
    "title": "4  SimCluster: Traditional Similarity-based Clustering",
    "section": "",
    "text": "4.1 Overview\nSimCluster is the traditional pathway clustering method in mapa that groups related pathways into functional modules based on gene/metabolite overlap similarity. This method uses established similarity metrics (Jaccard, Dice, etc.) and semantic similarity measures to identify functionally related pathways.\nSimCluster works in two main steps:\nStep1: merge_pathways(): Groups pathways within each database (GO, KEGG, Reactome) based on their similarity\nStep2: merge_modules(): Combines modules across different databases to create final functional modules\nThis approach leverages well-established similarity metrics and has been widely validated in pathway analysis literature.",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>SimCluster: Traditional Similarity-based Clustering</span>"
    ]
  },
  {
    "objectID": "04_sim_cluster.html#overview",
    "href": "04_sim_cluster.html#overview",
    "title": "4  SimCluster: Traditional Similarity-based Clustering",
    "section": "",
    "text": "Function\nSimilarity Calculation\nClustering Method\nSim.cutoff Role\n\n\n\n\nmerge_pathways()\nFor GO, all similarity methods provided by simona package\nFor KEGG and Reactome, gene/metabolite overlap\nGirvan-Newman only\nEdge filter\n\n\nmerge_modules()\nJaccard index based on overlapping genes from input list\nGirvan-Newman, Binary Cut, or Hierarchical\nGirvan-Newman: Edge filter\nBinary Cut/Hierarchical: Dendrogram cutting height\n\n\n\n\n\n4.1.1 Step 1: Merge Pathways Within Databases\nThe merge_pathways() function calculates similarity between pathways within each database and groups similar pathways into modules using the Girvan-Newman clustering algorithm.\n\nGene-based AnalysisMetabolite-based Analysis\n\n\n\nenriched_modules &lt;- \n  merge_pathways(\n    object = enriched_pathways,\n    database = c(\"go\", \"kegg\", \"reactome\"),\n    # Statistical cutoffs\n    p.adjust.cutoff.go = 0.05,\n    p.adjust.cutoff.kegg = 0.05,\n    p.adjust.cutoff.reactome = 0.05,\n    count.cutoff.go = 5,\n    count.cutoff.kegg = 5,\n    count.cutoff.reactome = 5,\n    # Similarity cutoffs (edge filters for Girvan-Newman clustering)\n    sim.cutoff.go = 0.5,\n    sim.cutoff.kegg = 0.5,\n    sim.cutoff.reactome = 0.5,\n    # Similarity methods\n    measure.method.go = \"Sim_XGraSM_2013\",  # GO semantic similarity\n    go.orgdb = org.Hs.eg.db,               # Required for GO analysis\n    measure.method.kegg = \"jaccard\",        # Gene overlap similarity\n    measure.method.reactome = \"jaccard\"    # Gene overlap similarity\n  )\n\n# --------------------\n# GO database...\n# Calculating similartiy matrix, it may take a while...\n# relations: is_a, part_of, regulates, negatively_regulates, positively_regulates\n# IC_method: IC_annotation\n# term_sim_method: Sim_XGraSM_2013\n# IC_method: IC_annotation\n# Completed GO term (BP) similarity calculation.\n# relations: is_a, part_of, regulates, negatively_regulates, positively_regulates\n# IC_method: IC_annotation\n# term_sim_method: Sim_XGraSM_2013\n# IC_method: IC_annotation\n# Completed GO term (MF) similarity calculation.\n# relations: is_a, part_of, regulates, negatively_regulates, positively_regulates\n# IC_method: IC_annotation\n# term_sim_method: Sim_XGraSM_2013\n# IC_method: IC_annotation\n# Completed GO term (CC) similarity calculation.\n# Completed GO term similarity calculation successfully!\n# Identifying modules...\n# Done\n# --------------------\n# KEGG database...\n# Calculating similartiy matrix, it may take a while...\n# Completed KEGG pathway similarity calculation successfully!\n# Identifying modules...\n# Done\n# --------------------\n# Reactome database...\n# Calculating similartiy matrix, it may take a while...\n# Completed Reactome pathway similarity calculation successfully!\n# Identifying modules...\n# Done\n# Done\n\n\n\n\n\n\n\nNote\n\n\n\nOrgDb Selection:\n\nFor model organisms with Bioconductor annotation packages: use the package directly (e.g., go.orgdb = org.Hs.eg.db)\nFor non-model organisms: use the OrgDb object from Section 2.2.1 (e.g., go.orgdb = variable_info$orgdb)\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nOrganism Limitation: SimCluster for metabolites is only recommended for human studies where you can cluster pathways from both KEGG and HMDB (SMPDB) databases. For non-human organisms, only the KEGG database is available for metabolite analysis, making cross-database clustering unnecessary. For metabolite analysis in non-human organisms, use EmbedCluster (Chapter 5) instead.\n\n\n\nmet_enriched_modules &lt;- \n  merge_pathways(\n    object = met_enriched_pathways,\n    database = c(\"hmdb\", \"metkegg\"),\n    # Statistical cutoffs for metabolites\n    p.adjust.cutoff.hmdb = 0.05,\n    p.adjust.cutoff.metkegg = 0.05,\n    count.cutoff.hmdb = 5,\n    count.cutoff.metkegg = 5,\n    # Similarity settings\n    sim.cutoff.hmdb = 0.5,\n    sim.cutoff.metkegg = 0.5,\n    measure.method.hmdb = \"jaccard\",\n    measure.method.metkegg = \"jaccard\"\n  )\n\n\n\n\n\n\n4.1.2 Step 2: Merge Modules Across Databases\nThe merge_modules() function combines pathway modules from different databases into unified functional modules. In this step, similarity between database-specific modules is calculated using the Jaccard index based on overlapping genes from your input gene list.\n\nenriched_functional_modules &lt;- \n  merge_modules(\n    object = enriched_modules,\n    sim.cutoff = 0.5,\n    measure_method = \"jaccard\",\n    cluster_method = \"girvan newman\"  # Options: \"girvan newman\", \"binary cut\", \"hierarchical\"\n  )\n\n# Calculating the similarity matrix...\n# Identifying funcitonal modules...\n# Done",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>SimCluster: Traditional Similarity-based Clustering</span>"
    ]
  },
  {
    "objectID": "04_sim_cluster.html#similarity-methods-for-merged_pathways",
    "href": "04_sim_cluster.html#similarity-methods-for-merged_pathways",
    "title": "4  SimCluster: Traditional Similarity-based Clustering",
    "section": "4.2 Similarity Methods (For merged_pathways())",
    "text": "4.2 Similarity Methods (For merged_pathways())\nGO Semantic Similarity Methods\nFor GO terms, mapa calculates GO term similarity using the simona package, which supports multiple semantic similarity measures, such as:\n\n\n\n\n\n\n\n\n\nMethod\nType\nDescription\nUse Case\n\n\n\n\nSim_XGraSM_2013\nHybrid\nCombines multiple similarity aspects\nDefault, good overall performance\n\n\nSim_Wang_2007\nStructure-based\nBased on GO graph structure and relationships\nEmphasizes hierarchical relationships\n\n\nSim_Lin_1998\nInformation content-based\nUses information content of terms\nGood for well-annotated organisms\n\n\nSim_Resnik_1999\nInformation content-based\nInformation content of most informative common ancestor\nConservative similarity measure\n\n\nSim_FaITH_2010\nHybrid\nFunctional annotation-based\nIncorporates functional annotations\n\n\nSim_Relevance_2006\nInformation content-based\nRelevance-based semantic similarity\nBalances specificity and generality\n\n\n\nGene/Metabolite Overlap Similarity\nFor KEGG, Reactome, and metabolite pathways:\n\n\n\n\n\n\n\n\n\nMethod\nFormula\nDescription\nUse Case\n\n\n\n\njaccard\n|A ∩ B| / |A ∪ B|\nJaccard index\nDefault, most commonly used\n\n\ndice\n2 × |A ∩ B| / (|A| + |B|)\nDice coefficient\nEmphasizes shared elements\n\n\noverlap\n|A ∩ B| / min(|A|, |B|)\nOverlap coefficient\nGood for pathways of different sizes\n\n\nkappa\n(Po - Pe) / (1 - Pe)\nCohen’s kappa\nAccounts for chance agreement\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nFor detailed explanations of similarity methods, see the simona documentation.",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>SimCluster: Traditional Similarity-based Clustering</span>"
    ]
  },
  {
    "objectID": "04_sim_cluster.html#clustering-methods-for-merge_modules",
    "href": "04_sim_cluster.html#clustering-methods-for-merge_modules",
    "title": "4  SimCluster: Traditional Similarity-based Clustering",
    "section": "4.3 Clustering Methods (For merge_modules())",
    "text": "4.3 Clustering Methods (For merge_modules())\nSimCluster offers three clustering algorithms, please set parameters as follows:\n\nGirvan-Newman (Default)\nCommunity detection based on edge betweenness - good for identifying natural communities in networks.\n\ncluster_method = \"girvan newman\"\nsim.cutoff = 0.5  # Only edges above this similarity are included\n\nBinary Cut\nUses the simplifyEnrichment algorithm - efficient for large datasets.\n\ncluster_method = \"binary cut\"\nsim.cutoff = 0.5  # Cutoff for cutting the dendrogram (Higher values: More permissive, larger modules)\n\nHierarchical Clustering\nTraditional hierarchical clustering with distance thresholds.\n\ncluster_method = \"hierarchical\"\nhclust.method = \"complete\"  # Linkage method\nsim.cutoff = 0.5           # Height for cutting dendrogram (Higher values: More permissive, larger modules)\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe interpretation of sim.cutoff depends on your chosen clustering method:\n\nFor Girvan-Newman Clustering\nsim.cutoff acts as an edge filter - only pathway pairs with similarity above this threshold are connected in the network.\n\n0.5: Good starting point, moderate connectivity\nLower values (0.3-0.4): More permissive, denser networks, larger modules\nHigher values (0.6-0.8): More stringent, sparser networks, smaller modules\n\nFor Binary Cut and Hierarchical Clustering\nsim.cutoff acts as a dendrogram cutting height - determines where to cut the clustering tree.\n\n0.5: Moderate module granularity\nLower values (0.3-0.4): Cut lower in tree, more fine-grained modules\nHigher values (0.6-0.8): Cut higher in tree, fewer but larger modules\n\n\nKey Difference:\n\nIn \"girvan newman\", higher cutoffs = smaller modules.\nIn \"binary cut\"/\"hierarchical\", higher cutoffs = larger modules. Always examine your results and adjust based on the biological interpretability of resulting modules.",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>SimCluster: Traditional Similarity-based Clustering</span>"
    ]
  },
  {
    "objectID": "04_sim_cluster.html#results-interpretation",
    "href": "04_sim_cluster.html#results-interpretation",
    "title": "4  SimCluster: Traditional Similarity-based Clustering",
    "section": "4.4 Results Interpretation",
    "text": "4.4 Results Interpretation\nAfter running SimCluster, examine the results:\n\n# View analysis summary\nenriched_functional_modules\n# -------------------- \n# Analysis method: enrich_pathway \n# -------------------- \n# -----------Variable information------------\n# 119  features/markers in total\n# -----------Enrichment results and modules of genes------------\n# -----------GO------------\n# 1025 GO terms with p.adjust &lt; 0.05 \n# 250 GO modules \n# -----------KEGG------------\n# 48 KEGG pathways with p.adjust &lt; 0.05 \n# 29 KEGG modules\n# -----------Reactome------------\n# 48 Reactome pathways with p.adjust &lt; 0.05 \n# 13 Reactome modules\n# -----------Enrichment results and modules of metabolites------------\n# -----------HMDB------------\n# No HMDB results\n# No HMDB modules\n# -----------KEGG Metabolite------------\n# No KEGG metabolite results\n# No KEGG modules\n# -----------Functional modules------------\n# 158 Functional modules\n# -----------LLM module interpretation------------\n# No LLM module interpretation results\n# -------------------- \n# Processing information\n# 3 processings in total\n# enrich_pathway ---------- \n#   Package    Function.used                Time\n# 1    mapa enrich_pathway() 2025-06-09 21:32:51\n# merge_pathways ---------- \n#   Package    Function.used                Time\n# 1    mapa merge_pathways() 2025-06-09 21:34:00\n# merge_modules ---------- \n#   Package   Function.used                Time\n# 1    mapa merge_modules() 2025-06-09 21:34:56\n\n\n# Access functional modules\nhead(enriched_functional_modules@merged_module$functional_module_result)\n\n\n# View modules within specific databases\nhead(enriched_functional_modules@merged_pathway_go$module_result, 1)\n\nKey result columns:\n\nmodule: Module identifier (e.g., “go_Module_2”, “Functional_module_127”)\nmodule_annotation: Representative annotation (pathway name with the lowest adjusted p-value for ORA/ pathway name with the highest |NES| for GSEA) for the module\nDescription: Names of all the pathways in the module separated by ;\nmodule_content: All pathways/terms (i.e. nodes) grouped in this module\nCount: Number of genes/metabolites from the input genes/metabolites list in the module\np_adjust: Best (lowest) adjusted p-value among pathways in the module",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>SimCluster: Traditional Similarity-based Clustering</span>"
    ]
  },
  {
    "objectID": "04_sim_cluster.html#next-steps",
    "href": "04_sim_cluster.html#next-steps",
    "title": "4  SimCluster: Traditional Similarity-based Clustering",
    "section": "4.5 Next Steps",
    "text": "4.5 Next Steps\nContinue to EmbedCluster to learn about the advanced pathway biological text embedding approach to calculate similarity, or proceed to LLM Interpretation to add AI-powered functional annotations to your modules.",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>SimCluster: Traditional Similarity-based Clustering</span>"
    ]
  },
  {
    "objectID": "01_shinyapp_installation.html",
    "href": "01_shinyapp_installation.html",
    "title": "9  Installation",
    "section": "",
    "text": "Follow the steps below to install the latest development version of mapa shinyapp from GitHub (the script first installs BiocManager, remotes, and mapa if you don’t have them):\n\nif (!requireNamespace(\"BiocManager\", quietly = TRUE)) {\n install.packages(\"BiocManager\") \n}\n\nif (!requireNamespace(\"remotes\", quietly = TRUE)) {\n install.packages(\"remotes\") \n}\n\nremotes::install_github(\n  \"jaspershen-lab/mapa\",\n  dependencies = TRUE,\n  repos = BiocManager::repositories(),\n  upgrade = \"ask\"\n)\n\nremotes::install_github(\n  \"jaspershen-lab/mapashiny\",\n  dependencies = TRUE,\n  repos        = BiocManager::repositories(),\n  upgrade      = \"ask\"\n)",
    "crumbs": [
      "mapa Shiny App",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Installation</span>"
    ]
  },
  {
    "objectID": "04_embed_cluster.html",
    "href": "04_embed_cluster.html",
    "title": "5  EmbedCluster: Advanced Biotext Embedding-based Clustering",
    "section": "",
    "text": "5.1 Overview\nEmbedCluster is an advanced pathway clustering method in mapa that groups related pathways into functional modules based on biotext embedding similarity. This method leverages large language model (LLM) text embeddings to capture semantic relationships between pathway descriptions, enabling more nuanced clustering based on biological function rather than just gene overlap.\nEmbedCluster works in two main steps:\nStep 1: get_bioembedsim(): Extracts pathway text information, generates embeddings using LLM APIs, and calculates cosine similarity between pathways\nStep 2: merge_pathways_bioembedsim(): Groups pathways into functional modules based on biotext embedding similarity\nThis approach captures semantic relationships that traditional gene overlap methods might miss, particularly useful for identifying functionally related pathways with different gene sets.",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>EmbedCluster: Advanced Biotext Embedding-based Clustering</span>"
    ]
  },
  {
    "objectID": "04_embed_cluster.html#overview",
    "href": "04_embed_cluster.html#overview",
    "title": "5  Embedding and Clustering",
    "section": "6.1 Overview",
    "text": "6.1 Overview\nEmbedCluster works in two main steps:\nStep 1: get_bioembedsim(): Extracts pathway text information, generates embeddings using LLM APIs, and calculates cosine similarity between pathways\nStep 2: merge_pathways_bioembedsim(): Groups pathways into functional modules based on biotext embedding similarity\n\n\n\n\n\n\n\n\n\nFunction\nSimilarity Calculation\nClustering Method\nSim.cutoff Role\n\n\n\n\nget_bioembedsim()\nCosine similarity between text embeddings from: | N/A (similarity calculation only) | N/A | | | - OpenAI embedding models (text-embedding-3-small, etc.) | | | | | - Google Gemini embedding models (text-embedding-004) | | |\n\n\nmerge_pathways_bioembedsim()\nUses precomputed biotext embedding similarity matrix | Binary Cut, Girvan-Newman, Hierarchical | Binary Cut/Hierarchical: Dendrogram cutting height | | | | | Girvan-Newman: Edge filter\n\n\n\nThis approach captures semantic relationships that traditional gene overlap methods might miss, particularly useful for identifying functionally related pathways with different gene sets.",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Embedding and Clustering</span>"
    ]
  },
  {
    "objectID": "04_embed_cluster.html#step-1-calculate-biotext-embedding-similarity",
    "href": "04_embed_cluster.html#step-1-calculate-biotext-embedding-similarity",
    "title": "5  EmbedCluster: Advanced Biotext Embedding-based Clustering",
    "section": "5.2 Step 1: Calculate Biotext Embedding Similarity",
    "text": "5.2 Step 1: Calculate Biotext Embedding Similarity\nThe get_bioembedsim() function extracts pathway descriptions, generates text embeddings using text embedding model, and calculates pairwise cosine similarity between pathways.\n\nGene-based AnalysisMetabolite-based Analysis\n\n\n\nbioembed_similarity &lt;- \n  get_bioembedsim(\n    object = enriched_pathways,\n    api_provider = \"openai\",\n    text_embedding_model = \"text-embedding-3-small\",\n    api_key = \"your_openai_api_key\",\n    database = c(\"go\", \"kegg\", \"reactome\"),\n    # Statistical cutoffs\n    p.adjust.cutoff.go = 0.05,\n    p.adjust.cutoff.kegg = 0.05,\n    p.adjust.cutoff.reactome = 0.05,\n    count.cutoff.go = 5,\n    count.cutoff.kegg = 5,\n    count.cutoff.reactome = 5\n  )\n\n# Biotext embedding and similarity calculation finished\n\n\n\n\n\n\n\nTip\n\n\n\nAPI Key Setup:\n\nFor OpenAI: Obtain your API key from OpenAI Platform\nFor Gemini: Get your API key from Google AI Studio\n\nStore your API key securely and never commit it to version control.\n\n\n\n\n\nmet_bioembed_similarity &lt;- \n  get_bioembedsim(\n    object = met_enriched_pathways,\n    api_provider = \"openai\",\n    text_embedding_model = \"text-embedding-3-small\",\n    api_key = \"your_openai_api_key\",\n    database = c(\"hmdb\", \"metkegg\"),  # human only for HMDB\n    # Statistical cutoffs for metabolites\n    p.adjust.cutoff.hmdb = 0.05,\n    p.adjust.cutoff.metkegg = 0.05,\n    count.cutoff.hmdb = 5,\n    count.cutoff.metkegg = 5\n  )\n\n\n\n\n\n5.2.1 How EmbedCluster Works\nThe biotext embedding process involves several steps:\n\nText Extraction: For each pathway, the function extracts:\n\nGO terms: Term name + definition from QuickGO API\nKEGG pathways: Pathway name + description from KEGG REST API\n\nReactome pathways: Pathway name + summary from Reactome API\nMetabolite pathways: Pathway name + description from respective databases\n\nText Embedding: The combined text information is sent to the specified text embedding model to generate high-dimensional vector representations\nSimilarity Calculation: Cosine similarity is calculated between all pathway embedding vectors\n\n\n\n\n\n\n\nTip\n\n\n\nUnderstanding Text Embeddings: Text embeddings convert text into numerical vectors that capture semantic meaning. For a comprehensive introduction to embeddings, including how they work, model details and best practices, see the OpenAI Embeddings Guide.",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>EmbedCluster: Advanced Biotext Embedding-based Clustering</span>"
    ]
  },
  {
    "objectID": "04_embed_cluster.html#step-2-cluster-pathways-using-biotext-similarity",
    "href": "04_embed_cluster.html#step-2-cluster-pathways-using-biotext-similarity",
    "title": "5  EmbedCluster: Advanced Biotext Embedding-based Clustering",
    "section": "5.3 Step 2: Cluster Pathways Using Biotext Similarity",
    "text": "5.3 Step 2: Cluster Pathways Using Biotext Similarity\nThe merge_pathways_bioembedsim() function uses the calculated biotext embedding similarity matrix to group pathways into functional modules.\n\nenriched_bioembed_modules &lt;- \n  merge_pathways_bioembedsim(\n    object = bioembed_similarity,\n    sim.cutoff = 0.5,\n    cluster_method = \"girvan newman\"  # Options: \"binary cut\", \"girvan newman\", \"hierarchical\"\n  )\n\n# Identifying funcitonal modules...\n# Joining with `by = join_by(node)`\n# Done\n\nEmbedCluster uses the same three clustering algorithms as SimCluster. For detailed explanations of each clustering method and parameter interpretation, see Section 4.3 in SimCluster. The key difference is that EmbedCluster operates on biotext embedding similarity matrices rather than traditional gene/metabolite overlap similarity.",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>EmbedCluster: Advanced Biotext Embedding-based Clustering</span>"
    ]
  },
  {
    "objectID": "04_embed_cluster.html#clustering-methods",
    "href": "04_embed_cluster.html#clustering-methods",
    "title": "5  EmbedCluster: Advanced Biotext Embedding-based Clustering",
    "section": "5.4 Clustering Methods",
    "text": "5.4 Clustering Methods\nEmbedCluster supports the same three clustering algorithms as SimCluster:\n\n5.4.1 1. Binary Cut (Recommended)\nUses the simplifyEnrichment algorithm - efficient and well-suited for biological pathway clustering.\n\ncluster_method = \"binary cut\"\nsim.cutoff = 0.5  # Cutoff for cutting the dendrogram\n\n\n\n5.4.2 2. Girvan-Newman\nCommunity detection based on edge betweenness - identifies natural communities in pathway networks.\n\ncluster_method = \"girvan newman\" \nsim.cutoff = 0.5  # Only edges above this similarity are included\n\n\n\n5.4.3 3. Hierarchical Clustering\nTraditional hierarchical clustering with customizable linkage methods.\n\ncluster_method = \"hierarchical\"\nhclust.method = \"complete\"  # Linkage method: \"complete\", \"average\", \"single\", etc.\nsim.cutoff = 0.5           # Height for cutting dendrogram\n\n\n\n\n\n\n\nNote\n\n\n\nSimilarity Cutoff Interpretation:\nThe meaning of sim.cutoff depends on your clustering method:\n\nBinary Cut & Hierarchical: Higher values create larger modules (cut higher in dendrogram)\n\n0.3-0.4: Fine-grained, many small modules\n0.5-0.6: Moderate module sizes (recommended starting point)\n\n0.7-0.8: Fewer, larger modules\n\nGirvan-Newman: Higher values create smaller modules (stricter edge filtering)\n\n0.3-0.4: More connections, larger modules\n0.5-0.6: Moderate connectivity (recommended)\n0.7-0.8: Sparse networks, smaller modules\n\n\nThis is opposite to SimCluster behavior for some methods, so always examine your results!",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>EmbedCluster: Advanced Biotext Embedding-based Clustering</span>"
    ]
  },
  {
    "objectID": "04_embed_cluster.html#embedding-model-selection",
    "href": "04_embed_cluster.html#embedding-model-selection",
    "title": "5  EmbedCluster: Advanced Biotext Embedding-based Clustering",
    "section": "5.4 Embedding Model Selection",
    "text": "5.4 Embedding Model Selection\nChoose your embedding model based on your needs:\n\n5.4.1 OpenAI Models\n\n\n\n\n\n\n\n\n\n\nModel\nDimensions\nPerformance\nCost\nUse Case\n\n\n\n\ntext-embedding-3-small\n1,536\nGood\nLower\nRecommended for most analyses\n\n\ntext-embedding-3-large\n3,072\nBetter\nHigher\nHigh-accuracy applications\n\n\n\n\n\n5.4.2 Gemini Models\n\n\n\n\n\n\n\n\n\nModel\nDimensions\nFeatures\nUse Case\n\n\n\n\ntext-embedding-004\n768\nAuto-summarization for long text\nAlternative when OpenAI unavailable\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nModel Recommendations: - Start with text-embedding-3-small for cost-effective, high-quality results - Use text-embedding-3-large when you need maximum accuracy - Consider text-embedding-004 if you prefer Google’s ecosystem or need automatic text summarization",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>EmbedCluster: Advanced Biotext Embedding-based Clustering</span>"
    ]
  },
  {
    "objectID": "04_embed_cluster.html#results-interpretation",
    "href": "04_embed_cluster.html#results-interpretation",
    "title": "5  EmbedCluster: Advanced Biotext Embedding-based Clustering",
    "section": "5.4 Results Interpretation",
    "text": "5.4 Results Interpretation\nAfter running EmbedCluster, examine the results:\n\n# View analysis summary\nenriched_bioembed_modules\n# -------------------- \n# Analysis method: enrich_pathway \n# -------------------- \n# -----------Variable information------------\n# 119  features/markers in total\n# -----------Enrichment results and modules of genes------------\n# -----------GO------------\n# 1025 GO terms with p.adjust &lt; 0.05 \n# No GO modules\n# -----------KEGG------------\n# 48 KEGG pathways with p.adjust &lt; 0.05 \n# No KEGG modules\n# -----------Reactome------------\n# 48 Reactome pathways with p.adjust &lt; 0.05 \n# No Reactome modules\n# -----------Enrichment results and modules of metabolites------------\n# -----------HMDB------------\n# No HMDB results\n# No HMDB modules\n# -----------KEGG Metabolite------------\n# No KEGG metabolite results\n# No KEGG modules\n# -----------Functional modules------------\n# 60 Functional modules\n# -----------LLM module interpretation------------\n# No LLM module interpretation results\n# -------------------- \n# Processing information\n# 3 processings in total\n# enrich_pathway ---------- \n#   Package    Function.used                Time\n# 1    mapa enrich_pathway() 2025-06-10 10:50:36\n# merge_pathways ---------- \n#   Package     Function.used                Time\n# 1    mapa get_bioembedsim() 2025-06-10 11:27:59\n# merge_modules ---------- \n#   Package                                      Function.used                Time\n# 1    mapa get_bioembedsim() and merge_pathways_bioembedsim() 2025-06-10 11:40:09\n\nAccess the biotext embedding-based functional modules:\n\n# View functional modules\nhead(enriched_bioembed_modules@merged_module$functional_module_result)\n\n# Access similarity matrix\nsimilarity_matrix &lt;- bioembed_similarity$sim_matrix\nhead(similarity_matrix[1:5, 1:5])\n#            GO:0016049 GO:0031589 GO:1900046 GO:0071375 GO:0061900\n# GO:0016049  1.0000000  0.3779020  0.2286780  0.3376592  0.4369859\n# GO:0031589  0.3779020  1.0000000  0.2702301  0.3123477  0.3938414\n# GO:1900046  0.2286780  0.2702301  1.0000000  0.3277389  0.2867548\n# GO:0071375  0.3376592  0.3123477  0.3277389  1.0000000  0.4493753\n# GO:0061900  0.4369859  0.3938414  0.2867548  0.4493753  1.0000000\n\nKey result columns:\n\nmodule: Module identifier (e.g., “Functional_module_127”)\nmodule_annotation: Representative annotation (pathway name with the lowest adjusted p-value for ORA/ pathway name with the highest |NES| for GSEA) for the module\nDescription: Names of all the pathways in the module separated by ;\nmodule_content: All pathways/terms (i.e. nodes) grouped in this module\nCount: Number of genes/metabolites from the input genes/metabolites list in the module\np_adjust: Best (lowest) adjusted p-value among pathways in the module",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>EmbedCluster: Advanced Biotext Embedding-based Clustering</span>"
    ]
  },
  {
    "objectID": "04_embed_cluster.html#advantages-and-considerations",
    "href": "04_embed_cluster.html#advantages-and-considerations",
    "title": "5  EmbedCluster: Advanced Biotext Embedding-based Clustering",
    "section": "5.5 Advantages and Considerations",
    "text": "5.5 Advantages and Considerations\nAdvantages of EmbedCluster\n\nSemantic Understanding: Considers pathway descriptions and biological context, capturing functional relationships beyond gene overlap\nCross-database Integration: Better at combining pathways from different databases\nNovel Discoveries: May identify functionally related pathways missed by traditional methods\n\nConsiderations\n\nAPI Dependency: Requires internet connection and API access\nCost: API usage may incur costs for large analyses\nProcessing Time: Longer than traditional methods due to API calls\nReproducibility: Results may vary slightly due to API responses (though embedding vectors are typically stable)\n\nWhen to Use EmbedCluster vs SimCluster\n\n\n\n\n\n\n\nUse EmbedCluster when:\nUse SimCluster when:\n\n\n\n\nExploring novel functional relationships\nWorking with limited internet/API access\n\n\nInterested in semantic pathway similarity\nNeed deterministic, reproducible results",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>EmbedCluster: Advanced Biotext Embedding-based Clustering</span>"
    ]
  },
  {
    "objectID": "04_embed_cluster.html#next-steps",
    "href": "04_embed_cluster.html#next-steps",
    "title": "5  EmbedCluster: Advanced Biotext Embedding-based Clustering",
    "section": "5.6 Next Steps",
    "text": "5.6 Next Steps\nContinue to LLM Interpretation to add AI-powered functional annotations to your modules, or proceed to Data Visualization to create informative plots of your clustering results.",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>EmbedCluster: Advanced Biotext Embedding-based Clustering</span>"
    ]
  },
  {
    "objectID": "04_sim_cluster.html#sec-cluster_method",
    "href": "04_sim_cluster.html#sec-cluster_method",
    "title": "4  SimCluster: Traditional Similarity-based Clustering",
    "section": "4.3 Clustering Methods (For merge_modules())",
    "text": "4.3 Clustering Methods (For merge_modules())\nSimCluster offers three clustering algorithms, please set parameters as follows:\n\nGirvan-Newman (Default)\nCommunity detection based on edge betweenness - good for identifying natural communities in networks.\n\ncluster_method = \"girvan newman\"\nsim.cutoff = 0.5  # Only edges above this similarity are included\n\nBinary Cut\nUses the simplifyEnrichment algorithm - efficient for large datasets.\n\ncluster_method = \"binary cut\"\nsim.cutoff = 0.5  # Cutoff for cutting the dendrogram (Higher values: More permissive, larger modules)\n\nHierarchical Clustering\nTraditional hierarchical clustering with distance thresholds.\n\ncluster_method = \"hierarchical\"\nhclust.method = \"complete\"  # Linkage method\nsim.cutoff = 0.5           # Height for cutting dendrogram (Higher values: More permissive, larger modules)\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe interpretation of sim.cutoff depends on your chosen clustering method:\n\nFor Girvan-Newman Clustering\nsim.cutoff acts as an edge filter - only pathway pairs with similarity above this threshold are connected in the network.\n\n0.5: Good starting point, moderate connectivity\nLower values (0.3-0.4): More permissive, denser networks, larger modules\nHigher values (0.6-0.8): More stringent, sparser networks, smaller modules\n\nFor Binary Cut and Hierarchical Clustering\nsim.cutoff acts as a dendrogram cutting height - determines where to cut the clustering tree.\n\n0.5: Moderate module granularity\nLower values (0.3-0.4): Cut lower in tree, more fine-grained modules\nHigher values (0.6-0.8): Cut higher in tree, fewer but larger modules\n\n\nKey Difference:\n\nIn \"girvan newman\", higher cutoffs = smaller modules.\nIn \"binary cut\"/\"hierarchical\", higher cutoffs = larger modules. Always examine your results and adjust based on the biological interpretability of resulting modules.",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>SimCluster: Traditional Similarity-based Clustering</span>"
    ]
  },
  {
    "objectID": "05_llm_interpretation.html",
    "href": "05_llm_interpretation.html",
    "title": "6  LLM Interpretation",
    "section": "",
    "text": "6.1 Overview\nThe llm_interpret_module() function provides AI-powered interpretation of functional modules by integrating Large Language Models (LLMs) with a Retrieval-Augmented Generation (RAG) strategy. This approach combines pathway information, scientific literature, and advanced text analysis to generate meaningful names and summaries for your functional modules.\nThe LLM interpretation process integrates multiple information sources to provide comprehensive module annotations:\nThis approach leverages both structured biological knowledge and cutting-edge research to provide contextually rich interpretations of your functional modules.",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>LLM Interpretation</span>"
    ]
  },
  {
    "objectID": "05_llm_interpretation.html#overview",
    "href": "05_llm_interpretation.html#overview",
    "title": "6  LLM Interpretation",
    "section": "",
    "text": "Information Sources:\n\nPathway descriptions from GO, KEGG, Reactome, and metabolite databases\nGene/metabolite names from your input data\n\nScientific literature retrieved from PubMed based on pathway and molecule relevance\nLocal documents (optional) - your own research papers or relevant literature\n\nAnalysis Pipeline:\n\nInformation Extraction: Extracts pathway descriptions and molecule information\nLiterature Retrieval: Searches PubMed for relevant scientific papers\nRAG Strategy: Uses embeddings to find and rank the most relevant literature, see Section 6.2\nLLM Generation: Generates biological module names and research summaries",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>LLM Interpretation</span>"
    ]
  },
  {
    "objectID": "05_llm_interpretation.html#basic-usage",
    "href": "05_llm_interpretation.html#basic-usage",
    "title": "6  LLM Interpretation",
    "section": "6.3 Basic Usage",
    "text": "6.3 Basic Usage\n\nGene-based Module InterpretationMetabolite-based Module Interpretation\n\n\n\nllm_interpreted_modules &lt;- \n  llm_interpret_module(\n    object = enriched_functional_modules,\n    llm_model = \"gpt-4o-mini-2024-07-18\",\n    embedding_model = \"text-embedding-3-small\", \n    api_key = \"your_openai_api_key\",\n    embedding_output_dir = \"embedding_output/\",  # Output directory to store embeddings generated during analysis\n    module_content_number_cutoff = 1,\n    orgdb = org.Hs.eg.db                         # Necessary for gene annotation\n  )\n#   |============================================================================================================================| 100%, Elapsed 00:42\n# Processing module: Functional_module_2\n# Including PID number: 70\n#   |============================================================================================================================| 100%, Elapsed 00:07\n# ...\n# Processing module 1/10: Functional_module_2\n# - Generating module embeddings...\n# - Reading and calculating PubMed similarity...\n# - Local documents not found, skipping local similarity calculation\n# - Reading document content...                                                                                                                        \n# - Processing document content using GPT...                                                                                                           \n#   |============================================================================================================================| 100%, Elapsed 00:35\n# - Filtering the most relevant results...\n# Functional_module_2 processing completed\n# ...\n# All modules processing completed!\n# Start to generate name and summary for functional modules ...\n# Done\n\n\n\n\nmet_llm_interpreted_modules &lt;- \n  llm_interpret_module(\n    object = met_enriched_functional_modules,\n    llm_model = \"gpt-4o-mini-2024-07-18\",\n    embedding_model = \"text-embedding-3-small\",\n    api_key = \"your_openai_api_key\",\n    embedding_output_dir = \"met_embedding_output/\",\n    module_content_number_cutoff = 1\n  )",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>LLM Interpretation</span>"
    ]
  },
  {
    "objectID": "05_llm_interpretation.html#key-parameters",
    "href": "05_llm_interpretation.html#key-parameters",
    "title": "6  LLM Interpretation",
    "section": "6.4 Key Parameters",
    "text": "6.4 Key Parameters\n\n6.4.1 LLM and API Settings\n\n\n\n\n\n\n\n\n\nParameter\nDescription\nDefault\nNotes\n\n\n\n\nllm_model\nGPT model for text generation\n\"gpt-4o-mini-2024-07-18\"\nCurrently supports OpenAI models only\n\n\nembedding_model\nModel for text embeddings\n\"text-embedding-3-small\"\nUsed for document similarity\n\n\napi_key\nOpenAI API key\nRequired\nStore securely, never commit to version control\n\n\n\n\n\n6.4.2 Analysis Control\n\n\n\n\n\n\n\n\n\nParameter\nDescription\nDefault\nUse Case\n\n\n\n\nmodule_content_number_cutoff\nMinimum pathways per module\n1\nFilter small modules to focus on substantial ones\n\n\nyears\nYears to search back in PubMed\n5\nBalance between recent findings and comprehensive coverage\n\n\nretmax\nMax papers per PubMed search\n10\nControl API usage and processing time\n\n\nsimilarity_filter_num\nPapers kept after similarity ranking\n20\nFirst-stage filtering based on text similarity\n\n\nGPT_filter_num\nPapers kept after GPT ranking\n5\nFinal selection of most relevant papers\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nAPI Usage & Processing Time: Each module requires multiple API calls (embedding + LLM generation), with costs scaling by number of modules and literature volume, so consider using module_content_number_cutoff to focus on important modules. Typical processing takes 2-5 minutes per module, with time increasing for more literature and larger modules, though progress is displayed during processing.\n\n\n\n\n6.4.3 Optional Enhancements\n\n\n\n\n\n\n\n\n\nParameter\nDescription\nDefault\nBenefits\n\n\n\n\nphenotype\nDisease/condition context\nNULL\nAdds disease-specific interpretation\n\n\nlocal_corpus_dir\nLocal directory with your own PDF files\nNULL\nIncorporates your own research or relevant literature to enhance the interpretation\n\n\noutput_prompt\nInclude prompts in results\nTRUE\nUseful for understanding AI reasoning",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>LLM Interpretation</span>"
    ]
  },
  {
    "objectID": "05_llm_interpretation.html#understanding-the-rag-strategy",
    "href": "05_llm_interpretation.html#understanding-the-rag-strategy",
    "title": "6  LLM Interpretation",
    "section": "6.2 Understanding the RAG Strategy",
    "text": "6.2 Understanding the RAG Strategy\n\n\n\n\n\nThe Retrieval-Augmented Generation (RAG) strategy works in several stages:\nStage 1: Literature Search - Searches PubMed using pathway names and gene/metabolite information - Retrieves abstracts and titles for relevant papers - Includes reference papers cited in pathway databases\nStage 2: Embedding-based Similarity - Generates text embeddings for module descriptions (pathways + molecules) - Calculates similarity between module embeddings and paper abstracts - Filters top papers based on cosine similarity scores\nStage 3: GPT-powered Reranking - Uses LLM to assess relevance of each paper to the specific module - Assigns relevance scores (0-1) based on biological context - Cleans text by removing irrelevant metadata (author names, affiliations)\nStage 4: Final Generation - Combines module information with top-ranked papers - Generates biologically meaningful module names - Produces research summaries highlighting current knowledge\nThis multi-stage approach ensures that generated annotations are both scientifically accurate and contextually relevant.",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>LLM Interpretation</span>"
    ]
  },
  {
    "objectID": "05_llm_interpretation.html#results-interpretation",
    "href": "05_llm_interpretation.html#results-interpretation",
    "title": "6  LLM Interpretation",
    "section": "6.5 Results Interpretation",
    "text": "6.5 Results Interpretation\nAfter running LLM interpretation, examine the results:\n\n# View analysis summary\nllm_interpreted_modules\n# -------------------- \n# Analysis method: enrich_pathway \n# -------------------- \n# -----------Variable information------------\n# 119  features/markers in total\n# -----------Enrichment results and modules of genes------------\n# -----------GO------------\n# 1025 GO terms with p.adjust &lt; 0.05 \n# 250 GO modules \n# -----------KEGG------------\n# 48 KEGG pathways with p.adjust &lt; 0.05 \n# 29 KEGG modules\n# -----------Reactome------------\n# 48 Reactome pathways with p.adjust &lt; 0.05 \n# 13 Reactome modules\n# -----------Enrichment results and modules of metabolites------------\n# -----------HMDB------------\n# No HMDB results\n# No HMDB modules\n# -----------KEGG Metabolite------------\n# No KEGG metabolite results\n# No KEGG modules\n# -----------Functional modules------------\n# 158 Functional modules\n# -----------LLM module interpretation------------\n# 10 LLM interpreted modules\n# -------------------- \n# Processing information\n# 4 processings in total\n# enrich_pathway ---------- \n#   Package    Function.used                Time\n# 1    mapa enrich_pathway() 2025-06-10 10:50:36\n# merge_pathways ---------- \n#   Package    Function.used                Time\n# 1    mapa merge_pathways() 2025-06-10 10:57:22\n# merge_modules ---------- \n#   Package   Function.used                Time\n# 1    mapa merge_modules() 2025-06-10 10:58:25\n# llm_interpret_module ---------- \n#   Package          Function.used                Time\n# 1    mapa llm_interpret_module() 2025-06-10 14:24:47",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>LLM Interpretation</span>"
    ]
  },
  {
    "objectID": "05_llm_interpretation.html#result-components",
    "href": "05_llm_interpretation.html#result-components",
    "title": "6  LLM Interpretation",
    "section": "6.7 Result Components",
    "text": "6.7 Result Components\nFor each interpreted module, the results include:\n\nBasic LLM InterpretationPhenotype-specific InterpretationRetrieved LiteratureProcessing Details\n\n\n\n# Core interpretation results of a interpreted module\nmodule_result &lt;- llm_interpreted_modules@llm_module_interpretation$Functional_module_2\n\n# Module name generated by LLM\nmodule_name &lt;- module_result$generated_name$module_name\n\n# Summary of current research\nmodule_summary &lt;- module_result$generated_name$summary\n\n# Confidence score (0-1)  \nconfidence_score &lt;- module_result$generated_name$confidence_score\n\n\n\n\n# When phenotype parameter was specified, results contain disease-specific interpretation and relevance\nmodule_result &lt;- llm_interpreted_modules@llm_module_interpretation$Functional_module_2\nphenotype_result &lt;- module_result$generated_name$phenotype_analysis\n\n\n\n\n# Papers used for interpretation\nmodule_result &lt;- llm_interpreted_modules@llm_module_interpretation$Functional_module_2\nrelated_papers &lt;- module_result$related_paper\n\n# Access individual papers\npaper1 &lt;- related_papers[[1]]\npaper1$title           # Paper title and PubMedID\n# [1] \"Modulation of Kit/stem cell factor receptor-induced signaling by protein kinase C. (PubMedID:7520444)\"\n\npaper1$relevance_score # Relevance score assigned by GPT\n# [1] 0.9\n\npaper1$cleaned_text    # Cleaned abstract text\n# [1] \"The Kit/stem cell factor receptor (Kit/SCF-R) is a transmembrane tyrosine kinase receptor of importance for the normal development of hemopoietic cells, melanoblasts, and germ cells. We recently reported that protein kinase C (PKC) is involved in a negative feedback loop regulating the Kit/SCF-R by direct phosphorylation on serine residues in the receptor... In conclusion, SCF-induced PI-3'-kinase activation paralleled the increased SCF-induced mitogenicity after inhibition of PKC.\"\n\n\n\nIf output_prompt = TRUE, results contains the exact prompt sent to the LLM for transparency:\n\nmodule_result &lt;- llm_interpreted_modules@llm_module_interpretation$Functional_module_2\nprompt_info &lt;- module_result$generated_name$prompt",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>LLM Interpretation</span>"
    ]
  },
  {
    "objectID": "05_llm_interpretation.html#cost-and-performance-considerations",
    "href": "05_llm_interpretation.html#cost-and-performance-considerations",
    "title": "6  LLM Interpretation",
    "section": "6.7 Cost and Performance Considerations",
    "text": "6.7 Cost and Performance Considerations\nAPI Usage: - Each module requires multiple API calls (embedding + LLM generation) - Costs scale with number of modules and literature volume - Consider using module_content_number_cutoff to focus on important modules\nProcessing Time: - Typical processing: 2-5 minutes per module - Time increases with more literature and larger modules - Progress is displayed during processing\nQuality vs. Efficiency Trade-offs:\n\n\n\n\n\n\n\n\n\nSetting\nSpeed\nQuality\nUse Case\n\n\n\n\nsimilarity_filter_num = 10, GPT_filter_num = 3\nFast\nGood\nQuick exploration\n\n\nsimilarity_filter_num = 20, GPT_filter_num = 5\nMedium\nBetter\nStandard analysis\n\n\nsimilarity_filter_num = 30, GPT_filter_num = 8\nSlow\nBest\nComprehensive study",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>LLM Interpretation</span>"
    ]
  },
  {
    "objectID": "05_llm_interpretation.html#best-practices",
    "href": "05_llm_interpretation.html#best-practices",
    "title": "6  LLM Interpretation",
    "section": "6.8 Best Practices",
    "text": "6.8 Best Practices\n\nStart Small: Begin with a subset of modules to estimate costs and processing time\nOptimize Parameters: Adjust filtering parameters based on your module complexity\nUse Phenotype Context: Specify relevant diseases/conditions for more targeted interpretations\nInclude Local Literature: Add your own papers for domain-specific insights\nReview Results: Examine confidence scores and retrieved literature quality\nIterate: Refine parameters based on initial results",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>LLM Interpretation</span>"
    ]
  },
  {
    "objectID": "05_llm_interpretation.html#next-steps",
    "href": "05_llm_interpretation.html#next-steps",
    "title": "6  LLM Interpretation",
    "section": "6.9 Next Steps",
    "text": "6.9 Next Steps\nContinue to Data Visualization to create informative plots showcasing your LLM-interpreted modules.",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>LLM Interpretation</span>"
    ]
  },
  {
    "objectID": "05_llm_interpretation.html#sec-rag",
    "href": "05_llm_interpretation.html#sec-rag",
    "title": "6  LLM Interpretation",
    "section": "6.2 Understanding the RAG Strategy",
    "text": "6.2 Understanding the RAG Strategy\n\n\n\n\n\nThe Retrieval-Augmented Generation (RAG) strategy works in several stages:\nStage 1: Literature Search - Searches PubMed using pathway names and gene/metabolite information - Retrieves abstracts and titles for relevant papers - Includes reference papers cited in pathway databases\nStage 2: Embedding-based Similarity - Generates text embeddings for module descriptions (pathways + molecules) - Calculates similarity between module embeddings and paper abstracts - Filters top papers based on cosine similarity scores\nStage 3: GPT-powered Reranking - Uses LLM to assess relevance of each paper to the specific module - Assigns relevance scores (0-1) based on biological context - Cleans text by removing irrelevant metadata (author names, affiliations)\nStage 4: Final Generation - Combines module information with top-ranked papers - Generates biologically meaningful module names - Produces research summaries highlighting current knowledge\nThis multi-stage approach ensures that generated annotations are both scientifically accurate and contextually relevant.",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>LLM Interpretation</span>"
    ]
  },
  {
    "objectID": "05_llm_interpretation.html#updated-functional-module-results",
    "href": "05_llm_interpretation.html#updated-functional-module-results",
    "title": "6  LLM Interpretation",
    "section": "6.6 Updated Functional Module Results",
    "text": "6.6 Updated Functional Module Results\nThe functional module results are automatically updated with a new column llm_module_name, which is the LLM-generated names:\n\n# View updated results with LLM names\nhead(llm_interpreted_modules@merged_module$functional_module_result)\n\nKey result columns:\n\nllm_module_name: AI-generated biological module name\nmodule_annotation: Original representative annotation (fallback if LLM interpretation unavailable)",
    "crumbs": [
      "mapa R Package",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>LLM Interpretation</span>"
    ]
  }
]