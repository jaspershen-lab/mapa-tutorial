[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MAPA tutorial",
    "section": "",
    "text": "Preface",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#mapa-functional-module-identification-and-annotation-for-pathway-analysis-results-using-llm",
    "href": "index.html#mapa-functional-module-identification-and-annotation-for-pathway-analysis-results-using-llm",
    "title": "MAPA tutorial",
    "section": "MAPA: Functional Module Identification and Annotation for Pathway Analysis Results Using LLM",
    "text": "MAPA: Functional Module Identification and Annotation for Pathway Analysis Results Using LLM\nMAPA is a streamlined workflow for pathway-enrichment analysis and enrichment result interpretation that turns large omics datasets into clear biological insight. It is developed by the Shen Lab at Nanyang Technological University, Singapore. It:\n\nPathway analysis: Detects enriched pathways from your data via over-representation analysis (ORA) or gene set enrichment analysis (GSEA).\nFunctional module identification: Clusters overlapping or functional-related pathways into functional modules, so every informative pathway‚Äînot just the ‚Äútop 5 or 10‚Äù‚Äîcontributes to the story.\nFunctional module annotation: Summarises each module with large-language models (LLM) (e.g., ChatGPT), linking the results to the latest findings in literature from PubMed.\n\nThe outcome is a fast, reproducible, and user-friendly pipeline that reduces redundancy and delivers biologically meaningful interpretations for enrichment results.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#aim-of-this-tutorial",
    "href": "index.html#aim-of-this-tutorial",
    "title": "MAPA tutorial",
    "section": "Aim of This Tutorial",
    "text": "Aim of This Tutorial\nThis guide walks you through the two faces of mapa: the R package for command-line workflows and the Shiny app for point-and-click exploration. By the end, with your gene/metabolite list as input, you will be able to:\n\nMerge overlapping enriched pathways into informative functional modules.\nGenerate biological interpretations of each module with large-language models.\nCreate publication-ready visuals of enrichment results, module networks, and pathway‚Äìmolecule relationships.\nExport a comprehensive report that gathers every table, figure, and LLM-based summary in one place.\n\nWhether you favour the command line or a browser, the tutorial gives you everything you need to apply MAPA confidently in your bioinformatics projects.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#contact-us",
    "href": "index.html#contact-us",
    "title": "MAPA tutorial",
    "section": "üì• Contact us",
    "text": "üì• Contact us\n\nüì© Email xiaotao.shen@outlook.com\nüè† Shen Lab website shen-lab.org\nüí¨ WeChat jaspershen1990\nüê¶ Twitter xiaotaoshen1990",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#more-links",
    "href": "index.html#more-links",
    "title": "MAPA tutorial",
    "section": "üîó More links",
    "text": "üîó More links\n\nüìñ Citation\nüè† MAPA project website\n‚òÅÔ∏è Online MAPA Shiny",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "01_package_installation.html",
    "href": "01_package_installation.html",
    "title": "1¬† Installation",
    "section": "",
    "text": "Follow the steps below to install the latest development version of MAPA from GitHub (the script first installs BiocManager and remotes if you don‚Äôt have them):\n\nif (!requireNamespace(\"BiocManager\", quietly = TRUE)) {\n install.packages(\"BiocManager\") \n}\n\nif (!requireNamespace(\"remotes\", quietly = TRUE)) {\n install.packages(\"remotes\") \n}\n\nremotes::install_github(\n  \"jaspershen-lab/mapa\",\n  dependencies = TRUE,\n  repos = BiocManager::repositories(),\n  upgrade = \"ask\"\n)\n\n\n\n\n\n\n\nNote\n\n\n\nPossible Dependency Conflict: If mapa installation failed because the simplifyEnrichment version is incompatible, update Bioconductor to version 3.20 or newer. To do that, you‚Äôll need R environment 4.4.0 or newer.\n\n\n\nlibrary(mapa)\n\nLoading required package: massdataset\n\n\nWarning in fun(libname, pkgname): mzR has been built against a different Rcpp version (1.0.13.1)\nthan is installed on your system (1.1.0). This might lead to errors\nwhen loading mzR. If you encounter such issues, please send a report,\nincluding the output of sessionInfo() to the Bioc support forum at \nhttps://support.bioconductor.org/. For details see also\nhttps://github.com/sneumann/mzR/wiki/mzR-Rcpp-compiler-linker-issue.\n\n\nWarning: package 'ggplot2' was built under R version 4.4.1\n\n\nmassdataset 1.0.34 (2025-04-15 12:45:59.511718)\n\n\n\nAttaching package: 'massdataset'\n\n\nThe following object is masked from 'package:stats':\n\n    filter",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Installation</span>"
    ]
  },
  {
    "objectID": "02_input.html",
    "href": "02_input.html",
    "title": "2¬† Data input and preprocessing",
    "section": "",
    "text": "2.1 Input Data Format Requirements",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Data input and preprocessing</span>"
    ]
  },
  {
    "objectID": "02_input.html#sec-input_data_requirement",
    "href": "02_input.html#sec-input_data_requirement",
    "title": "2¬† Data input and preprocessing",
    "section": "",
    "text": "2.1.1 Gene Expression Data\nmapa accepts gene expression data with flexible identifier requirements, depending on your analysis type. Your input data must contain at least one of the following identifier columns:\n\nensembl: Ensembl gene IDs (e.g., ‚ÄúENSG00000141510‚Äù)\nentrezid: NCBI Entrez gene IDs (e.g., ‚Äú7157‚Äù)\nuniprot: UniProtKB accession numbers (e.g., ‚ÄúP04637‚Äù)\nsymbol: Gene symbols (e.g., ‚ÄúTP53‚Äù)\n\n\n\n\n\n\n\nImportant\n\n\n\nColumn names must be in lowercase.\n\n\n\nOver-Representation Analysis (ORA)Gene Set Enrichment Analysis (GSEA)\n\n\nFor ORA, you only need one identifier column plus any additional metadata:\n\n# Example ORA input data\nora_data &lt;- readr::read_csv(\"examples/example_ora_gene_data.csv\")\nhead(ora_data)\n# # A tibble: 6 √ó 2\n#   variable_id ensembl        \n#   &lt;chr&gt;       &lt;chr&gt;          \n# 1 gene_1      ENSG00000100097\n# 2 gene_2      ENSG00000139193\n# 3 gene_3      ENSG00000163513\n# 4 gene_4      ENSG00000127863\n# 5 gene_5      ENSG00000115604\n# 6 gene_6      ENSG00000153002\n\n\n\nFor GSEA, you need:\n\nOne identifier column (ensembl, entrezid, uniprot, or symbol)\nAn order_by column containing numeric values to rank genes (This is used to create the ranked gene list required for GSEA. Common choices like Log2 fold change values, pvalue)\n\n\n# Example GSEA input data\ngsea_data &lt;- readr::read_csv(\"examples/example_gsea_data.csv\")\nhead(gsea_data)\n# # A tibble: 6 √ó 8\n#   variable_id ensembl         genename                                                 genetype       length     fc  p_value p_value_adjust\n#   &lt;chr&gt;       &lt;chr&gt;           &lt;chr&gt;                                                    &lt;chr&gt;           &lt;dbl&gt;  &lt;dbl&gt;    &lt;dbl&gt;          &lt;dbl&gt;\n# 1 gene_1      ENSG00000160072 ATPase family AAA domain containing 3B                   protein-coding  26084 0.358  0.00517         0.0202 \n# 2 gene_11     ENSG00000157911 peroxisomal biogenesis factor 10                         protein-coding   9834 0.234  0.000261        0.00514\n# 3 gene_12     ENSG00000269896 small nuclear ribonucleoprotein polypeptide N pseudogene pseudo            214 0.0665 0.00884         0.0277 \n# 4 gene_16     ENSG00000157933 SKI proto-oncogene                                       protein-coding  82826 0.232  0.000220        0.00490\n# 5 gene_29     ENSG00000149527 phospholipase C eta 2                                    protein-coding  79553 0.0373 0.00720         0.0244 \n# 6 gene_31     ENSG00000171621 splA/ryanodine receptor domain and SOCS box containing 1 protein-coding  76639 2.68   0.00636         0.0226 \n\n\n\n\n\n\n2.1.2 Metabolite Data\nFor metabolite analysis, mapa currently supports Over-Representation Analysis (ORA) only. You only need one identifier column plus any additional metadata (Column names must be in lowercase):\n\nhmdbid: Human Metabolome Database IDs (e.g., ‚ÄúHMDB0000001‚Äù, ‚ÄúHMDB0000002‚Äù) - Human only\nkeggid: KEGG Compound IDs (e.g., ‚ÄúC00001‚Äù, ‚ÄúC00002‚Äù) - All organisms\n\n\n\n\n\n\n\nNote\n\n\n\n\nFor human metabolites: You can use either hmdbid or keggid as input\nFor other organisms: Only keggid is supported\nGSEA for metabolites is not currently supported\n\n\n\n\n# Example metabolite input data with HMDB IDs (human only)\nmetabolite_data &lt;- readr::read_csv(\"examples/example_metabolite_data.csv\")\nhead(metabolite_data)\n# # A tibble: 6 √ó 4\n#   variable_id    keggid      fdr score\n#   &lt;chr&gt;          &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt;\n# 1 M441T680_2_NEG NA     3.59e-16  1.11\n# 2 M448T566_NEG   C05466 5.12e- 3  1.13\n# 3 M229T462_NEG   C02678 7.43e- 4  1.20\n# 4 M367T590_NEG   C04555 2.28e- 4  1.34\n# 5 M221T50_POS    C13008 7.99e- 3  1.36\n# 6 M544T604_POS   C04230 1.19e-18  1.53",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Data input and preprocessing</span>"
    ]
  },
  {
    "objectID": "02_input.html#input-data-preprocessing",
    "href": "02_input.html#input-data-preprocessing",
    "title": "2¬† Data input and preprocessing",
    "section": "2.2 Input Data Preprocessing",
    "text": "2.2 Input Data Preprocessing\nThis step is required except for non-human metabolite analysis - mapa provides the convert_id() function to perform ID conversion for downstream analysis. Even if your data already contains one of the required identifier columns, it is highly recommended to run this function to ensure all necessary identifiers are present for pathway analysis.\n\n2.2.1 Gene ID conversion\nThe convert_id() function converts between different ID types and always returns data with all four gene identifier columns (ensembl, entrezid, uniprot, symbol), which are required for mapa to work properly. Since organism-specific annotation database are required for ID conversion and the following enrichment analysis, choose the ID conversion method based on your organism.\n\nModel OrganismsNon-Model Organisms\n\n\nFor common model organisms, use standard organism database Bioconductor packages.\n\n\n\n\n\n\nNote\n\n\n\nFor most model organisms, Bioconductor already supplies curated organism annotation databases (the OrgDb packages). You can browse the complete list and install the one that matches your species of interest here.\n\n\n\n# Human\nvariable_info &lt;- convert_id(\n  data = ora_data,\n  query_type = \"gene\",\n  from_id_type = \"ensembl\",  # This tells the function what your input column represents\n  organism = \"org.Hs.eg.db\"  # install the package at first\n)\nhead(variable_info)\n# # A tibble: 6 √ó 5\n#   ensembl         entrezid uniprot    symbol   variable_id\n#   &lt;chr&gt;           &lt;chr&gt;    &lt;chr&gt;      &lt;chr&gt;    &lt;chr&gt;      \n# 1 ENSG00000100097 3956     A0A384MR27 LGALS1   gene_1     \n# 2 ENSG00000139193 939      B2RDZ0     CD27     gene_2     \n# 3 ENSG00000163513 7048     A0AAQ5BI03 TGFBR2   gene_3     \n# 4 ENSG00000127863 55504    Q9NS68     TNFRSF19 gene_4     \n# 5 ENSG00000115604 8809     Q13478     IL18R1   gene_5     \n# 6 ENSG00000153002 1360     O60834     CPB1     gene_6  \n\n\n\nFor organisms without standard packages, use AnnotationHub IDs:\n\nnon_model_org_dt &lt;- readr::read_csv(\"examples/example_non_model_org_data.csv\")\n# Macaca fascicularis (taxid: 9541)\nvariable_info &lt;- convert_id(\n  data = non_model_org_dt,\n  query_type = \"gene\",\n  from_id_type = \"ensembl\",\n  ah_id = \"AH119902\",  # AnnotationHub ID for Macaca fascicularis\n  return_orgdb = TRUE  # The organism database is needed for downstream analysis\n)\n\n# Successfully loaded organism database from AnnotationHub\n# Database information:\n# OrgDb object:\n# | DBSCHEMAVERSION: 2.1\n# | DBSCHEMA: NOSCHEMA_DB\n# | ORGANISM: Simia fascicularis\n# | SPECIES: Simia fascicularis\n# | CENTRALID: GID\n# | Taxonomy ID: 9541\n# | Db type: OrgDb\n# | Supporting package: AnnotationDbi\n# \n# Please see: help('select') for usage information\n# Note: The following ID types are not available in the organism database and will be filled with NA: uniprot\n# Available ID types in database: ACCNUM, ALIAS, ENSEMBL, ENTREZID, EVIDENCE, EVIDENCEALL, GENENAME, GID, GO, GOALL, ONTOLOGY, ONTOLOGYALL, PMID, REFSEQ, SYMBOL, UNIGENE\n# 'select()' returned 1:many mapping between keys and columns\n# Warning in clusterProfiler::bitr(geneID = data[[from_id_type]], fromType = from_clusterprofiler_type,  :\n#   57.38% of input gene IDs are fail to map...\n\nvariable_info\n# $data\n# # A tibble: 183 √ó 8\n#    ensembl            entrezid  uniprot symbol       Symbol  `Gene type`    Tissue     Cluster  \n#    &lt;chr&gt;              &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;        &lt;chr&gt;   &lt;chr&gt;          &lt;chr&gt;      &lt;chr&gt;    \n#  1 ENSMFAG00000000264 NA        NA      NA           APH1B   protein_coding Liver (LL) Cluster U\n#  2 ENSMFAG00000000283 NA        NA      NA           PLCG1   protein_coding Liver (LL) Cluster U\n#  3 ENSMFAG00000000444 102141791 NA      EPS15L1      EPS15L1 protein_coding Liver (LL) Cluster U\n#  4 ENSMFAG00000000464 NA        NA      NA           RCOR3   protein_coding Liver (LL) Cluster U\n#  5 ENSMFAG00000000583 101865185 NA      EXOC7        EXOC7   protein_coding Liver (LL) Cluster U\n#  6 ENSMFAG00000000608 NA        NA      NA           CD99    protein_coding Liver (LL) Cluster U\n#  7 ENSMFAG00000000627 102121020 NA      MTFMT        MTFMT   protein_coding Liver (LL) Cluster U\n#  8 ENSMFAG00000000639 NA        NA      NA           GJC2    protein_coding Liver (LL) Cluster U\n#  9 ENSMFAG00000000737 101866375 NA      MKRN1        MKRN1   protein_coding Liver (LL) Cluster U\n# 10 ENSMFAG00000000852 102131151 NA      LOC102131151 CYB5R1  protein_coding Liver (LL) Cluster U\n# # ‚Ñπ 173 more rows\n# # ‚Ñπ Use `print(n = ...)` to see more rows\n# \n# $orgdb\n# OrgDb object:\n# | DBSCHEMAVERSION: 2.1\n# | DBSCHEMA: NOSCHEMA_DB\n# | ORGANISM: Simia fascicularis\n# | SPECIES: Simia fascicularis\n# | CENTRALID: GID\n# | Taxonomy ID: 9541\n# | Db type: OrgDb\n# | Supporting package: AnnotationDbi\n# Please see: help('select') for usage information\n\n\n\n\n\n\n\nTip\n\n\n\nHow to find AnnotationHub IDs according to taxid?\n\nif (!require(\"BiocManager\", quietly = TRUE))\n    install.packages(\"BiocManager\")\n\nBiocManager::install(\"AnnotationHub\")\n\nlibrary(AnnotationHub)\nah &lt;- AnnotationHub()\n# Search for your organism database by taxid (here taxid is \"9541\")\nquery_result &lt;- AnnotationHub::query(ah, c(\"OrgDb\", \"9541\"))\n# Use the ah_id from the results\nquery_result$ah_id\n# [1] \"AH119899\" \"AH119900\" \"AH119901\" \"AH119902\"\n\n\n\n\n\n\n\n\n2.2.2 Metabolite ID Conversion\nFor human metabolite data, convert IDs bwteen KEGG and HMDB:\n\n# Convert KEGG IDs to HMDB IDs (human only)\nmet_variable_info &lt;- convert_id(\n  data = metabolite_data,\n  query_type = \"metabolite\", \n  from_id_type = \"keggid\",\n  organism = \"hsa\" # KEGG organism code\n)\n\n# Result will include both hmdbid and keggid columns\nhead(variable_info)\n# # A tibble: 6 √ó 5\n#   variable_id  keggid      fdr score hmdbid     \n#   &lt;chr&gt;        &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;      \n# 1 M448T566_NEG C05466 5.12e- 3  1.13 HMDB0000637\n# 2 M229T462_NEG C02678 7.43e- 4  1.20 HMDB0000623\n# 3 M367T590_NEG C04555 2.28e- 4  1.34 HMDB0001032\n# 4 M221T50_POS  C13008 7.99e- 3  1.36 HMDB0006240\n# 5 M544T604_POS C04230 1.19e-18  1.53 HMDB0002815\n# 6 M544T604_POS C04230 1.19e-18  1.53 HMDB0010380",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Data input and preprocessing</span>"
    ]
  },
  {
    "objectID": "02_input.html#next-steps",
    "href": "02_input.html#next-steps",
    "title": "2¬† Data input and preprocessing",
    "section": "2.3 Next Steps",
    "text": "2.3 Next Steps\nOnce your data meets the format requirements, you can proceed to enrichment analysis to begin your mapa workflow.",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Data input and preprocessing</span>"
    ]
  },
  {
    "objectID": "03_enrichment_analysis.html",
    "href": "03_enrichment_analysis.html",
    "title": "3¬† Pathway Analysis",
    "section": "",
    "text": "3.1 Gene-based Enrichment",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Pathway Analysis</span>"
    ]
  },
  {
    "objectID": "03_enrichment_analysis.html#gene-based-enrichment",
    "href": "03_enrichment_analysis.html#gene-based-enrichment",
    "title": "3¬† Pathway Analysis",
    "section": "",
    "text": "3.1.1 Supported Databases and Keytypes\nThe mapa package leverages the powerful enrichment functions from the clusterProfiler package for pathway analysis. The following table shows which databases you can use for your organism and the supported key types:\n\n\n\nDatabase\nSupported Organism\nKeytype Options\n\n\n\n\nGene Ontology (GO)\nAny organism with OrgDb object (organism annotation database package from Bioconductor or OrgDb object retrieved from AnnotationHub, see Section 2.2.1)\nAny keyType supported by your OrgDb object\n\n\nKEGG\nAll KEGG organisms\n\"kegg\", \"ncbi-geneid\", \"ncbi-proteinid\", \"uniprot\"\n\n\nReactome\nhuman, rat, mouse, celegans, yeast, zebrafish, fly, bovine, canine, chicken\nENTREZID only\n\n\n\n\n\n\n\n\n\nTip\n\n\n\n\nTo check available GO keytype for your organism:\nFor model organisms with Bioconductor annotation packages\n\n## For model organisms with Bioconductor annotation packages\nlibrary(org.Hs.eg.db)\nAnnotationDbi::keytypes(org.Hs.eg.db)\n# [1] \"ACCNUM\" \"ALIAS\" \"ENSEMBL\" \"ENSEMBLPROT\" \"ENSEMBLTRANS\" \"ENTREZID\" \"ENZYME\"  \"EVIDENCE\" \"EVIDENCEALL\" \"GENENAME\"    \n# [11] \"GENETYPE\" \"GO\" \"GOALL\" \"IPI\" \"MAP\" \"OMIM\" \"ONTOLOGY\" \"ONTOLOGYALL\" \"PATH\" \"PFAM\"        \n# [21] \"PMID\" \"PROSITE\" \"REFSEQ\" \"SYMBOL\" \"UCSCKG\" \"UNIPROT\" \n\nFor non-model organisms with annotation OrgDb retrieved from AnnotationHub\n\n# variable_info is the output from the ID conversion step in Chapter 2 - Data Input and Preprocessing\nAnnotationDbi::keytypes(variable_info$orgdb)\n\nFor comprehensive understanding of enrichment analysis concepts, methodologies, we highly recommend reading the Biomedical Knowledge Mining using GOSemSim and clusterProfiler book. This book covers all the underlying methods that MAPA uses and will help you make informed decisions about your analysis parameters.\n\n\n\n\n\n3.1.2 Basic Usage\n\nOver-Representation Analysis (ORA)Gene Set Enrichment Analysis (GSEA)\n\n\nUse enrich_pathway() for Over-Representation Analysis.\n\nlibrary(org.Hs.eg.db)\n    \nenriched_pathways &lt;- \n  enrich_pathway(\n    variable_info = variable_info,\n    query_type = \"gene\",\n    database = c(\"go\", \"kegg\", \"reactome\"),\n    # GO parameters\n    go.orgdb = org.Hs.eg.db,\n    go.keytype = \"ENTREZID\",\n    go.ont = \"ALL\",\n    # KEGG parameters\n    kegg.organism = \"hsa\",\n    kegg.keytype = \"kegg\",\n    # Reactome parameters\n    reactome.organism = \"human\",\n    # Statistical parameters\n    pvalueCutoff = 0.05,\n    pAdjustMethod = \"BH\"\n  )\n\n# GO database...\n# KEGG database...\n# Reading KEGG annotation online: \"https://rest.kegg.jp/link/hsa/pathway\"...\n# Reading KEGG annotation online: \"https://rest.kegg.jp/list/pathway/hsa\"...\n# Reactome database...\n# Done.\n\n\n\nThe do_gsea() function performs GSEA using ranked gene lists based on fold changes or other metrics.\n\nlibrary(org.Hs.eg.db)\n    \ngsea_pathways &lt;- \n  do_gsea(\n    variable_info = variable_info,\n    query_type = \"gene\",\n    order_by = \"fc\",              # Column to rank genes by\n    database = c(\"go\", \"kegg\", \"reactome\"),\n    # Database parameters\n    go.orgdb = org.Hs.eg.db,\n    go.ont = \"ALL\",\n    go.keytype = \"ENTREZID\",\n    kegg.organism = \"hsa\",\n    kegg.keytype = \"kegg\",\n    reactome.organism = \"human\",\n    # GSEA parameters\n    pvalueCutoff = 0.05,\n    pAdjustMethod = \"BH\"\n  )\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nModel organisms: use variable_info directly and package name for go.orgdb\nNon-model organisms: use variable_info$data for parameter variable_info and variable_info$orgdb for go.orgdb",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Pathway Analysis</span>"
    ]
  },
  {
    "objectID": "03_enrichment_analysis.html#metabolite-based-enrichment",
    "href": "03_enrichment_analysis.html#metabolite-based-enrichment",
    "title": "3¬† Pathway Analysis",
    "section": "3.2 Metabolite-based Enrichment",
    "text": "3.2 Metabolite-based Enrichment\n\n3.2.1 Supported Databases and Keytypes\n\n\n\nDatabase\nSupported Organism\nKeytype Options\n\n\n\n\nKEGG\nAll KEGG organisms\nKEGG compound IDs\n\n\nSMPDB\nOnly for human\nHMDB IDs\n\n\n\n\n\n3.2.2 Basic Usage\nFor metabolite data, ensure your variable_info contains HMDB IDs and/or KEGG compound IDs.\n\nmet_enriched_pathways &lt;- \n  enrich_pathway(\n    variable_info = met_variable_info,\n    query_type = \"metabolite\",\n    database = c(\"hmdb\", \"metkegg\"),\n    met_organism = \"hsa\",\n    save_to_local = TRUE,\n    pvalueCutoff = 0.05,\n    pAdjustMethod = \"BH\"\n  )",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Pathway Analysis</span>"
    ]
  },
  {
    "objectID": "03_enrichment_analysis.html#sec-enrichment_res_interpretation",
    "href": "03_enrichment_analysis.html#sec-enrichment_res_interpretation",
    "title": "3¬† Pathway Analysis",
    "section": "3.3 Results interpretation",
    "text": "3.3 Results interpretation\nAfter enrichment analysis, view the enrichment analysis summary:\n\nenriched_pathways\n# -------------------- \n# Analysis method: enrich_pathway \n# -------------------- \n# -----------Variable information------------\n# 119  features/markers in total\n# -----------Enrichment results and modules of genes------------\n# -----------GO------------\n# 1025 GO terms with p.adjust &lt; 0.05 \n# No GO modules\n# -----------KEGG------------\n# 48 KEGG pathways with p.adjust &lt; 0.05 \n# No KEGG modules\n# -----------Reactome------------\n# 48 Reactome pathways with p.adjust &lt; 0.05 \n# No Reactome modules\n# -----------Enrichment results and modules of metabolites------------\n# -----------HMDB------------\n# No HMDB results\n# No HMDB modules\n# -----------KEGG Metabolite------------\n# No KEGG metabolite results\n# No KEGG modules\n# -----------Functional modules------------\n# No Functional modules\n# -----------LLM module interpretation------------\n# No LLM module interpretation results\n# -------------------- \n# Processing information\n# 1 processings in total\n# enrich_pathway ---------- \n#   Package    Function.used                Time\n# 1    mapa enrich_pathway() 2025-06-08 14:34:13\n\nYou can access specific database results via @:\n\nORA enrichment resultGSEA enrichment result\n\n\n\nhead(enriched_pathways@enrichment_go_result@result)\n#            ONTOLOGY         ID                                                      Description GeneRatio   BgRatio RichFactor FoldEnrichment   zScore       pvalue\n# GO:0038084       BP GO:0038084             vascular endothelial growth factor signaling pathway    13/116  95/18805 0.13684211       22.18376 16.30756 2.147803e-14\n# GO:0036005       BP GO:0036005                 response to macrophage colony-stimulating factor    11/116  64/18805 0.17187500       27.86301 16.95936 1.713923e-13\n# GO:0035924       BP GO:0035924 cellular response to vascular endothelial growth factor stimulus    13/116 122/18805 0.10655738       17.27424 14.20752 5.888098e-13\n# GO:0006935       BP GO:0006935                                                       chemotaxis    21/116 466/18805 0.04506438        7.30548 10.85886 8.851862e-13\n# GO:0042330       BP GO:0042330                                                            taxis    21/116 468/18805 0.04487179        7.27426 10.82885 9.608949e-13\n# GO:0038145       BP GO:0038145           macrophage colony-stimulating factor signaling pathway    10/116  54/18805 0.18518519       30.02075 16.82498 1.024076e-12\n#                p_adjust       qvalue                                                                                                       geneID Count\n# GO:0038084 5.859206e-11 3.635439e-11                                            3480/28514/1969/1956/64094/2050/5156/7422/8828/2064/5979/2324/780    13\n# GO:0036005 2.337791e-10 1.450520e-10                                                        3480/1435/1969/1956/6696/2050/5156/2064/5979/2324/780    11\n# GO:0035924 4.656131e-10 2.888971e-10                                            3480/28514/1969/1956/64094/2050/5156/7422/8828/2064/5979/2324/780    13\n# GO:0006935 4.656131e-10 2.888971e-10 6370/3958/5919/1435/7040/8633/56477/1969/58191/64094/5054/3491/5156/3569/6359/7422/3082/6360/10457/5328/8828    21\n# GO:0042330 4.656131e-10 2.888971e-10 6370/3958/5919/1435/7040/8633/56477/1969/58191/64094/5054/3491/5156/3569/6359/7422/3082/6360/10457/5328/8828    21\n# GO:0038145 4.656131e-10 2.888971e-10                                                             3480/1435/1969/1956/2050/5156/2064/5979/2324/780    10\n\n\n\n\nhead(gsea_pathways@enrichment_kegg_result@result)\n#                ID                                       Description setSize enrichmentScore      NES       pvalue     p_adjust       qvalue rank\n# hsa05014 hsa05014                     Amyotrophic lateral sclerosis      11       0.6473595 2.500196 0.0001092759 0.0006556554 0.0003450818  218\n# hsa05022 hsa05022 Pathways of neurodegeneration - multiple diseases      11       0.4649904 1.795860 0.0102663060 0.0307989180 0.0162099568  232\n# hsa05010 hsa05010                                 Alzheimer disease      10       0.4709263 1.667865 0.0220601399 0.0441202798 0.0232211999  214\n#                             leading_edge                                            core_enrichment Count\n# hsa05014 tags=100%, list=36%, signal=65% 6390/23435/4720/5690/56893/6391/55706/842/5710/22926/55746    11\n# hsa05022  tags=91%, list=39%, signal=57%         6390/23435/4720/5690/6391/1435/842/5710/22926/9927    10\n# hsa05010  tags=90%, list=36%, signal=59%              6390/10000/4720/5690/6391/1435/842/5710/22926     9\n\n\n\n\nKey columns in enrichment results:\n\nGene ORAGSEAMetabolite ORA\n\n\nCore Information:\n\nID: Pathway identifier (e.g., GO:0042060 for GO, hsa04060 for KEGG, R-HSA-5669034 for Reactome)\nDescription: Pathway name\nONTOLOGY: Biological ontology (for GO only: MF=molecular function, CC=cellular component, BP=biological process)\ncategory/subcategory: KEGG pathway categories (for KEGG only)\n\nStatistical Measures:\n\npvalue: Raw p-value from hypergeometric test (equivalent to one-sided Fisher‚Äôs exact test)\np_adjust: Adjusted p-value after multiple testing correction (BH method by default)\nqvalue: Q-value for FDR control. For more information, see ?qvalue::qvalue\n\nGene Mapping:\n\nGeneRatio: Ratio of input genes annotated to this pathway (format: ‚Äúgenes_in_pathway/total_input_genes‚Äù)\nBgRatio: Ratio of all genes annotated to this pathway in the background universe (format: ‚Äúpathway_genes/universe_genes‚Äù)\nCount: Total number of genes from input list that match this pathway\ngeneID: Gene IDs that overlap between your gene list and the pathway (separated by ‚Äú/‚Äù)\n\nEnrichment Metrics:\n\nRichFactor: Ratio of input genes annotated to a pathway vs.¬†all genes annotated to this pathway\nFoldEnrichment: Enrichment fold change (GeneRatio divided by BgRatio)\nzScore: Standard deviations away from expected overlap (How unusual or extreme the observed enrichment is compared to what you‚Äôd expect by chance. Higher absolute z-score means more ‚Äúsurprising‚Äù or significant enrichment)\n\n\n\nFor GSEA results, additional columns specific to ranked list analysis include:\n\nsetSize: Total number of genes in the gene set/pathway\nenrichmentScore: Degree of overrepresentation at top/bottom of ranked list\nNES: Normalized Enrichment Score - main metric for interpretation\n\nPositive NES: pathway enriched in upregulated genes (pathway activation)\nNegative NES: pathway enriched in downregulated genes (pathway suppression)\n\nrank: Position in ranked list where maximum enrichment score occurred\nleading_edge: Statistics for the leading-edge subset of genes\ncore_enrichment: Core enriched genes that contribute most to the enrichment signal\nCount: Number of core enriched genes\n\n\n\nFor metabolite ORA results, the result structure differs from gene-based analysis:\nPathway Information:\n\npathway_id: Small Molecule Pathway Database Pathway identifier (e.g., SMP0000028)\npathway_name: Name of the metabolic pathway (e.g., ‚ÄúCaffeine Metabolism‚Äù)\ndescribtion: Detailed description of the pathway from the corresponding database\npathway_class: Classification of pathway (e.g., ‚ÄúMetabolic;primary_pathway‚Äù, ‚ÄúDisease;primary_pathway‚Äù)\n\nStatistical Measures:\n\np_value: Raw p-value from enrichment test\np_adjust: Adjusted p-value for multiple testing correction\n\nMetabolite Mapping:\n\nall_id: All metabolite IDs in this pathway (separated by ‚Äú;‚Äù)\nall_number: Total number of metabolites in the pathway\nmapped_id: Your input metabolite IDs that map to this pathway (separated by ‚Äú;‚Äù)\nmapped_number: Number of your metabolites that map to this pathway\nmapped_percentage: Percentage of pathway metabolites covered by your input data\n\n\n\n\nThe enrichment results object is tailored for downstream similarity analysis and module identification in MAPA, so it cannot be substituted with outputs from other tools. Please make sure you complete the steps above before proceeding.",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Pathway Analysis</span>"
    ]
  },
  {
    "objectID": "04_pathway_similarity.html",
    "href": "04_pathway_similarity.html",
    "title": "4¬† Pathway Similarity Calculation",
    "section": "",
    "text": "4.1 Overview\nMAPA provides two approaches for calculating pathway similarity:\nBoth methods prepare your data for downstream clustering analysis, so you can choose the approach that best fits your research needs and computational resources.",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Pathway Similarity Calculation</span>"
    ]
  },
  {
    "objectID": "04_pathway_similarity.html#overview",
    "href": "04_pathway_similarity.html#overview",
    "title": "4¬† Pathway Similarity Calculation",
    "section": "",
    "text": "Traditional Similarity (merge_pathways()): Uses gene/metabolite overlap and semantic similarity\nBiotext Embedding Similarity (get_bioembedsim()): Uses LLM text embeddings to capture semantic relationships",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Pathway Similarity Calculation</span>"
    ]
  },
  {
    "objectID": "04_pathway_similarity.html#method-1-traditional-similarity",
    "href": "04_pathway_similarity.html#method-1-traditional-similarity",
    "title": "4¬† Pathway Similarity Calculation",
    "section": "4.3 Method 1: Traditional Similarity",
    "text": "4.3 Method 1: Traditional Similarity\nThe merge_pathways() function calculates similarity using established methods:\n\nOnly GO terms: Semantic similarity using the simona package\nGO/KEGG/Reactome/SMPDB pathways: Gene/metabolite overlap similarity (Jaccard, Dice, Overlap, and Kappa)\n\n\nGene-based AnalysisMetabolite-based Analysis\n\n\n\ngene_similarity_result &lt;- \n  merge_pathways(\n    object = gene_enriched_pathways,\n    database = c(\"go\", \"kegg\", \"reactome\"),\n    # Statistical cutoffs (only pathways passing these cutoffs are used for similarity calculation)\n    p.adjust.cutoff.go = 0.05,\n    p.adjust.cutoff.kegg = 0.05,\n    p.adjust.cutoff.reactome = 0.05,\n    count.cutoff.go = 5,\n    count.cutoff.kegg = 5,\n    count.cutoff.reactome = 5,\n    # Similarity methods\n    measure.method.go = \"Sim_XGraSM_2013\",  # GO semantic similarity\n    go.orgdb = \"org.Hs.eg.db\",               # Required for GO analysis\n    measure.method.kegg = \"jaccard\",        # Gene overlap similarity\n    measure.method.reactome = \"jaccard\"     # Gene overlap similarity\n  )\n\n# --------------------\n# GO database...\n# Calculating similartiy matrix, it may take a while...\n# relations: is_a, part_of, regulates, negatively_regulates, positively_regulates\n# IC_method: IC_annotation\n# term_sim_method: Sim_XGraSM_2013\n# IC_method: IC_annotation\n# Completed GO term (BP) similarity calculation.\n# relations: is_a, part_of, regulates, negatively_regulates, positively_regulates\n# IC_method: IC_annotation\n# term_sim_method: Sim_XGraSM_2013\n# IC_method: IC_annotation\n# Completed GO term (MF) similarity calculation.\n# relations: is_a, part_of, regulates, negatively_regulates, positively_regulates\n# IC_method: IC_annotation\n# term_sim_method: Sim_XGraSM_2013\n# IC_method: IC_annotation\n# Completed GO term (CC) similarity calculation.\n# Completed GO term similarity calculation successfully!\n# Identifying modules...\n# Done\n# --------------------\n# KEGG database...\n# Calculating similartiy matrix, it may take a while...\n# Reading KEGG annotation online: \"https://rest.kegg.jp/link/hsa/pathway\"...\n# Reading KEGG annotation online: \"https://rest.kegg.jp/list/pathway/hsa\"...\n# Completed KEGG pathway similarity calculation successfully!\n# Identifying modules...\n# Done\n# --------------------\n# Reactome database...\n# Calculating similartiy matrix, it may take a while...\n# Completed Reactome pathway similarity calculation successfully!\n# Identifying modules...\n# Done\n# Done\n\n\n\n\n\n\n\nNote\n\n\n\ngo.orgdb Selection:\n\nFor model organisms with Bioconductor annotation packages: use the package directly (e.g., go.orgdb = \"org.Hs.eg.db\")\nFor non-model organisms: use the OrgDb object from Section 2.2.1 (e.g., go.orgdb = variable_info$orgdb)\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nOrganism Limitation: Traditional similarity for metabolites is recommended primarily for human studies where you can use both KEGG and HMDB databases. For non-human organisms, only KEGG is available, making this approach less informative. Consider using biotext embedding similarity instead for non-human metabolite studies.\n\n\n\nmet_similarity_result &lt;- \n  merge_pathways(\n    object = met_enriched_pathways,\n    database = c(\"hmdb\", \"metkegg\"),\n    # Statistical cutoffs (only pathways passing these cutoffs are used for similarity calculation)\n    p.adjust.cutoff.hmdb = 0.05,\n    p.adjust.cutoff.metkegg = 0.05,\n    count.cutoff.hmdb = 5,\n    count.cutoff.metkegg = 5,\n    # Similarity methods\n    measure.method.hmdb = \"jaccard\",\n    measure.method.metkegg = \"jaccard\"\n  )\n\n# --------------------\n# HMDB database...\n# Calculating similartiy matrix, it may take a while...\n# Completed SMPDB pathway similarity calculation successfully!\n# Identifying modules...\n# Done\n# --------------------\n# KEGG database...\n# Calculating similartiy matrix, it may take a while...\n# Completed KEGG pathway similarity calculation successfully!\n# Identifying modules...\n# Done\n# Done\n\n\n\n\n\n4.3.1 Similarity Methods Details\nGO Semantic Similarity Methods\nFor GO terms, MAPA uses the simona package:\n\n\n\n\n\n\n\n\nMethod\nType\nDescription\n\n\n\n\nSim_XGraSM_2013\nHybrid\nCombines multiple similarity aspects\n\n\nSim_Wang_2007\nStructure-based\nBased on GO graph structure\n\n\nSim_Lin_1998\nInformation content-based\nUses information content of terms\n\n\nSim_Resnik_1999\nInformation content-based\nInformation content of most informative common ancestor\n\n\n\nGene/Metabolite Overlap Similarity\nFor KEGG, Reactome, and metabolite pathways:\n\n\n\n\n\n\n\n\n\nMethod\nFormula\nDescription\nUse Case\n\n\n\n\njaccard\n|A ‚à© B| / |A ‚à™ B|\nJaccard index\nDefault, most commonly used\n\n\ndice\n2 √ó |A ‚à© B| / (|A| + |B|)\nDice coefficient\nEmphasizes shared elements\n\n\noverlap\n|A ‚à© B| / min(|A|, |B|)\nOverlap coefficient\nGood for pathways of different sizes\n\n\nkappa\n(Po - Pe) / (1 - Pe)\nCohen‚Äôs kappa\nAccounts for chance agreement\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nFor detailed explanations of the similarity methods, see the simona documentation.",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Pathway Similarity Calculation</span>"
    ]
  },
  {
    "objectID": "04_pathway_similarity.html#method-2-biotext-embedding-similarity",
    "href": "04_pathway_similarity.html#method-2-biotext-embedding-similarity",
    "title": "4¬† Pathway Similarity Calculation",
    "section": "4.4 Method 2: Biotext Embedding Similarity",
    "text": "4.4 Method 2: Biotext Embedding Similarity\nThe get_bioembedsim() function leverages large language model text embedding models to capture semantic relationships between pathway descriptions, enabling more nuanced similarity calculation based on biological function.\n\nGene-based AnalysisMetabolite-based Analysis\n\n\n\ngene_biotext_similarity &lt;- \n  get_bioembedsim(\n    object = gene_enriched_pathways,\n    api_provider = \"openai\",\n    text_embedding_model = \"text-embedding-3-small\",\n    api_key = \"your_openai_api_key\",\n    database = c(\"go\", \"kegg\", \"reactome\"),\n    # Statistical cutoffs (only pathways passing these cutoffs are used for similarity calculation)\n    p.adjust.cutoff.go = 0.05,\n    p.adjust.cutoff.kegg = 0.05,\n    p.adjust.cutoff.reactome = 0.05,\n    count.cutoff.go = 5,\n    count.cutoff.kegg = 5,\n    count.cutoff.reactome = 5\n  )\n\n# Getting pathway text embeddings ...\n# Calculating cosine similairty ...\n# Biotext embedding and similarity calculation finished\n\n\n\n\nmet_biotext_similarity &lt;- \n  get_bioembedsim(\n    object = met_enriched_pathways,\n    api_provider = \"openai\",\n    text_embedding_model = \"text-embedding-3-small\",\n    api_key = \"your_openai_api_key\",\n    database = c(\"hmdb\", \"metkegg\"),\n    # Statistical cutoffs (only pathways passing these cutoffs are used for similarity calculation)\n    p.adjust.cutoff.hmdb = 0.05,\n    p.adjust.cutoff.metkegg = 0.05,\n    count.cutoff.hmdb = 5,\n    count.cutoff.metkegg = 5\n  )\n\n# Getting pathway text embeddings ...\n# Calculating cosine similairty ...\n# Biotext embedding and similarity calculation finished\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nAPI Key Setup:\n\nFor OpenAI: Obtain your API key from OpenAI Platform\nFor Gemini: Get your API key from Google AI Studio\n\nStore your API key securely and never commit it to version control.\n\n\n\n4.4.1 How Biotext Embedding Works\nThe biotext embedding process involves several steps:\n\nText Extraction: For each pathway, the function extracts pathway name and description from respective databases\nText Embedding: The text information is sent to the specified embedding model to generate high-dimensional vector representations\nSimilarity Calculation: Cosine similarity is calculated between all pathway embedding vectors\n\n\n\n\n\n\n\nTip\n\n\n\nUnderstanding Text Embeddings: Text embeddings convert text into numerical vectors that capture semantic meaning. For a comprehensive introduction to embeddings, including how they work, model details and best practices, see the OpenAI Embeddings Guide.",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Pathway Similarity Calculation</span>"
    ]
  },
  {
    "objectID": "04_pathway_similarity.html#method-comparison",
    "href": "04_pathway_similarity.html#method-comparison",
    "title": "4¬† Pathway Similarity Calculation",
    "section": "4.2 Method Comparison",
    "text": "4.2 Method Comparison\n\n\n\n\n\n\n\n\nAspect\nTraditional Similarity\nBiotext Embedding Similarity\n\n\n\n\nBasis\nGene/metabolite overlap + semantic structure\nText semantic meaning\n\n\nSpeed\nFast, deterministic\nSlower, requires API calls\n\n\nCost\nFree\nAPI usage costs\n\n\nReproducibility\nFully reproducible\nHighly reproducible (minor API variations)\n\n\nNovel discoveries\nBased on known annotations\nCan identify functional relationships beyond overlap\n\n\nInternet dependency\nMinimal (for GO/KEGG updates)\nRequired for API access\n\n\nCross-database integration\nLimited by annotation overlap\nExcellent semantic integration\n\n\n\nWhen to use each method:\n\nTraditional Similarity: When working with limited internet access, need fully reproducible results, or working with well-annotated pathways where overlap is meaningful\nBiotext Embedding (recommended): When exploring novel functional relationships, integrating diverse databases, or when semantic understanding is more important than annotation overlap",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Pathway Similarity Calculation</span>"
    ]
  },
  {
    "objectID": "04_pathway_similarity.html#results-interpretation",
    "href": "04_pathway_similarity.html#results-interpretation",
    "title": "4¬† Pathway Similarity Calculation",
    "section": "4.5 Results Interpretation",
    "text": "4.5 Results Interpretation\nBoth approaches prepare your data for the next steps: optimal cluster parameter determination and functional module identification.\n\n# Traditional similarity results\ngene_similarity_result\n# Return intra-database modules generated based on pathway similarity\nhead(gene_similarity_result@merged_pathway_go$module_result)\n\nKey result columns:\n\nmodule: Module identifier (e.g., ‚Äúgo_Module_2‚Äù)\nmodule_annotation: Representative annotation (pathway name with the lowest adjusted p-value for ORA/ pathway name with the highest |NES| for GSEA) for the module\nDescription: Names of all the pathways in the module separated by ;\nmodule_content: All pathways/terms (i.e.¬†nodes) grouped in this module\nCount: Number of genes/metabolites from the input genes/metabolites list in the module\np_adjust: Best (lowest) adjusted p-value among pathways in the module\n\n\n# Biotext embedding results  \ngene_biotext_similarity\n# Returns list with similarity matrix and enriched pathway object\nnames(gene_biotext_similarity)\n# [1] \"sim_matrix\"        \"enriched_pathway\"\n\n# Examine similarity matrix\ngene_biotext_similarity$sim_matrix[1:5, 1:5]\n#            GO:0016049 GO:0031589 GO:1900046 GO:0071375 GO:0061900\n# GO:0016049  1.0000000  0.3779020  0.2286780  0.3376592  0.4369859\n# GO:0031589  0.3779020  1.0000000  0.2702301  0.3123477  0.3938414\n# GO:1900046  0.2286780  0.2702301  1.0000000  0.3277389  0.2867548\n# GO:0071375  0.3376592  0.3123477  0.3277389  1.0000000  0.4493753\n# GO:0061900  0.4369859  0.3938414  0.2867548  0.4493753  1.0000000",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Pathway Similarity Calculation</span>"
    ]
  },
  {
    "objectID": "04_pathway_similarity.html#next-steps",
    "href": "04_pathway_similarity.html#next-steps",
    "title": "4¬† Pathway Similarity Calculation",
    "section": "4.6 Next Steps",
    "text": "4.6 Next Steps\nContinue to Optimal Clustering Parameters to determine the best clustering parameters for your similarity data, then proceed to Functional Module Identification to group related pathways into modules.",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Pathway Similarity Calculation</span>"
    ]
  },
  {
    "objectID": "05_determine_optimal_clustering_params.html",
    "href": "05_determine_optimal_clustering_params.html",
    "title": "5¬† Determining Optimal Clustering Parameters",
    "section": "",
    "text": "5.1 Overview\nThe determine_optimal_clusters() function tests clustering methods and similarity cutoffs, using modularity and silhouette scores to select optimal parameters. This ensures better clustering choices before functional module identification, which saves you time and enhances biological interpretability.\nOverall, this chapter is not mandatory but highly recommended for anyone aiming to obtain high-quality functional modules.",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Determining Optimal Clustering Parameters</span>"
    ]
  },
  {
    "objectID": "05_determine_optimal_clustering_params.html#supported-input-types",
    "href": "05_determine_optimal_clustering_params.html#supported-input-types",
    "title": "5¬† Determining Optimal Clustering Parameters",
    "section": "5.2 Supported Input Types",
    "text": "5.2 Supported Input Types\nThe function accepts two types of input objects:\n\nTraditional similarity objects: Results from merge_pathways() (functional_module class)\nBiotext embedding objects: Results from get_bioembedsim() (list with sim_matrix and enriched_pathway)\n\nFor traditional similarity objects, the function internally calculates Jaccard similarity between modules from different databases. For biotext embedding objects, it uses the pre-computed semantic similarity matrix.",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Determining Optimal Clustering Parameters</span>"
    ]
  },
  {
    "objectID": "05_determine_optimal_clustering_params.html#basic-usage",
    "href": "05_determine_optimal_clustering_params.html#basic-usage",
    "title": "5¬† Determining Optimal Clustering Parameters",
    "section": "5.3 Basic Usage",
    "text": "5.3 Basic Usage\n\nTraditional Similarity ResultsBiotext Embedding Results\n\n\n\ncluster_evaluation &lt;- \n  determine_optimal_clusters(\n    object = met_similarity_result,\n    cutoff_increment = 0.05  # Test cutoffs from 0.2 to 0.9 in steps of 0.05\n  )\n\n# Starting optimal cluster determination...\n# Extracting similarity matrix and pathway data...\n# Calculating the similarity matrix...\n# Starting clustering evaluation across methods and cutoffs...\n# Processing method: hierarchical ...\n# Processing method: binary_cut ...\n# Processing method: girvan_newman ...\n# Clustering evaluation completed! Generating plots and finding optimal parameters...\n# Analysis complete!\n\n\n\n\ncluster_evaluation &lt;- \n  determine_optimal_clusters(\n    object = met_biotext_similarity,\n    cutoff_increment = 0.05\n  )\n\n# Starting optimal cluster determination for biotext embedding object...\n# Extracting similarity matrix and pathway data...\n# Starting clustering evaluation across methods and cutoffs...\n# Processing method: hierarchical_ward.D ...\n# Processing method: binary_cut ...\n# Processing method: louvain ...\n# Clustering evaluation completed! Generating plots and finding optimal parameters...\n# Analysis complete!",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Determining Optimal Clustering Parameters</span>"
    ]
  },
  {
    "objectID": "05_determine_optimal_clustering_params.html#clustering-methods-evaluated",
    "href": "05_determine_optimal_clustering_params.html#clustering-methods-evaluated",
    "title": "5¬† Determining Optimal Clustering Parameters",
    "section": "5.4 Clustering Methods Evaluated",
    "text": "5.4 Clustering Methods Evaluated\nThe function tests three clustering algorithms:\n\nHierarchical Clustering: Traditional agglomerative clustering with specified linkage method (default linkage method is ‚Äúcomplete‚Äù)\nBinary Cut: Uses the simplifyEnrichment algorithm\nGirvan-Newman: Community detection based on edge betweenness\n\nEach method is tested across a range of similarity cutoffs to find the optimal balance between cluster cohesion and separation.",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Determining Optimal Clustering Parameters</span>"
    ]
  },
  {
    "objectID": "05_determine_optimal_clustering_params.html#evaluation-metrics",
    "href": "05_determine_optimal_clustering_params.html#evaluation-metrics",
    "title": "5¬† Determining Optimal Clustering Parameters",
    "section": "5.5 Evaluation Metrics",
    "text": "5.5 Evaluation Metrics\nModularity: Measures the strength of division of a network into modules. Higher values indicate better defined community structure.\nSilhouette Score: Measures how similar objects are to their own cluster compared to other clusters. Values range from -1 to 1, with higher values indicating better clustering.",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Determining Optimal Clustering Parameters</span>"
    ]
  },
  {
    "objectID": "05_determine_optimal_clustering_params.html#similarity-cutoff-interpretation",
    "href": "05_determine_optimal_clustering_params.html#similarity-cutoff-interpretation",
    "title": "5¬† Determining Optimal Clustering Parameters",
    "section": "5.6 Similarity Cutoff Interpretation",
    "text": "5.6 Similarity Cutoff Interpretation\nThe meaning of sim.cutoff depends on your clustering method:\n\nGirvan-NewmanBinary Cut & Hierarchical\n\n\nEdge Filter: Only pathway pairs with similarity above this threshold are connected.\n\nLower values (0.3-0.4): More permissive, denser networks, larger modules\nHigher values (0.6-0.8): More stringent, sparser networks, smaller modules\n\n\n\nDendrogram Cutting Height: Determines where to cut the clustering tree.\n\nLower values (0.3-0.4): Cut lower in tree, more fine-grained modules\n\nHigher values (0.6-0.8): Cut higher in tree, fewer but larger modules\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nKey Difference in Cutoff Interpretation:\n\nIn Girvan-Newman, higher cutoffs = smaller modules\nIn Binary Cut/Hierarchical, higher cutoffs = larger modules\n\nAlways examine your results and adjust based on the biological interpretability of resulting modules.",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Determining Optimal Clustering Parameters</span>"
    ]
  },
  {
    "objectID": "05_determine_optimal_clustering_params.html#parameter-customization",
    "href": "05_determine_optimal_clustering_params.html#parameter-customization",
    "title": "5¬† Determining Optimal Clustering Parameters",
    "section": "5.7 Parameter Customization",
    "text": "5.7 Parameter Customization\n\n# Fine-grained parameter search\ndetailed_evaluation &lt;- \n  determine_optimal_clusters(\n    object = met_similarity_result,\n    cutoff_increment = 0.01,  # Smaller steps for more detailed analysis\n    hclust_method = \"ward.D2\"  # Different hierarchical clustering method\n  )\n\n# Starting optimal cluster determination for functional_module object...\n# Extracting similarity matrix and pathway data...\n# Calculating the similarity matrix...\n# Starting clustering evaluation across methods and cutoffs...\n# Processing method: hierarchical_ward.D ...\n# Available hierarchical clustering methods:\n# \"ward.D\", \"ward.D2\", \"single\", \"complete\", \"average\", \"mcquitty\", \"median\", \"centroid\"",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Determining Optimal Clustering Parameters</span>"
    ]
  },
  {
    "objectID": "05_determine_optimal_clustering_params.html#results-interpretation",
    "href": "05_determine_optimal_clustering_params.html#results-interpretation",
    "title": "5¬† Determining Optimal Clustering Parameters",
    "section": "5.8 Results Interpretation",
    "text": "5.8 Results Interpretation\nThe function returns a comprehensive evaluation with three components:\n\n# View the evaluation plot\ncluster_evaluation$evaluation_plot\n\n# Examine detailed results\nhead(cluster_evaluation$cluster_result)\n# # A tibble: 6 √ó 4\n#   method       cutoff metric     value\n#   &lt;chr&gt;         &lt;dbl&gt; &lt;chr&gt;      &lt;dbl&gt;\n# 1 hierarchical   0.2  modularity   0  \n# 2 hierarchical   0.2  silhouette   0.4\n# 3 hierarchical   0.25 modularity   0  \n# 4 hierarchical   0.25 silhouette   0.4\n# 5 hierarchical   0.3  modularity   0  \n\n# Find the best parameter combinations\ncluster_evaluation$best_combination\n# # A tibble: 22 √ó 4\n#    method        cutoff metric     value\n#    &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;      &lt;dbl&gt;\n#  1 binary_cut      0.85 modularity 0.375\n#  2 binary_cut      0.9  modularity 0.375\n#  3 girvan_newman   0.2  modularity 0.375\n# ...\n\nEvaluation Plot: Shows how clustering quality metrics change across similarity cutoffs for each method. Look for:\n\nPeaks in modularity: Indicate good community structure\nHigh silhouette scores: Indicate well-separated clusters\nConsistent performance: Methods that perform well across multiple cutoffs\n\nBest Combination: Identifies the optimal method and cutoff for each metric.",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Determining Optimal Clustering Parameters</span>"
    ]
  },
  {
    "objectID": "05_determine_optimal_clustering_params.html#next-steps",
    "href": "05_determine_optimal_clustering_params.html#next-steps",
    "title": "5¬† Determining Optimal Clustering Parameters",
    "section": "5.9 Next Steps",
    "text": "5.9 Next Steps\nUse the optimal parameters identified in this analysis for functional module identification in Chapter 6: Functional Module Identification. The recommended method and cutoff values will help you ensure the pathway modules are high-quality, biologically meaningful.",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Determining Optimal Clustering Parameters</span>"
    ]
  },
  {
    "objectID": "06_get_functional_modules.html",
    "href": "06_get_functional_modules.html",
    "title": "6¬† Functional Module Identification",
    "section": "",
    "text": "6.1 Overview\nThe get_functional_modules() function is a generic function that identifies functional modules from pathway similarity results. It automatically detects the type of input object and applies the appropriate clustering method:",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Functional Module Identification</span>"
    ]
  },
  {
    "objectID": "06_get_functional_modules.html#overview",
    "href": "06_get_functional_modules.html#overview",
    "title": "6¬† Functional Module Identification",
    "section": "",
    "text": "Traditional similarity objects: Uses Jaccard similarity between modules from different databases\nBiotext embedding objects: Uses pre-computed semantic similarity matrices",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Functional Module Identification</span>"
    ]
  },
  {
    "objectID": "06_get_functional_modules.html#basic-usage",
    "href": "06_get_functional_modules.html#basic-usage",
    "title": "6¬† Functional Module Identification",
    "section": "6.2 Basic Usage",
    "text": "6.2 Basic Usage\nThe function automatically detects your input type and applies the appropriate clustering strategy:\n\nTraditional Similarity ResultsBiotext Embedding Results\n\n\n\nfunctional_modules &lt;- \n  get_functional_modules(\n    object = met_similarity_result,\n    sim.cutoff = 0.5,\n    cluster_method = \"girvan newman\"\n  )\n\n# Get functional modules from traditional pathway similarity calculation results ...\n# Calculating the similarity matrix...\n# Identifying functional modules...\n# Done\n\n\n\n\nfunctional_modules &lt;- \n  get_functional_modules(\n    object = met_biotext_similarity,\n    sim.cutoff = 0.5,\n    cluster_method = \"binary cut\"\n  )\n\n# Get functional modules from Biotext embedding results ...\n# Identifying functional modules...\n# Joining with `by = join_by(node)`\n# Done",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Functional Module Identification</span>"
    ]
  },
  {
    "objectID": "06_get_functional_modules.html#using-optimal-parameters",
    "href": "06_get_functional_modules.html#using-optimal-parameters",
    "title": "6¬† Functional Module Identification",
    "section": "6.3 Using Optimal Parameters",
    "text": "6.3 Using Optimal Parameters\nApply the parameters identified in your clustering evaluation:\n\n# Extract optimal parameters from your evaluation\nbest_params &lt;- cluster_evaluation$best_combination\n\n# Use modularity-optimized parameters\nmodularity_optimal &lt;- best_params[best_params$metric == \"modularity\", ]\noptimal_method &lt;- modularity_optimal$method[1]\noptimal_cutoff &lt;- modularity_optimal$cutoff[1]\n\n# Apply optimal parameters\nfunctional_modules &lt;- \n  get_functional_modules(\n    object = similarity_results,\n    sim.cutoff = optimal_cutoff,\n    cluster_method = optimal_method\n  )\n\n# Alternatively, use silhouette-optimized parameters for better separation\nsilhouette_optimal &lt;- best_params[best_params$metric == \"silhouette\", ]",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Functional Module Identification</span>"
    ]
  },
  {
    "objectID": "06_get_functional_modules.html#similarity-cutoff-interpretation",
    "href": "06_get_functional_modules.html#similarity-cutoff-interpretation",
    "title": "6¬† Functional Module Identification",
    "section": "6.4 Similarity Cutoff Interpretation",
    "text": "6.4 Similarity Cutoff Interpretation\nThe meaning of sim.cutoff depends on your clustering method:\n\nGirvan-NewmanBinary Cut & Hierarchical\n\n\nEdge Filter: Only pathway pairs with similarity above this threshold are connected.\n\nLower values (0.3-0.4): More permissive, denser networks, larger modules\nHigher values (0.6-0.8): More stringent, sparser networks, smaller modules\n\n\n\nDendrogram Cutting Height: Determines where to cut the clustering tree.\n\nLower values (0.3-0.4): Cut lower in tree, more fine-grained modules\n\nHigher values (0.6-0.8): Cut higher in tree, fewer but larger modules\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nKey Difference in Cutoff Interpretation:\n\nIn Girvan-Newman, higher cutoffs = smaller modules\nIn Binary Cut/Hierarchical, higher cutoffs = larger modules\n\nAlways examine your results and adjust based on the biological interpretability of resulting modules.",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Functional Module Identification</span>"
    ]
  },
  {
    "objectID": "06_get_functional_modules.html#results-interpretation",
    "href": "06_get_functional_modules.html#results-interpretation",
    "title": "6¬† Functional Module Identification",
    "section": "6.5 Results Interpretation",
    "text": "6.5 Results Interpretation\nAfter functional module identification, examine your results:\n\n# View analysis summary\nfunctional_modules\n# -------------------- \n# Analysis method: enrich_pathway \n# -------------------- \n# -----------Variable information------------\n# 119  features/markers in total\n# -----------Enrichment results and modules of genes------------\n# -----------GO------------\n# 1025 GO terms with p.adjust &lt; 0.05 \n# 250 GO modules \n# -----------KEGG------------\n# 48 KEGG pathways with p.adjust &lt; 0.05 \n# 29 KEGG modules\n# -----------Reactome------------\n# 48 Reactome pathways with p.adjust &lt; 0.05 \n# 13 Reactome modules\n# -----------Functional modules------------\n# 158 Functional modules\n# -----------LLM module interpretation------------\n# No LLM module interpretation results\n# -------------------- \n# Processing information\n# 4 processings in total\n# enrich_pathway ---------- \n#   Package    Function.used                Time\n# 1    mapa enrich_pathway() 2025-06-09 21:32:51\n# merge_pathways ---------- \n#   Package    Function.used                Time\n# 1    mapa merge_pathways() 2025-06-09 21:34:00\n# merge_modules ---------- \n#   Package   Function.used                Time\n# 1    mapa merge_modules() 2025-06-09 21:34:56\n\n# Access functional modules\nhead(functional_modules@merged_module$functional_module_result)\n\n\n6.5.1 Key Result Columns\n\nmodule: Functional Module identifier (e.g., ‚ÄúFunctional_module_127‚Äù)\nmodule_annotation: Representative pathway name (lowest p-value for ORA, highest |NES| for GSEA)\nDescription: Names of all pathways in the module (separated by ;)\nmodule_content: All pathway/term IDs grouped in this module\nCount: Number of genes/metabolites from input list in the module\np_adjust: Best (lowest) adjusted p-value among pathways in the module\n\nFor GSEA results, additional columns include: - NES: Normalized Enrichment Score of the representative pathway - core_enrichment: Core enriched genes contributing to the module",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Functional Module Identification</span>"
    ]
  },
  {
    "objectID": "06_get_functional_modules.html#quality-assessment",
    "href": "06_get_functional_modules.html#quality-assessment",
    "title": "6¬† Functional Module Identification",
    "section": "6.6 Quality Assessment",
    "text": "6.6 Quality Assessment\nEvaluate the quality of your functional modules:\n\n# Check module size distribution\nmodule_results &lt;- functional_modules@merged_module$functional_module_result\nmodule_sizes &lt;- table(module_results$Count)\n\n# Plot module size distribution\nbarplot(module_sizes, \n        main = \"Distribution of Module Sizes\", \n        xlab = \"Number of Genes/Metabolites per Module\",\n        ylab = \"Number of Modules\")\n\n# Examine top modules by significance\ntop_modules &lt;- \n  module_results %&gt;%\n  arrange(p_adjust) %&gt;%\n  head(10)\n\nprint(top_modules[, c(\"module_annotation\", \"Count\", \"p_adjust\")])\n\n# Check for singleton modules (modules with only one pathway)\nsingleton_count &lt;- sum(sapply(strsplit(module_results$module_content, \";\"), length) == 1)\ncat(\"Number of singleton modules:\", singleton_count, \"\\n\")\ncat(\"Percentage of singleton modules:\", round(singleton_count/nrow(module_results)*100, 1), \"%\\n\")",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Functional Module Identification</span>"
    ]
  },
  {
    "objectID": "06_get_functional_modules.html#next-steps",
    "href": "06_get_functional_modules.html#next-steps",
    "title": "6¬† Functional Module Identification",
    "section": "6.7 Next Steps",
    "text": "6.7 Next Steps\nContinue to LLM Interpretation to add AI-powered functional annotations to your modules, or proceed to Data Visualization to create informative plots of your functional modules.",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Functional Module Identification</span>"
    ]
  },
  {
    "objectID": "07_llm_interpretation.html",
    "href": "07_llm_interpretation.html",
    "title": "7¬† Functional Module Annotation",
    "section": "",
    "text": "7.1 Overview\nThe llm_interpret_module() function provides AI-powered interpretation of functional modules by integrating Large Language Models (LLMs) with a Retrieval-Augmented Generation (RAG) strategy. This approach combines pathway information, scientific literature, and advanced text analysis to generate meaningful names and summaries for your functional modules.\nThe LLM interpretation process integrates multiple information sources to provide comprehensive module annotations:\nThis approach leverages both structured biological knowledge and cutting-edge research to provide contextually rich interpretations of your functional modules.",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>Functional Module Annotation</span>"
    ]
  },
  {
    "objectID": "07_llm_interpretation.html#overview",
    "href": "07_llm_interpretation.html#overview",
    "title": "7¬† Functional Module Annotation",
    "section": "",
    "text": "Information Sources:\n\nPathway descriptions from GO, KEGG, Reactome, and metabolite databases\nGene/metabolite names from your input data\nScientific literature retrieved from PubMed based on pathway and molecule relevance\nLocal documents (optional) - your own research papers or relevant literature\n\nAnalysis Pipeline:\n\nInformation Extraction: Extracts pathway descriptions and molecule information\nLiterature Retrieval: Searches PubMed for relevant scientific papers\nRAG Strategy: Uses embeddings to find and rank the most relevant literature, see Section 7.2\nLLM Generation: Generates biological module names and research summaries",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>Functional Module Annotation</span>"
    ]
  },
  {
    "objectID": "07_llm_interpretation.html#sec-rag",
    "href": "07_llm_interpretation.html#sec-rag",
    "title": "7¬† Functional Module Annotation",
    "section": "7.2 Understanding the RAG Strategy",
    "text": "7.2 Understanding the RAG Strategy\n\n\n\n\n\nThe Retrieval-Augmented Generation (RAG) strategy works in several stages:\nStage 1: Literature Search\n\nSearches PubMed using pathway names and gene/metabolite information\nRetrieves abstracts and titles for relevant papers\nIncludes reference papers cited in pathway databases\n\nStage 2: Embedding-based Similarity\n\nGenerates text embeddings for module descriptions (pathways + molecules)\nCalculates similarity between module embeddings and paper abstracts\nFilters top papers based on cosine similarity scores\n\nStage 3: GPT-powered Reranking\n\nUses LLM to assess relevance of each paper to the specific module by assigning relevance scores (0-1) where 1 indicates high relevance to module pathways and molecules\nSelect the most informative literature for final interpretation\n\nStage 4: Final Generation\n\nCombines module information with top-ranked papers\nGenerates biologically meaningful module names\nProduces research summaries highlighting current knowledge\nAssigns confidence scores (0-1) reflecting LLM‚Äôs assessment of interpretation quality based on available evidence. High confidence means strong literature support and clear biological coherence\n\nThis multi-stage approach ensures that generated annotations are both scientifically accurate and contextually relevant.",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>Functional Module Annotation</span>"
    ]
  },
  {
    "objectID": "07_llm_interpretation.html#basic-usage",
    "href": "07_llm_interpretation.html#basic-usage",
    "title": "7¬† Functional Module Annotation",
    "section": "7.3 Basic Usage",
    "text": "7.3 Basic Usage\n\nGene-based Module InterpretationMetabolite-based Module Interpretation\n\n\n\nllm_interpreted_modules &lt;- \n  llm_interpret_module(\n    object = enriched_functional_modules,\n    llm_model = \"gpt-4o-mini-2024-07-18\",\n    embedding_model = \"text-embedding-3-small\", \n    api_key = \"your_openai_api_key\",\n    embedding_output_dir = \"embedding_output/\",  # Output directory to store embeddings generated during analysis\n    module_content_number_cutoff = 1,\n    orgdb = org.Hs.eg.db                         # Necessary for gene annotation\n  )\n#   |============================================================================================================================| 100%, Elapsed 00:42\n# Processing module: Functional_module_2\n# Including PID number: 70\n#   |============================================================================================================================| 100%, Elapsed 00:07\n# ...\n# Processing module 1/10: Functional_module_2\n# - Generating module embeddings...\n# - Reading and calculating PubMed similarity...\n# - Local documents not found, skipping local similarity calculation\n# - Reading document content...                                                                                                                        \n# - Processing document content using GPT...                                                                                                           \n#   |============================================================================================================================| 100%, Elapsed 00:35\n# - Filtering the most relevant results...\n# Functional_module_2 processing completed\n# ...\n# All modules processing completed!\n# Start to generate name and summary for functional modules ...\n# Done\n\n\n\n\nmet_llm_interpreted_modules &lt;- \n  llm_interpret_module(\n    object = met_enriched_functional_modules,\n    llm_model = \"gpt-4o-mini-2024-07-18\",\n    embedding_model = \"text-embedding-3-small\",\n    api_key = \"your_openai_api_key\",\n    embedding_output_dir = \"met_embedding_output/\",\n    module_content_number_cutoff = 1\n  )",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>Functional Module Annotation</span>"
    ]
  },
  {
    "objectID": "07_llm_interpretation.html#key-parameters",
    "href": "07_llm_interpretation.html#key-parameters",
    "title": "7¬† Functional Module Annotation",
    "section": "7.4 Key Parameters",
    "text": "7.4 Key Parameters\n\n7.4.1 LLM and API Settings\n\n\n\n\n\n\n\n\n\nParameter\nDescription\nDefault\nNotes\n\n\n\n\nllm_model\nGPT model for text generation\n\"gpt-4o-mini-2024-07-18\"\nCurrently supports OpenAI models only\n\n\nembedding_model\nModel for text embeddings\n\"text-embedding-3-small\"\nUsed for document similarity\n\n\napi_key\nOpenAI API key\nRequired\nStore securely, never commit to version control\n\n\n\n\n\n7.4.2 Analysis Control\n\n\n\n\n\n\n\n\n\nParameter\nDescription\nDefault\nUse Case\n\n\n\n\nmodule_content_number_cutoff\nMinimum pathways per module\n1\nFilter small modules to focus on substantial ones\n\n\nyears\nYears to search back in PubMed\n5\nBalance between recent findings and comprehensive coverage\n\n\nretmax\nMax papers per PubMed search\n10\nControl API usage and processing time\n\n\nsimilarity_filter_num\nPapers kept after similarity ranking\n20\nFirst-stage filtering based on text similarity\n\n\nGPT_filter_num\nPapers kept after GPT ranking\n5\nFinal selection of most relevant papers\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nAPI Usage & Processing Time: Each module requires multiple API calls (embedding + LLM generation), with costs scaling by number of modules and literature volume, so consider using module_content_number_cutoff to focus on important modules. Typical processing takes 2-5 minutes per module, with time increasing for more literature and larger modules, though progress is displayed during processing.\n\n\n\n\n7.4.3 Optional Enhancements\n\n\n\n\n\n\n\n\n\nParameter\nDescription\nDefault\nBenefits\n\n\n\n\nphenotype\nDisease/condition context\nNULL\nAdds disease-specific interpretation\n\n\nlocal_corpus_dir\nLocal directory with your own PDF files\nNULL\nIncorporates your own research or relevant literature to enhance the interpretation\n\n\noutput_prompt\nInclude prompts in results\nTRUE\nUseful for understanding AI reasoning",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>Functional Module Annotation</span>"
    ]
  },
  {
    "objectID": "07_llm_interpretation.html#results-interpretation",
    "href": "07_llm_interpretation.html#results-interpretation",
    "title": "7¬† Functional Module Annotation",
    "section": "7.5 Results Interpretation",
    "text": "7.5 Results Interpretation\nAfter running LLM interpretation, examine the results:\n\n# View analysis summary\nllm_interpreted_modules\n# -------------------- \n# Analysis method: enrich_pathway \n# -------------------- \n# -----------Variable information------------\n# 119  features/markers in total\n# -----------Enrichment results and modules of genes------------\n# -----------GO------------\n# 1025 GO terms with p.adjust &lt; 0.05 \n# 250 GO modules \n# -----------KEGG------------\n# 48 KEGG pathways with p.adjust &lt; 0.05 \n# 29 KEGG modules\n# -----------Reactome------------\n# 48 Reactome pathways with p.adjust &lt; 0.05 \n# 13 Reactome modules\n# -----------Enrichment results and modules of metabolites------------\n# -----------HMDB------------\n# No HMDB results\n# No HMDB modules\n# -----------KEGG Metabolite------------\n# No KEGG metabolite results\n# No KEGG modules\n# -----------Functional modules------------\n# 158 Functional modules\n# -----------LLM module interpretation------------\n# 10 LLM interpreted modules\n# -------------------- \n# Processing information\n# 4 processings in total\n# enrich_pathway ---------- \n#   Package    Function.used                Time\n# 1    mapa enrich_pathway() 2025-06-10 10:50:36\n# merge_pathways ---------- \n#   Package    Function.used                Time\n# 1    mapa merge_pathways() 2025-06-10 10:57:22\n# merge_modules ---------- \n#   Package   Function.used                Time\n# 1    mapa merge_modules() 2025-06-10 10:58:25\n# llm_interpret_module ---------- \n#   Package          Function.used                Time\n# 1    mapa llm_interpret_module() 2025-06-10 14:24:47\n\n\n7.5.1 Updated Functional Module Results\nThe functional module results are automatically updated with a new column llm_module_name, which is the LLM-generated names:\n\n# View updated results with LLM names\nhead(llm_interpreted_modules@merged_module$functional_module_result)\n\nKey result columns:\n\nllm_module_name: AI-generated biological module name\nmodule_annotation: Original representative annotation (fallback if LLM interpretation unavailable)\n\n\n\n7.5.2 Result Components\nFor each interpreted module, the results include:\n\nLLM InterpretationRetrieved LiteratureProcessing Details\n\n\n\n# Core interpretation results of a interpreted module\nmodule_result &lt;- llm_interpreted_modules@llm_module_interpretation$Functional_module_2\n\n# Module name generated by LLM\nmodule_name &lt;- module_result$generated_name$module_name\n\n# Summary of current research\nmodule_summary &lt;- module_result$generated_name$summary\n\n# Confidence score (0-1)  \nconfidence_score &lt;- module_result$generated_name$confidence_score\n\nWhen phenotype parameter was specified, result contains phenotype-specific interpretation.\n\nmodule_result &lt;- llm_interpreted_modules@llm_module_interpretation$Functional_module_2\nphenotype_result &lt;- module_result$generated_name$phenotype_analysis\n\n\n\n\n# Papers used for interpretation\nmodule_result &lt;- llm_interpreted_modules@llm_module_interpretation$Functional_module_2\nrelated_papers &lt;- module_result$related_paper\n\n# Access individual papers\npaper1 &lt;- related_papers[[1]]\npaper1$title           # Paper title and PubMedID\n# [1] \"Modulation of Kit/stem cell factor receptor-induced signaling by protein kinase C. (PubMedID:7520444)\"\n\npaper1$relevance_score # Relevance score assigned by GPT\n# [1] 0.9\n\npaper1$cleaned_text    # Cleaned abstract text\n# [1] \"The Kit/stem cell factor receptor (Kit/SCF-R) is a transmembrane tyrosine kinase receptor of importance for the normal development of hemopoietic cells, melanoblasts, and germ cells. We recently reported that protein kinase C (PKC) is involved in a negative feedback loop regulating the Kit/SCF-R by direct phosphorylation on serine residues in the receptor... In conclusion, SCF-induced PI-3'-kinase activation paralleled the increased SCF-induced mitogenicity after inhibition of PKC.\"\n\n\n\nIf output_prompt = TRUE, results contains the exact prompt sent to the LLM for transparency:\n\nmodule_result &lt;- llm_interpreted_modules@llm_module_interpretation$Functional_module_2\nprompt_info &lt;- module_result$generated_name$prompt",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>Functional Module Annotation</span>"
    ]
  },
  {
    "objectID": "07_llm_interpretation.html#best-practices",
    "href": "07_llm_interpretation.html#best-practices",
    "title": "7¬† Functional Module Annotation",
    "section": "7.6 Best Practices",
    "text": "7.6 Best Practices\n\nStart Small: Begin with a subset of modules to estimate costs and processing time\nOptimize Parameters: Adjust filtering parameters based on your module complexity\nUse Phenotype Context: Specify relevant diseases/conditions for more targeted interpretations\nInclude Local Literature: Add your own papers for domain-specific insights\nReview Results: Examine confidence scores and retrieved literature quality\nIterate: Refine parameters based on initial results",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>Functional Module Annotation</span>"
    ]
  },
  {
    "objectID": "07_llm_interpretation.html#next-steps",
    "href": "07_llm_interpretation.html#next-steps",
    "title": "7¬† Functional Module Annotation",
    "section": "7.7 Next Steps",
    "text": "7.7 Next Steps\nContinue to Data Visualization to create informative plots showcasing your LLM-interpreted modules.",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>Functional Module Annotation</span>"
    ]
  },
  {
    "objectID": "08_data_vis.html",
    "href": "08_data_vis.html",
    "title": "8¬† Data Visualization",
    "section": "",
    "text": "8.1 Overview of Visualization Functions\nThe mapa package provides comprehensive visualization functions to explore and present your pathway enrichment and functional module results. This chapter covers four main visualization approaches: pathway bar charts, module information plots, similarity networks, and relationship networks.\nmapa provides four main visualization functions:",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>Data Visualization</span>"
    ]
  },
  {
    "objectID": "08_data_vis.html#overview-of-visualization-functions",
    "href": "08_data_vis.html#overview-of-visualization-functions",
    "title": "8¬† Data Visualization",
    "section": "",
    "text": "Function\nPurpose\nBest Used For\n\n\n\n\nplot_pathway_bar()\nHorizontal bar charts of top enriched items\nShowing enrichment strength across pathways/modules\n\n\nplot_module_info()\nMulti-panel module details (network + bar + wordcloud)\nDetailed examination of specific modules\n\n\nplot_similarity_network()\nSimilarity-based networks\nUnderstanding pathway relationships and clustering\n\n\nplot_relationship_network()\nMulti-level hierarchical networks\nVisualizing connections across biological levels",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>Data Visualization</span>"
    ]
  },
  {
    "objectID": "08_data_vis.html#bar-chart-visualization",
    "href": "08_data_vis.html#bar-chart-visualization",
    "title": "8¬† Data Visualization",
    "section": "8.2 Bar Chart Visualization",
    "text": "8.2 Bar Chart Visualization\nThe plot_pathway_bar() function creates horizontal bar charts showing the top enriched pathways, modules, or functional modules. This is ideal for presenting enrichment results in publications.\n\n8.2.1 Basic Usage\n\n# Basic pathway-level bar chart\nplot_pathway_bar(\n  object = enriched_functional_modules,\n  level = \"pathway\",\n  database = c(\"go\", \"kegg\", \"reactome\"),\n  top_n = 5,\n  x_axis_name = \"qscore\"  # \"-log10(FDR)\" for ORA\n)\n\n\n\n\n\n\n\n\n8.2.2 Key Parameters\n\n\n\n\n\n\n\n\nParameter\nDescription\nOptions/Default\n\n\n\n\nlevel\nAnalysis level\n\"pathway\", \"module\", \"functional_module\"\n\n\nx_axis_name\nX-axis metric\nORA: \"qscore\", \"RichFactor\", \"FoldEnrichment\";\nGSEA: \"NES\"\n\n\nline_type\nBar style\n\"straight\" (default), \"meteor\"\n\n\nllm_text\nUse LLM names for functional modules\nTRUE/FALSE\n\n\ntop_n\nNumber of items to show\nDefault: 10\n\n\ndatabase\nDatabases to include\nc(\"go\", \"kegg\", \"reactome\", \"hmdb\", \"metkegg\")\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nX-axis Metrics Explained:\n\nqscore: -log‚ÇÅ‚ÇÄ(adjusted p-value), higher values indicate more significant enrichment\nRichFactor: Ratio of input genes in pathway vs.¬†all genes in pathway\nFoldEnrichment: Enrichment fold change (GeneRatio divided by BgRatio), see Section 3.3\nNES: Normalized Enrichment Score (GSEA only), positive/negative indicates up/down-regulation",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>Data Visualization</span>"
    ]
  },
  {
    "objectID": "08_data_vis.html#module-information-plots",
    "href": "08_data_vis.html#module-information-plots",
    "title": "8¬† Data Visualization",
    "section": "8.3 Module Information Plots",
    "text": "8.3 Module Information Plots\nThe plot_module_info() function provides detailed, multi-panel visualizations of individual modules, including network topology, pathway rankings, and word clouds. The content of each plot depends on the analysis level:\n\n\n\n\n\n\n\n\nPlot level\nlevel = \"module\"\n(Database-specific)\nlevel = \"functional_module\"\n(Cross-database)\n\n\n\n\nNetwork\nShows pathways within the database-specific module and their similarity connections\nShows representative pathways from database-specific modules (SimCluster) or individual pathways (EmbedCluster)\n\n\nBar plot\nRanks individual pathways within the module by significance\nRanks the representative pathways or database-specific modules by significance\n\n\nWord cloud\nWord frequency from pathway descriptions, with word size reflecting statistical significance\nWord frequency from all pathway descriptions in the functional module, with word size proportional to the sum of statistical significance values\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWord Cloud Interpretation: Word size reflects the cumulative statistical significance of pathways containing that word:\n\nFor ORA (Over-Representation Analysis): Word size is proportional to the sum of -log10(adjusted p-value) across pathways containing that word. Larger words indicate terms appearing in pathways with stronger statistical enrichment.\nFor GSEA (Gene Set Enrichment Analysis): Word size is proportional to the sum of |NES| (absolute Normalized Enrichment Score) across pathways containing that word. Larger words indicate terms appearing in pathways with stronger enrichment signals, regardless of direction (up- or down-regulation).\n\n\n\n\n8.3.1 For Functional Modules\n\n# Get available module IDs first\nenriched_functional_modules@merged_module$functional_module_result$module\n\n# Create detailed plots for a specific module\nmodule_plots &lt;- plot_module_info(\n  object = enriched_functional_modules,\n  level = \"functional_module\",\n  module_id = \"Functional_module_42\",\n  llm_text = FALSE   # Set to TRUE to use LLM-generated names if available\n)\n\nAccess individual plots:\n\n# Network of the representative pathways of database-specific modules within the functional module\nmodule_plots$network\n\n\n\n\n\n\n\n# Ranked the representative pathways of database-specific modules within the functional module by significance\nmodule_plots$barplot\n\n\n\n\n\n\n\n# Word cloud of pathway descriptions of the representative pathways of database-specific modules within the functional module\nmodule_plots$wordcloud\n\n\n\n\n\n\n\n\n8.3.2 For Database-Specific Modules\n\n# Examine a specific KEGG module\ngo_plots &lt;- plot_module_info(\n  object = enriched_functional_modules,\n  level = \"module\",\n  database = \"go\",\n  module_id = \"go_Module_25\"\n)\n\n# View the plots\ngo_plots$network\ngo_plots$barplot  \ngo_plots$wordcloud",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>Data Visualization</span>"
    ]
  },
  {
    "objectID": "08_data_vis.html#similarity-network-visualization",
    "href": "08_data_vis.html#similarity-network-visualization",
    "title": "8¬† Data Visualization",
    "section": "8.4 Similarity Network Visualization",
    "text": "8.4 Similarity Network Visualization\nThe plot_similarity_network() function visualizes how pathways or modules cluster together based on similarity metrics.\n\n8.4.1 Basic Usage\n\n# Functional module similarity network\nplot_similarity_network(\n  object = enriched_functional_modules,\n  level = \"functional_module\",\n  degree_cutoff = 4,  # Only show modules with &gt;2 pathways\n  text = TRUE\n)\n\n\n\n\n\n\n\n\n8.4.2 Database-Specific Networks\n\n# GO module network\nplot_similarity_network(\n  object = enriched_functional_modules,\n  level = \"module\",\n  database = \"go\",\n  degree_cutoff = 5,\n  text = TRUE\n)\n\n\n\n\n\n\n\n\n8.4.3 Focus on Specific Modules\n\n# Examine specific modules only\nplot_similarity_network(\n  object = llm_interpreted_modules,\n  level = \"functional_module\",\n  module_id = c(\"Functional_module_18\", \"Functional_module_51\", \"Functional_module_128\"),\n  llm_text = TRUE\n)\n\n\n\n\n\n\n\n\n8.4.4 Key Parameters\n\n\n\n\n\n\n\n\nParameter\nDescription\nUsage\n\n\n\n\ndegree_cutoff\nMinimum pathways per module\nFilter small modules\n\n\ntext\nShow representative names\nOne label per module\n\n\ntext_all\nShow all pathway names\nAll nodes labeled\n\n\nllm_text\nUse LLM-generated names\nFor functional modules with LLM interpretation\n\n\nmodule_id\nSpecific modules to show\nFocus on modules of interest",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>Data Visualization</span>"
    ]
  },
  {
    "objectID": "08_data_vis.html#relationship-network-visualization",
    "href": "08_data_vis.html#relationship-network-visualization",
    "title": "8¬† Data Visualization",
    "section": "8.5 Relationship Network Visualization",
    "text": "8.5 Relationship Network Visualization\nThe plot_relationship_network() function creates comprehensive multi-level networks showing relationships between functional modules, modules, pathways, and molecules.\n\n8.5.1 Basic Usage\n\nobject &lt;- enriched_functional_modules\nobject@merged_module$functional_module_result &lt;- \n  head(object@merged_module$functional_module_result, 2)\n\n# Full hierarchy: functional modules ‚Üí modules ‚Üí pathways ‚Üí molecules\nplot_relationship_network(\n  object = object,\n  include_functional_modules = TRUE,\n  include_modules = TRUE, \n  include_pathways = TRUE,\n  include_molecules = TRUE,\n  functional_module_text = TRUE,\n  pathway_text = TRUE,\n  molecule_text = FALSE\n)\n\n\n\n\n\n\n\n\n8.5.2 Circular Layout\n\n# Circular layout for better visualization of complex networks\nplot_relationship_network(\n  object = object,\n  include_functional_modules = TRUE,\n  include_modules = FALSE,\n  include_pathways = TRUE, \n  include_molecules = TRUE,\n  circular_plot = TRUE,     # Concentric circles layout\n  functional_module_text = TRUE,\n  molecule_text = FALSE\n)\n\n\n\n\n\n\n\n\n8.5.3 Customization Options\n\n\n\n\n\n\n\n\nParameter\nDescription\nDefault\n\n\n\n\ninclude_*\nInclude specific node types\nAll TRUE\n\n\n*_color\nNode colors by type\nPredefined colors\n\n\n*_text\nShow text labels\nVaries by type\n\n\n*_text_size\nLabel font size\n3\n\n\ncircular_plot\nCircular vs.¬†horizontal layout\nFALSE",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>Data Visualization</span>"
    ]
  },
  {
    "objectID": "08_data_vis.html#troubleshooting-visualization-issues",
    "href": "08_data_vis.html#troubleshooting-visualization-issues",
    "title": "8¬† Data Visualization",
    "section": "8.6 Troubleshooting Visualization Issues",
    "text": "8.6 Troubleshooting Visualization Issues\nCommon Issues and Solutions:\n\nEmpty plots or warnings about no data\n\nCheck that your cutoffs (p.adjust.cutoff, count.cutoff) aren‚Äôt too stringent\nVerify that modules exist at the specified level\n\nText labels overlapping or unreadable\n\nAdjust y_label_width parameter\nUse text_all = FALSE to show only representative labels\nIncrease plot dimensions when saving\n\nEmbedCluster results at module level\n\nUse level = \"functional_module\" for EmbedCluster results\nEmbedCluster bypasses database-specific modules\n\nLLM text not appearing\n\nEnsure llm_interpret_module() was run successfully\nCheck that the object contains LLM interpretation results",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>Data Visualization</span>"
    ]
  },
  {
    "objectID": "08_data_vis.html#next-steps",
    "href": "08_data_vis.html#next-steps",
    "title": "8¬† Data Visualization",
    "section": "8.7 Next Steps",
    "text": "8.7 Next Steps\nContinue to Results Report to learn how to generate comprehensive analysis reports that combine all your results into professional documents.",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>Data Visualization</span>"
    ]
  },
  {
    "objectID": "09_res_report.html",
    "href": "09_res_report.html",
    "title": "9¬† Results Report",
    "section": "",
    "text": "9.1 Overview\nThe reporting functions serve different purposes:",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>9</span>¬† <span class='chapter-title'>Results Report</span>"
    ]
  },
  {
    "objectID": "09_res_report.html#overview",
    "href": "09_res_report.html#overview",
    "title": "9¬† Results Report",
    "section": "",
    "text": "Function\nPurpose\nOutput\n\n\n\n\nexport_functional_module()\nExport analysis results to CSV files\nIndividual UTF-8 CSV files for each analysis component\n\n\nreport_functional_module()\nGenerate comprehensive analysis reports\nHTML/PDF/Word/Markdown reports with embedded plots and tables",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>9</span>¬† <span class='chapter-title'>Results Report</span>"
    ]
  },
  {
    "objectID": "09_res_report.html#data-export-with-export_functional_module",
    "href": "09_res_report.html#data-export-with-export_functional_module",
    "title": "9¬† Results Report",
    "section": "9.2 Data Export with export_functional_module()",
    "text": "9.2 Data Export with export_functional_module()\nThe export_functional_module() function exports all analysis results to individual CSV files, making your data easily accessible for further analysis or sharing with collaborators.\n\n9.2.1 Basic Usage\n\n# Export all results to CSV files\nexport_functional_module(\n  object = functional_modules,\n  path = \"mapa_results\"\n)\n\nThis creates a directory structure with individual CSV files for each analysis component in your current working directory:\nmapa_results/\n‚îú‚îÄ‚îÄ enriched_pathway_go.csv\n‚îú‚îÄ‚îÄ enriched_pathway_kegg.csv  \n‚îú‚îÄ‚îÄ enriched_pathway_reactome.csv\n‚îú‚îÄ‚îÄ enriched_module_go.csv\n‚îú‚îÄ‚îÄ enriched_module_kegg.csv\n‚îú‚îÄ‚îÄ enriched_module_reactome.csv\n‚îú‚îÄ‚îÄ enriched_functional_module.csv\n‚îî‚îÄ‚îÄ llm_module_interpretation.csv\n\n\n9.2.2 Output Files Description\nPathway-Level Results: enriched_pathway_*.csv: enrichment analysis results from ORA or GSEA\nModule-Level Results: enriched_module_*.csv: modules from database-specific clustering (SimCluster)\nFunctional Module Results:\n\nenriched_functional_module.csv: Cross-database functional modules\nllm_module_interpretation.csv: LLM-generated module interpretations (if available)\n\n\n\n\n\n\n\nTip\n\n\n\nWorking with Exported Data: The CSV files can be easily imported into Excel, R, Python, or other analysis tools. Column names and data types are preserved for seamless downstream analysis.",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>9</span>¬† <span class='chapter-title'>Results Report</span>"
    ]
  },
  {
    "objectID": "09_res_report.html#comprehensive-report-generation-with-report_functional_module",
    "href": "09_res_report.html#comprehensive-report-generation-with-report_functional_module",
    "title": "9¬† Results Report",
    "section": "9.3 Comprehensive Report Generation with report_functional_module()",
    "text": "9.3 Comprehensive Report Generation with report_functional_module()\nThe report_functional_module() function creates professional, publication-ready reports that combine your analysis results with automated visualizations and interpretations.\n\n9.3.1 Basic Usage\n\n# Generate an HTML report\nreport_functional_module(\n  object = functional_modules,\n  path = \"reports\",\n  type = \"html\"\n)\n\nThis creates a report directory in your current working directory:\nreports/Report/\n‚îú‚îÄ‚îÄ mapa_report.html\n\n\n9.3.2 Report Contents\nThe generated report automatically includes:\nAnalysis Summary:\n\nParameters: Overview of enrichment analysis parameters and results\nObject information: Summary statistics for each database and analysis level, and processing timeline and method details\n\nVisualizations:\n\nTop enriched pathways bar charts\nDatabase-specific module bar charts (if applicable)\nFunctional module bar charts with LLM names (if available)\nSimilarity networks for all analysis levels\n\nData Tables:\n\nOne of Enrichment results for functional modules or LLM interpretation results with confidence scores (if available)\n\n\n\n9.3.3 Directory Management\nThe function automatically manages output directories:\n\n# First report\nreport_functional_module(object, path = \"results\")\n# Creates: results/Report/\n\n# Second report  \nreport_functional_module(object, path = \"results\") \n# Creates: results/Report_2/\n\n# Third report\nreport_functional_module(object, path = \"results\")\n# Creates: results/Report_3/\n\nThis prevents accidental overwrites while maintaining organized output.",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>9</span>¬† <span class='chapter-title'>Results Report</span>"
    ]
  },
  {
    "objectID": "09_res_report.html#troubleshooting-common-issues",
    "href": "09_res_report.html#troubleshooting-common-issues",
    "title": "9¬† Results Report",
    "section": "9.4 Troubleshooting Common Issues",
    "text": "9.4 Troubleshooting Common Issues\n\nLaTeX/PDF Issues:\n\n# Check LaTeX installation\nSys.which(\"pdflatex\")\n\n# Install TinyTeX if empty result\ninstall.packages(\"tinytex\")\ntinytex::install_tinytex()\n\n# Alternative: use HTML for immediate results\nreport_functional_module(object, type = \"html\")\n\nMissing Dependencies: The function will provide informative error messages about missing packages and suggest installation commands.",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>9</span>¬† <span class='chapter-title'>Results Report</span>"
    ]
  },
  {
    "objectID": "09_res_report.html#next-steps",
    "href": "09_res_report.html#next-steps",
    "title": "9¬† Results Report",
    "section": "9.5 Next Steps",
    "text": "9.5 Next Steps\nWith your results exported and reports generated, you now have comprehensive documentation of your functional module analysis. These outputs provide the foundation for:\n\nFurther Analysis: Use exported CSV files for custom analyses or integration with other tools\nCollaboration: Share HTML reports with colleagues for easy viewing and discussion\n\nPublication: Use PDF reports and exported data for manuscript preparation\nPresentation: Extract visualizations and key findings for presentations",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>9</span>¬† <span class='chapter-title'>Results Report</span>"
    ]
  },
  {
    "objectID": "09_res_report.html#thank-you-reach-out",
    "href": "09_res_report.html#thank-you-reach-out",
    "title": "9¬† Results Report",
    "section": "9.6 Thank You & Reach Out",
    "text": "9.6 Thank You & Reach Out\nTo this point, mapa command-line workflow is now complete! Thank you for your use.\nIf you have any questions regarding mapa command-line workflow, feel free to reach out via the mapa GitHub Issues page.\n\n\n\n\n\n\nNote\n\n\n\nCite Our Work: If you used mapa in your publications, we would appreciate it if you could cite our paper [to be updated.]",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>9</span>¬† <span class='chapter-title'>Results Report</span>"
    ]
  },
  {
    "objectID": "10_shinyapp_installation.html",
    "href": "10_shinyapp_installation.html",
    "title": "10¬† Installation",
    "section": "",
    "text": "Follow the steps below to install the latest development version of MAPA shinyapp from GitHub (the script first installs BiocManager, remotes, and MAPA if you don‚Äôt have them):\n\nif (!requireNamespace(\"BiocManager\", quietly = TRUE)) {\n install.packages(\"BiocManager\") \n}\n\nif (!requireNamespace(\"remotes\", quietly = TRUE)) {\n install.packages(\"remotes\") \n}\n\nremotes::install_github(\n  \"jaspershen-lab/mapa\",\n  dependencies = TRUE,\n  repos = BiocManager::repositories(),\n  upgrade = \"ask\"\n)\n\nremotes::install_github(\n  \"jaspershen-lab/mapashiny\",\n  dependencies = TRUE,\n  repos        = BiocManager::repositories(),\n  upgrade      = \"ask\"\n)",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>10</span>¬† <span class='chapter-title'>Installation</span>"
    ]
  },
  {
    "objectID": "11_input_shiny.html",
    "href": "11_input_shiny.html",
    "title": "11¬† Data Input and Preprocessing",
    "section": "",
    "text": "11.1 Launching the MAPA Shiny App\nThis chapter covers how to input and preprocess your data using the MAPA Shiny application. The Shiny app provides an intuitive interface for uploading data and performing ID conversion, which is essential for downstream pathway analysis.\nBefore you can input and process your data, you need to launch the MAPA Shiny application.\nTo launch the MAPA Shiny app, run the following command in your R console:\nlibrary(mapashiny)\nrun_mapa_shiny()\nOnce launched, you‚Äôll see the MAPA interface with:\nThe sidebar contains the following sections:",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>11</span>¬† <span class='chapter-title'>Data Input and Preprocessing</span>"
    ]
  },
  {
    "objectID": "11_input_shiny.html#launching-the-mapa-shiny-app",
    "href": "11_input_shiny.html#launching-the-mapa-shiny-app",
    "title": "11¬† Data Input and Preprocessing",
    "section": "",
    "text": "Important\n\n\n\nPrerequisites: Ensure you have installed both the mapa package and mapashiny package as described in Chapter 10.\n\n\n\n\n\n\nHeader: Application title and navigation\nSidebar: Menu with different analysis steps\nMain Panel: Content area for each analysis step\n\n\n\n\n\n\n\n\nIntroduction: Overview of MAPA functionality\nUpload Data: File upload and ID conversion (covered in this chapter)\nEnrich Pathways: Pathway enrichment analysis\nPathway Clustering: Two methods for grouping related pathways\nLLM Interpretation: AI-powered functional module annotation\nData Visualization: Results plotting and visualization\nResults & Report: Final results and report generation",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>11</span>¬† <span class='chapter-title'>Data Input and Preprocessing</span>"
    ]
  },
  {
    "objectID": "11_input_shiny.html#accessing-the-upload-data-interface",
    "href": "11_input_shiny.html#accessing-the-upload-data-interface",
    "title": "11¬† Data Input and Preprocessing",
    "section": "11.2 Accessing the Upload Data Interface",
    "text": "11.2 Accessing the Upload Data Interface\nAfter launching the MAPA Shiny app, navigate to the Upload Data tab in the sidebar. The interface is divided into two main sections:\n\nLeft Panel: File upload, data type selection, and processing parameters\nRight Panel: Data preview and download options",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>11</span>¬† <span class='chapter-title'>Data Input and Preprocessing</span>"
    ]
  },
  {
    "objectID": "11_input_shiny.html#input-data-requirements",
    "href": "11_input_shiny.html#input-data-requirements",
    "title": "11¬† Data Input and Preprocessing",
    "section": "11.3 Input Data Requirements",
    "text": "11.3 Input Data Requirements\nThe Shiny app accepts CSV files (.csv) and Excel files (.xlsx, .xls). For more details and examples, see Section 2.1.\n\nGene Expression DataMetabolite Data\n\n\nFor Over-Representation Analysis (ORA), your data must contain one of the following identifier columns (column names must be lowercase):\n\nensembl: Ensembl gene IDs (e.g., ‚ÄúENSG00000141510‚Äù)\nentrezid: NCBI Entrez gene IDs (e.g., ‚Äú7157‚Äù)\nuniprot: UniProtKB accession numbers (e.g., ‚ÄúP04637‚Äù)\nsymbol: Gene symbols (e.g., ‚ÄúTP53‚Äù)\n\nFor Gene Set Enrichment Analysis (GSEA), you need:\n\nOne identifier column (ensembl, entrezid, uniprot, or symbol)\nAn order_by column named ‚Äúfc‚Äù or ‚Äúp_value_adjust‚Äù, containing numeric values to rank genes (This is used to create the ranked gene list required for GSEA. Common choices like Log2 fold change values, pvalue)\n\n\n\nFor metabolite analysis, your data must contain one of the following identifier columns:\n\nhmdbid: Human Metabolome Database IDs (e.g., ‚ÄúHMDB0000001‚Äù) - Human only\nkeggid: KEGG Compound IDs (e.g., ‚ÄúC00001‚Äù) - All organisms",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>11</span>¬† <span class='chapter-title'>Data Input and Preprocessing</span>"
    ]
  },
  {
    "objectID": "11_input_shiny.html#step-by-step-guide",
    "href": "11_input_shiny.html#step-by-step-guide",
    "title": "11¬† Data Input and Preprocessing",
    "section": "11.4 Step-by-Step Guide",
    "text": "11.4 Step-by-Step Guide\n\n11.4.1 Step 1: Select Query Type\nFirst, choose your data type using the radio buttons:\n\nGene: For gene expression or proteomic data\nMetabolite: For metabolomic data\n\n\n\n\n\n\n\n\n11.4.2 Step 2: Load Your Data\nYou have two options for loading data:\n\nOption A: Upload Your Own DataOption B: Use Example Data\n\n\n\nClick ‚ÄúBrowse‚Äù to upload your file\nSelect a CSV or Excel file from your computer\nThe data will be automatically loaded and displayed in the preview table\n\n\n\n\n\n\n\n\nFor quick testing, select from the available example datasets:\nGene Examples:\n\nPathway Enrichment Example: Sample data for Over-Representation Analysis (ORA)\nGSEA Example: Sample data with fold change values for Gene Set Enrichment Analysis\n\nMetabolite Examples:\n\nPathway Enrichment Example: Sample metabolite data for pathway analysis\n\n\n\n\n\n\n\n\n\n\n\n11.4.3 Step 3: Configure ID Conversion Parameters\n\n11.4.3.1 For Gene Data\n\nModel OrganismsNon-Model Organisms\n\n\nIf working with common model organisms:\n\nSelect Organism: Choose from the dropdown menu for standard organism database Bioconductor packages.\n\n\n\n\n\n\nNote\n\n\n\nFor most model organisms, Bioconductor already supplies curated organism annotation databases (the OrgDb packages). You can browse the complete list and select the one that matches your species of interest here.\n\n\nInput ID Type: Select the identifier type in your data\n\n\n\n\n\n\n\n\nFor organisms without standard Bioconductor packages:\n\nAnnotationHub ID: Enter the AnnotationHub identifier (e.g., ‚ÄúAH119900‚Äù)\nReturn OrgDb: Check this box to return the organism database for downstream analysis\nInput ID Type: Select your input identifier type\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nFinding AnnotationHub IDs:\nTo find the correct AnnotationHub ID for your organism:\n\nlibrary(AnnotationHub)\nah &lt;- AnnotationHub()\n# Search by taxonomy ID (e.g., 9541 for Macaca fascicularis)\nquery_result &lt;- AnnotationHub::query(ah, c(\"OrgDb\", \"9541\"))\nquery_result$ah_id\n\n\n\n\n\n\n\n\n11.4.3.2 For Metabolite Data\n\nOrganism: Select from KEGG organism codes\nInput ID Type: Choose the identifier type in your data: KEGG ID (available for all organisms), HMDB ID (human only)\n\n\n\n\n\n\n\n\n\n11.4.4 Step 4: Process Your Data\n\nClick the ‚ÄúSubmit‚Äù button to start ID conversion\nThe app will validate your inputs and perform the conversion\nSuccess or error messages will appear as notifications\nProcessed data will be displayed in the preview table\n\n\n\n\n\n\n\n\n11.4.5 Step 5: Review and Download Results\nAfter successful processing:\n\nPreview: Review the converted data in the ‚ÄúMarker information‚Äù tab\nDownload: Click the ‚ÄúDownload‚Äù button to save the processed data as a CSV file\nView Code: Click the ‚ÄúCode‚Äù button to see the R code that replicates your conversion",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>11</span>¬† <span class='chapter-title'>Data Input and Preprocessing</span>"
    ]
  },
  {
    "objectID": "11_input_shiny.html#understanding-the-results",
    "href": "11_input_shiny.html#understanding-the-results",
    "title": "11¬† Data Input and Preprocessing",
    "section": "11.5 Understanding the Results",
    "text": "11.5 Understanding the Results\nAfter ID conversion, your data will contain all necessary identifier columns:\nFor Genes:\n\nOriginal columns from your input data\nensembl: Ensembl gene IDs\nentrezid: NCBI Entrez gene IDs\n\nuniprot: UniProtKB accession numbers\nsymbol: Gene symbols\n\n\n\n\n\n\n\nNote\n\n\n\nBlank columns might appear for some identifier types after ID conversion. Because some annotation databases may not provide all four identifier types (ensembl, entrezid, uniprot, symbol). MAPA will generate blank columns for unavailable ID types. Do NOT delete these blank columns as they are required for the downstream workflow to function correctly.\n\n\nFor Metabolites:\n\nOriginal columns from your input data\nhmdbid: HMDB IDs (human only)\nkeggid: KEGG compound IDs",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>11</span>¬† <span class='chapter-title'>Data Input and Preprocessing</span>"
    ]
  },
  {
    "objectID": "11_input_shiny.html#troubleshooting-common-issues",
    "href": "11_input_shiny.html#troubleshooting-common-issues",
    "title": "11¬† Data Input and Preprocessing",
    "section": "11.6 Troubleshooting Common Issues",
    "text": "11.6 Troubleshooting Common Issues\n\nFile Upload Problems\nIssue: ‚ÄúUnsupported file format‚Äù error\nSolution: Ensure your file is in CSV (.csv) or Excel (.xlsx, .xls) format\nID Conversion Errors\nIssue: ‚ÄúInvalid OrgDb package name‚Äù error\nSolution: Ensure the organism package name follows the format org.XX.eg.db\nIssue: ‚ÄúPackage not installed‚Äù error\nSolution: Install the required Bioconductor package:\n\nBiocManager::install('org.Hs.eg.db')  # Example for human\n\nIssue: High percentage of failed ID mappings\nSolution:\n\nVerify your input ID type selection matches your data\nCheck for typos or formatting issues in your identifiers\nSome ID loss is normal during conversion\n\nNon-Model Organism Issues\nIssue: AnnotationHub ID not found\nSolution:\n\nVerify the AnnotationHub ID is correct\nCheck internet connection for AnnotationHub access\nUse the search method provided in the tip above",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>11</span>¬† <span class='chapter-title'>Data Input and Preprocessing</span>"
    ]
  },
  {
    "objectID": "11_input_shiny.html#next-steps",
    "href": "11_input_shiny.html#next-steps",
    "title": "11¬† Data Input and Preprocessing",
    "section": "11.7 Next Steps",
    "text": "11.7 Next Steps\nOnce your data is successfully processed:\n\nClick the ‚ÄúNext‚Äù button to proceed to Enrich Pathways\nOr navigate manually to the Enrich Pathways tab in the sidebar\n\nThe processed data will automatically be available for pathway enrichment analysis in the next step.\n\n\n\n\n\n\nImportant\n\n\n\nBefore Proceeding: Ensure your data conversion was successful and all necessary identifier columns are present. The enrichment analysis requires properly formatted identifier information to function correctly.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>11</span>¬† <span class='chapter-title'>Data Input and Preprocessing</span>"
    ]
  },
  {
    "objectID": "12_enrichment_analysis_shiny.html",
    "href": "12_enrichment_analysis_shiny.html",
    "title": "12¬† Pathway Analysis",
    "section": "",
    "text": "12.1 Supported Databases and Analysis Types\nThis chapter covers how to perform pathway enrichment analysis using the MAPA Shiny application. The Shiny app provides an intuitive interface for running both Over-Representation Analysis (ORA) and Gene Set Enrichment Analysis (GSEA) for genes, and ORA for metabolites across multiple databases.\nThe MAPA Shiny app leverages the powerful enrichment functions from the clusterProfiler package for pathway analysis:",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>12</span>¬† <span class='chapter-title'>Pathway Analysis</span>"
    ]
  },
  {
    "objectID": "12_enrichment_analysis_shiny.html#sec-supported_db",
    "href": "12_enrichment_analysis_shiny.html#sec-supported_db",
    "title": "12¬† Pathway Analysis",
    "section": "",
    "text": "For Gene DataFor Metabolite Data\n\n\n\n\n\nDatabase\nSupported Organism\nKeytype Options\nAnalysis Types\n\n\n\n\nGene Ontology (GO)\nAny organism with OrgDb object (organism annotation database package from Bioconductor or OrgDb object retrieved from AnnotationHub)\nENTREZID, SYMBOL, ENSEMBL, UNIPROT\nORA, GSEA\n\n\nKEGG\nAll KEGG organisms\nkegg, ncbi-geneid, ncbi-proteinid, uniprot\nORA, GSEA\n\n\nReactome\nhuman, rat, mouse, celegans, yeast, zebrafish, fly, bovine, canine, chicken\nENTREZID only\nORA, GSEA\n\n\n\n\n\n\n\n\nDatabase\nSupported Organism\nKeytype Options\nAnalysis Types\n\n\n\n\nKEGG\nAll KEGG organisms\nKEGG compound IDs\nORA only\n\n\nSMPDB\nHuman only\nHMDB IDs\nORA only\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nFor comprehensive understanding of enrichment analysis concepts, methodologies, we highly recommend reading the Biomedical Knowledge Mining using GOSemSim and clusterProfiler book. This book covers all the underlying methods that MAPA uses and will help you make informed decisions about your analysis parameters.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>12</span>¬† <span class='chapter-title'>Pathway Analysis</span>"
    ]
  },
  {
    "objectID": "12_enrichment_analysis_shiny.html#gene-based-enrichment-analysis",
    "href": "12_enrichment_analysis_shiny.html#gene-based-enrichment-analysis",
    "title": "12¬† Pathway Analysis",
    "section": "12.2 Gene-based Enrichment Analysis",
    "text": "12.2 Gene-based Enrichment Analysis\n\n12.2.1 Step 1: Select Analysis Type\nThe app automatically detects your data type (whether ‚Äúgene‚Äù or ‚Äúmetabolite‚Äù) from the previous step. For gene data, choose between:\n\nPathway enrichment analysis (ORA): Tests for over-representation of your genes in predefined pathways\nGene set enrichment analysis (GSEA): Analyzes the entire ranked gene list to identify enriched pathways\n\n\n\n\n\n\n\nNote\n\n\n\nGSEA Requirements: If you select GSEA, an additional ‚ÄúOrder by‚Äù field will appear. This should correspond to a numeric column in your data (like fold change or p-values) that will be used to rank genes. Make sure this column named ‚Äúfc‚Äù or ‚Äúp_value_adjust‚Äù.\n\n\n\n\n\n\n\n\n\n12.2.2 Step 2: Configure Database Parameters\nThe app automatically detects available databases based on your organism and displays relevant parameter options:\n\nGO ParametersKEGG ParametersReactome Parameters\n\n\nWhen GO is selected, configure:\n\nGO Keytype: Choose the identifier type for GO analysis\n\nENTREZID: Entrez Gene IDs\nSYMBOL: Gene symbols\nENSEMBL: Ensembl gene IDs\nUNIPROT: UniProt IDs\n\nGO Ontology: Select which Gene Ontology aspects to analyze\n\nALL: All three ontologies (recommended)\nBP: Biological Process only\nCC: Cellular Component only\nMF: Molecular Function only\n\n\n\n\n\n\n\n\n\nWhen KEGG is selected, configure:\n\nKEGG Keytype: Choose the identifier type for KEGG analysis\n\nkegg: KEGG gene IDs (recommended)\nncbi-geneid: NCBI Gene IDs\nncbi-proteinid: NCBI Protein IDs\nuniprot: UniProt IDs\n\n\n\n\n\n\n\n\n\nReactome analysis uses ENTREZID only and requires no additional configuration.\n\n\n\n\n\n12.2.3 Step 3: Set Statistical Parameters\nConfigure the statistical thresholds for your analysis:\n\nP-value cutoff: Significance threshold for raw p-values (default: 0.05)\nP-adjust method: Multiple testing correction method (default: BH - Benjamini-Hochberg)\nQ-value cutoff: False Discovery Rate threshold (default: 0.2)\nGene set size: Minimum and maximum pathway sizes to consider (default: 10-500)",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>12</span>¬† <span class='chapter-title'>Pathway Analysis</span>"
    ]
  },
  {
    "objectID": "12_enrichment_analysis_shiny.html#metabolite-based-enrichment-analysis",
    "href": "12_enrichment_analysis_shiny.html#metabolite-based-enrichment-analysis",
    "title": "12¬† Pathway Analysis",
    "section": "12.3 Metabolite-based Enrichment Analysis",
    "text": "12.3 Metabolite-based Enrichment Analysis\nFor metabolite data, the interface automatically switches to metabolite-specific options and shows available databases based on your organism:\n\nHuman: Both HMDB and KEGG databases available\nOther organisms: Only KEGG database available\n\n\n\n\n\n\n\n12.3.1 Step 1: Submit Analysis\n\nReview your parameter selections\nClick the ‚ÄúSubmit‚Äù button to start the enrichment analysis\nA progress indicator will show the analysis is running\nSuccess or error messages will appear as notifications\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nProcessing Time: Metabolite enrichment analysis may take several minutes to complete. Please wait patiently while the analysis runs.\n\n\n\n\n12.3.2 Step 2: Review Results\nAfter successful completion, results will appear in the right panel with separate tabs for each database:\n\nGene ResultsMetabolite Results\n\n\nFor gene enrichment analysis, you‚Äôll see tabs for:\n\nGO: Gene Ontology enrichment results\nKEGG: KEGG pathway enrichment results\n\nReactome: Reactome pathway enrichment results\nR object: Summary of the complete results object\n\n\n\n\n\n\n\n\nFor metabolite enrichment analysis, you‚Äôll see tabs for:\n\nKEGG Metabolite: KEGG metabolic pathway results\nHMDB: Small Molecule Pathway Database pathway results (human only)\nR object: Summary of the complete results object",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>12</span>¬† <span class='chapter-title'>Pathway Analysis</span>"
    ]
  },
  {
    "objectID": "12_enrichment_analysis_shiny.html#downloading-results",
    "href": "12_enrichment_analysis_shiny.html#downloading-results",
    "title": "12¬† Pathway Analysis",
    "section": "12.4 Downloading Results",
    "text": "12.4 Downloading Results\nEach results tab includes a ‚ÄúDownload‚Äù button to save results as CSV files:\n\nNavigate to the desired results tab\nClick ‚ÄúDownload‚Äù to save the table\nThe ‚ÄúR object‚Äù tab allows downloading the complete results object for further analysis in R",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>12</span>¬† <span class='chapter-title'>Pathway Analysis</span>"
    ]
  },
  {
    "objectID": "12_enrichment_analysis_shiny.html#understanding-the-results",
    "href": "12_enrichment_analysis_shiny.html#understanding-the-results",
    "title": "12¬† Pathway Analysis",
    "section": "12.5 Understanding the Results",
    "text": "12.5 Understanding the Results\nKey columns in enrichment results:\n\nGene ORAGSEAMetabolite ORA\n\n\nCore Information:\n\nID: Pathway identifier (e.g., GO:0042060 for GO, hsa04060 for KEGG, R-HSA-5669034 for Reactome)\nDescription: Pathway name\nONTOLOGY: Biological ontology (for GO only: MF=molecular function, CC=cellular component, BP=biological process)\ncategory/subcategory: KEGG pathway categories (for KEGG only)\n\nStatistical Measures:\n\npvalue: Raw p-value from hypergeometric test (equivalent to one-sided Fisher‚Äôs exact test)\np_adjust: Adjusted p-value after multiple testing correction (BH method by default)\nqvalue: Q-value for FDR control. For more information, see ?qvalue::qvalue\n\nGene Mapping:\n\nGeneRatio: Ratio of input genes annotated to this pathway (format: ‚Äúgenes_in_pathway/total_input_genes‚Äù)\nBgRatio: Ratio of all genes annotated to this pathway in the background universe (format: ‚Äúpathway_genes/universe_genes‚Äù)\nCount: Total number of genes from input list that match this pathway\ngeneID: Gene IDs that overlap between your gene list and the pathway (separated by ‚Äú/‚Äù)\n\nEnrichment Metrics:\n\nRichFactor: Ratio of input genes annotated to a pathway vs.¬†all genes annotated to this pathway\nFoldEnrichment: Enrichment fold change (GeneRatio divided by BgRatio)\nzScore: Standard deviations away from expected overlap (How unusual or extreme the observed enrichment is compared to what you‚Äôd expect by chance. Higher absolute z-score means more ‚Äúsurprising‚Äù or significant enrichment.)\n\n\n\nFor GSEA results, additional columns specific to ranked list analysis include:\n\nsetSize: Total number of genes in the gene set/pathway\nenrichmentScore: Degree of overrepresentation at top/bottom of ranked list\nNES: Normalized Enrichment Score - main metric for interpretation\n\nPositive NES: pathway enriched in upregulated genes (pathway activation)\nNegative NES: pathway enriched in downregulated genes (pathway suppression)\n\nrank: Position in ranked list where maximum enrichment score occurred\nleading_edge: Statistics for the leading-edge subset of genes\ncore_enrichment: Core enriched genes that contribute most to the enrichment signal\nCount: Number of core enriched genes\n\n\n\nFor metabolite ORA results, the result structure differs from gene-based analysis:\nPathway Information:\n\npathway_id: KEGG pathway ID or Small Molecule Pathway Database pathway ID (e.g., SMP0000028)\npathway_name: Name of the metabolic pathway (e.g., ‚ÄúCaffeine Metabolism‚Äù)\ndescribtion: Detailed description of the pathway from the corresponding database\npathway_class: Classification of pathway (e.g., ‚ÄúMetabolic;primary_pathway‚Äù, ‚ÄúDisease;primary_pathway‚Äù)\n\nStatistical Measures:\n\np_value: Raw p-value from enrichment test\np_adjust: Adjusted p-value for multiple testing correction\n\nMetabolite Mapping:\n\nall_id: All metabolite IDs in this pathway (separated by ‚Äú;‚Äù)\nall_number: Total number of metabolites in the pathway\nmapped_id: Your input metabolite IDs that map to this pathway (separated by ‚Äú;‚Äù)\nmapped_number: Number of your metabolites that map to this pathway\nmapped_percentage: Percentage of pathway metabolites covered by your input data",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>12</span>¬† <span class='chapter-title'>Pathway Analysis</span>"
    ]
  },
  {
    "objectID": "12_enrichment_analysis_shiny.html#viewing-the-analysis-code",
    "href": "12_enrichment_analysis_shiny.html#viewing-the-analysis-code",
    "title": "12¬† Pathway Analysis",
    "section": "12.6 Viewing the Analysis Code",
    "text": "12.6 Viewing the Analysis Code\nClick the ‚ÄúCode‚Äù button to see the exact R code that replicates your analysis: This code can be copied and used in your own R scripts for reproducible analysis.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>12</span>¬† <span class='chapter-title'>Pathway Analysis</span>"
    ]
  },
  {
    "objectID": "12_enrichment_analysis_shiny.html#next-steps",
    "href": "12_enrichment_analysis_shiny.html#next-steps",
    "title": "12¬† Pathway Analysis",
    "section": "12.7 Next Steps",
    "text": "12.7 Next Steps\nOnce your enrichment analysis is complete:\n\nReview Results: Examine the significance and biological relevance of enriched pathways\nDownload Data: Save results (especially R Object from R Object tab) for further analysis\nProceed to Clustering: Click the ‚ÄúNext‚Äù button to move to pathway clustering analysis. Based on your data type and analysis goals, you can proceed to:\n\nSimCluster Method: Traditional similarity-based clustering (Step 1: Merge Pathways)\nEmbedCluster Method: Advanced biotext embedding-based clustering\n\nFor metabolite analyses in non-human organisms, the app will automatically direct you to the EmbedCluster method, as it‚Äôs more suitable for single-database analyses.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>12</span>¬† <span class='chapter-title'>Pathway Analysis</span>"
    ]
  },
  {
    "objectID": "13_pathway_similarity_shiny.html",
    "href": "13_pathway_similarity_shiny.html",
    "title": "13¬† Pathway Similarity Calculation",
    "section": "",
    "text": "13.1 Step 1: Load Your Data\nThis chapter covers how to calculate pathway similarity using the MAPA Shiny application. The Shiny app computes pathway similarity using two powerful methods: traditional similarity and biotext embedding similarity. Both methods prepare your data for downstream clustering analysis, allowing you to choose the approach that best fits your research needs and computational resources.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>13</span>¬† <span class='chapter-title'>Pathway Similarity Calculation</span>"
    ]
  },
  {
    "objectID": "13_pathway_similarity_shiny.html#step-1-load-your-data",
    "href": "13_pathway_similarity_shiny.html#step-1-load-your-data",
    "title": "13¬† Pathway Similarity Calculation",
    "section": "",
    "text": "Option 1: Continue from Previous Step\nIf you have completed pathway enrichment analysis in the current session, your data will automatically be available for similarity calculation. The interface will detect your data type (gene or metabolite) and display appropriate parameter options.\nOption 2: Upload Existing Results\nIf you have previously saved enrichment results, you can upload them:\n\nClick ‚ÄúBrowse‚Äù at the top of the left panel ‚ÄúUpload Enriched Pathways Result (.rda)‚Äù to upload your enrichment results file (.rda format)\nSelect your file\nWait for validation - the app will automatically detect: data type (gene or metabolite), available databases from your enrichment analysis, organism information (required for downstream analysis)",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>13</span>¬† <span class='chapter-title'>Pathway Similarity Calculation</span>"
    ]
  },
  {
    "objectID": "13_pathway_similarity_shiny.html#step-2-select-method",
    "href": "13_pathway_similarity_shiny.html#step-2-select-method",
    "title": "13¬† Pathway Similarity Calculation",
    "section": "13.2 Step 2: Select Method",
    "text": "13.2 Step 2: Select Method\nOnce your data is loaded, choose your similarity calculation method using the radio buttons:\n\nTraditional methods: Uses established similarity measures (semantic similarity for GO, overlap-based similarity for all supported databases, see Section 12.1)\nBiotext embedding: Uses large language model (LLM) text embeddings to capture semantic relationships\n\n\n13.2.1 Method 1: Traditional Methods\nWhen you select ‚ÄúTraditional methods‚Äù, the interface displays database-specific parameter panels based on your enrichment analysis results. The app automatically detects which databases are available from your enrichment analysis. The traditional similarity method requires four main parameters for each database. While the parameter names vary slightly between data types, they serve the same fundamental purposes:\n\n\n\n\n\n\n\n\n\n\nParameter\nPurpose\nDefault\nGene Databases\nMetabolite Databases\n\n\n\n\nP-adjust cutoff\nSignificance threshold for pathway inclusion\n0.05\nGO, KEGG, Reactome\nSMPDB, KEGG\n\n\nCount cutoff\nMinimum genes/metabolites per pathway\n5\nGO, KEGG, Reactome\nSMPDB, KEGG\n\n\nSimilarity method\nAlgorithm for calculating pathway similarity\nSee below\nGO, KEGG, Reactome\nSMPDB, KEGG\n\n\nSimilarity cutoff\nThreshold for intra-database pathway clustering\n0.5\nGO, KEGG, Reactome\nSMPDB, KEGG\n\n\n\nSimilarity Method Options:\n\nOnly GO terms: Semantic similarity using the simona package\nGO/KEGG/Reactome/SMPDB pathways: Gene/metabolite overlap similarity (Jaccard, Dice, Overlap, and Kappa)\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nParameter Selection Guide:\n\nLower p-adjust cutoff (e.g., 0.01) = More stringent, fewer pathways\nHigher count cutoff (e.g., 10) = Focus on larger, more established pathways\nSimilarity cutoff = Balance between intra-database module granularity (lower values) and specificity (higher values)\n\n\n\n\n\n13.2.2 Method 2: Biotext Embedding\nWhen you select ‚ÄúBiotext embedding‚Äù, the interface displays parameters for LLM-based similarity calculation.\n\n13.2.2.1 API Configuration\nSet up your API connection:\n\nAPI provider: Choose between OpenAI or Gemini\nEmbedding model: Specify the text embedding model (e.g., ‚Äútext-embedding-3-small‚Äù)\nAPI key: Enter your API key for the selected provider\n\n\n\n\n\n\n\nNote\n\n\n\nNote: Third-party API keys, such as those from OpenRouter, are not currently supported. Please use an official API provider.\n\n\n\n\n\n\n\n\nTip\n\n\n\nAPI Key Setup:\n\nFor OpenAI: Obtain your API key from OpenAI Platform\nFor Gemini: Get your API key from Google AI Studio\n\nStore your API key securely and never commit it to version control.\n\n\n\n\n13.2.2.2 Database Selection and Filtering\nConfigure which databases to include and set filtering parameters:\n\n\n\n\n\n\n\n\n\n\nParameter\nPurpose\nDefault\nGene Analysis\nMetabolite Analysis\n\n\n\n\nAvailable Database\nSelect databases for embedding analysis\nAuto-detected\nGO, KEGG, Reactome\nSMPDB, KEGG\n\n\nP-adjust cutoff\nSignificance threshold for pathway inclusion\n0.05\nAll selected databases\nAll selected databases\n\n\nCount cutoff\nMinimum genes/metabolites per pathway\n5\nAll selected databases\nAll selected databases\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nDatabase Availability: The databases available for selection depend on your organism and the results from your enrichment analysis. Only databases with significant results will be available for embedding analysis.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>13</span>¬† <span class='chapter-title'>Pathway Similarity Calculation</span>"
    ]
  },
  {
    "objectID": "13_pathway_similarity_shiny.html#step-3-run-the-analysis",
    "href": "13_pathway_similarity_shiny.html#step-3-run-the-analysis",
    "title": "13¬† Pathway Similarity Calculation",
    "section": "13.3 Step 3: Run the Analysis",
    "text": "13.3 Step 3: Run the Analysis\n\nVerify your data is loaded - either from the current session or uploaded file\nSelect your similarity method - Traditional or Biotext embedding\nReview all parameter selections to ensure they match your analysis goals\nClick the ‚ÄúSubmit‚Äù button to start the similarity calculation\nMonitor progress - a progress indicator will show the analysis is running\nWait for completion - processing time varies by method:\n\nTraditional methods: Usually complete within minutes\nBiotext embedding: May take longer due to API calls and text processing",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>13</span>¬† <span class='chapter-title'>Pathway Similarity Calculation</span>"
    ]
  },
  {
    "objectID": "13_pathway_similarity_shiny.html#step-4-review-results",
    "href": "13_pathway_similarity_shiny.html#step-4-review-results",
    "title": "13¬† Pathway Similarity Calculation",
    "section": "13.4 Step 4: Review Results",
    "text": "13.4 Step 4: Review Results\nAfter successful completion, results will appear in the right panel with different content based on your selected method:\n\nTraditional Methods ResultsBiotext Embedding Results\n\n\nTable Tab: View database-specific module results\n\nBrowse enriched pathway intra-database modules generated based on pathway similarity\nExamine module composition\nDownload individual database results as CSV files\n\nKey result columns in the module tables:\n\nmodule: Intra-database module identifier (e.g., ‚Äúgo_Module_2‚Äù, ‚Äúkegg_Module_15‚Äù)\nmodule_annotation: Representative pathway name for the module (pathway with lowest p-adjust for ORA or highest |NES| for GSEA)\nDescription: Names of all pathways in the module (separated by ;)\nmodule_content: All pathway/term IDs grouped in this module\nCount: Number of genes/metabolites from input list in the module\np_adjust: Best (lowest) adjusted p-value among pathways in the module\n\n\n\n\n\n\nData Visualization Tab: Generate similarity network plots\n\nClick ‚ÄúGenerate plot‚Äù to create network visualizations for modules from each database\nCustomize plot parameters (degree cutoff, text display options)\n\n\n\n\n\n\nR Object Tab: Access the complete results object\n\nView a summary of the analysis results\nDownload the complete functional module object (.rda format) for further analysis in R\n\n\n\n\n\n\n\n\nFor biotext embedding results, you‚Äôll see a simplified results panel to download the results (.rda format) which include a similarity matrix and your enrichment analysis result for use in downstream clustering analysis.\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nEmbedding Results: The similarity matrix from biotext embedding is typically large and computationally intensive to display. Instead of showing the full matrix in the interface, you can download it for use in subsequent analysis steps or external tools.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>13</span>¬† <span class='chapter-title'>Pathway Similarity Calculation</span>"
    ]
  },
  {
    "objectID": "13_pathway_similarity_shiny.html#step-5-view-analysis-code",
    "href": "13_pathway_similarity_shiny.html#step-5-view-analysis-code",
    "title": "13¬† Pathway Similarity Calculation",
    "section": "13.5 Step 5: View Analysis Code",
    "text": "13.5 Step 5: View Analysis Code\nClick the ‚ÄúCode‚Äù button to see the exact R code that replicates your analysis. This feature provides:\n\nReproducibility: Copy and paste code into R scripts\nLearning: Understand the underlying MAPA functions and parameters\nCustomization: Modify parameters for batch processing or additional analyses",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>13</span>¬† <span class='chapter-title'>Pathway Similarity Calculation</span>"
    ]
  },
  {
    "objectID": "13_pathway_similarity_shiny.html#method-comparison",
    "href": "13_pathway_similarity_shiny.html#method-comparison",
    "title": "13¬† Pathway Similarity Calculation",
    "section": "13.6 Method Comparison",
    "text": "13.6 Method Comparison\n\n\n\n\n\n\n\n\nAspect\nTraditional Methods\nBiotext Embedding\n\n\n\n\nSpeed\nFast, deterministic\nSlower, requires API calls\n\n\nCost\nFree\nAPI usage costs\n\n\nReproducibility\nFully reproducible\nHighly reproducible (minor API variations)\n\n\nNovel discoveries\nBased on known annotations\nCan identify functional relationships beyond overlap\n\n\nInternet dependency\nMinimal (for database updates)\nRequired for API access\n\n\nCross-database integration\nLimited by annotation overlap\nExcellent semantic integration",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>13</span>¬† <span class='chapter-title'>Pathway Similarity Calculation</span>"
    ]
  },
  {
    "objectID": "13_pathway_similarity_shiny.html#next-steps",
    "href": "13_pathway_similarity_shiny.html#next-steps",
    "title": "13¬† Pathway Similarity Calculation",
    "section": "13.7 Next Steps",
    "text": "13.7 Next Steps\nOnce your similarity calculation is complete:\n\nReview and Download Results: Examine the similarity patterns and download results for further analysis and as backup copies so that you can restart from this point if needed.\nProceed to Clustering: Click the ‚ÄúNext‚Äù button to move to the Pathway Clustering section\n\nThe similarity results will automatically be available for the next step in your MAPA analysis workflow in this current session, where you‚Äôll group related pathways into functional modules.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>13</span>¬† <span class='chapter-title'>Pathway Similarity Calculation</span>"
    ]
  },
  {
    "objectID": "14_get_functional_modules_shiny.html",
    "href": "14_get_functional_modules_shiny.html",
    "title": "14¬† Functional Module Identification",
    "section": "",
    "text": "14.1 Overview\nThis chapter describes how to identify functional modules using the MAPA Shiny application. The Shiny app provides an intuitive interface for grouping related pathways into functional modules using optimal clustering parameters.\nThe Pathway Clustering section in the MAPA Shiny app provides a comprehensive workflow for identifying functional modules from pathway similarity results. It includes two main steps:\nThis two-step approach helps ensure high-quality, biologically meaningful pathway modules.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>14</span>¬† <span class='chapter-title'>Functional Module Identification</span>"
    ]
  },
  {
    "objectID": "14_get_functional_modules_shiny.html#overview",
    "href": "14_get_functional_modules_shiny.html#overview",
    "title": "14¬† Functional Module Identification",
    "section": "",
    "text": "(Optional) Find Optimal Parameters: Systematically evaluate different clustering algorithms and a series of similarity cutoffs to identify optimal parameters\nPerform Clustering: Apply the optimal parameters to generate functional modules",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>14</span>¬† <span class='chapter-title'>Functional Module Identification</span>"
    ]
  },
  {
    "objectID": "14_get_functional_modules_shiny.html#step-1-load-your-data",
    "href": "14_get_functional_modules_shiny.html#step-1-load-your-data",
    "title": "14¬† Functional Module Identification",
    "section": "14.2 Step 1: Load Your Data",
    "text": "14.2 Step 1: Load Your Data\n\nOption 1: Continue from Previous Step\nIf you have completed pathway similarity calculation in the current session, your data will automatically be available for clustering analysis.\nOption 2: Upload Existing Results\nIf you have previously saved similarity results, you can upload them:\n\nClick ‚ÄúBrowse‚Äù at the top of the left panel ‚ÄúUpload Similarity Result (.rda)‚Äù to upload your similarity results file (.rda format)\nSelect your file\nWait for validation - the app will automatically detect the input type and prepare for clustering analysis",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>14</span>¬† <span class='chapter-title'>Functional Module Identification</span>"
    ]
  },
  {
    "objectID": "14_get_functional_modules_shiny.html#step-2-find-optimal-parameters",
    "href": "14_get_functional_modules_shiny.html#step-2-find-optimal-parameters",
    "title": "14¬† Functional Module Identification",
    "section": "14.3 Step 2: Find Optimal Parameters",
    "text": "14.3 Step 2: Find Optimal Parameters\nBefore performing the final clustering, it‚Äôs highly recommended to systematically evaluate different clustering parameters to find the optimal settings. The optimal parameter analysis tests three clustering algorithms:\n\nBinary cut: Uses the simplifyEnrichment algorithm\nGirvan Newman: Community detection based on edge betweenness\nHierarchical: Traditional agglomerative clustering\n\nEach method is tested across a range of similarity cutoffs to find the optimal balance between cluster cohesion and separation. You can set the evaluation parameters:\n\nCutoff Increment: Step size for the similarity cutoff sequence (default: 0.1)\n\nSmaller values (e.g., 0.05) provide more detailed analysis but take longer\nLarger values (e.g., 0.1) provide faster analysis with broader evaluation\n\nHierarchical Linkage (for hierarchical method): Agglomeration method options\n\nThen run optimal parameter analysis:\n\nReview your cutoff increment setting\nClick the ‚ÄúSubmit‚Äù button to start the parameter evaluation\nMonitor progress - the analysis will test multiple clustering methods and similarity cutoffs\nWait for completion - processing typically takes 1-3 minutes depending on data complexity and cutoff increment",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>14</span>¬† <span class='chapter-title'>Functional Module Identification</span>"
    ]
  },
  {
    "objectID": "14_get_functional_modules_shiny.html#step-3-review-optimal-parameter-results",
    "href": "14_get_functional_modules_shiny.html#step-3-review-optimal-parameter-results",
    "title": "14¬† Functional Module Identification",
    "section": "14.4 Step 3: Review Optimal Parameter Results",
    "text": "14.4 Step 3: Review Optimal Parameter Results\nAfter completion, results will appear in the ‚ÄúOptimal Parameter Analysis‚Äù tab which includes Evaluation Plot and Best Recommended Combinations:\n\nEvaluation Plot\nThe plot shows how clustering quality metrics change across similarity cutoffs for different clustering methods. Look for:\n\nPeaks in modularity: Indicate good community structure (higher = stronger community structure with clearer boundaries between clusters)\nHigh silhouette scores: Indicate well-separated clusters (higher = better separated clusters)\nConsistent performance: Methods that perform well across multiple cutoffs\n\n\n\n\n\n\nBest Recommended Combinations\nThe table identifies the optimal method and cutoff combinations for each metric:\n\nMethod: Clustering algorithm (hierarchical, binary_cut, girvan_newman)\nCutoff: Optimal similarity cutoff value\nMetric: Evaluation criterion (modularity and silhouette)\nValue: Maximum achieved score for that metric",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>14</span>¬† <span class='chapter-title'>Functional Module Identification</span>"
    ]
  },
  {
    "objectID": "14_get_functional_modules_shiny.html#step-4-run-final-clustering-parameters",
    "href": "14_get_functional_modules_shiny.html#step-4-run-final-clustering-parameters",
    "title": "14¬† Functional Module Identification",
    "section": "14.5 Step 4: Run Final Clustering Parameters",
    "text": "14.5 Step 4: Run Final Clustering Parameters\n\nUse the insights from the optimal parameter analysis to set your final clustering parameters:\n\nSimilarity Cutoff: Use the recommended cutoff from your evaluation (default: 0.5). The meaning of the cutoff depends on your clustering method:\n\nGirvan-Newman: Edge filter (higher cutoffs = smaller modules)\nBinary Cut & Hierarchical: Dendrogram cutting height (higher cutoffs = larger modules)\n\nClustering Method: Choose from the three available methods: Binary cut, Girvan Newman, and Hierarchical cluserting\nHierarchical Linkage (only for hierarchical method): Agglomeration method options\n\nClick the ‚ÄúSubmit‚Äù button to perform the final clustering\nMonitor progress - clustering typically completes within minutes\nReview results in the ‚ÄúFinal Clustering Result‚Äù tab",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>14</span>¬† <span class='chapter-title'>Functional Module Identification</span>"
    ]
  },
  {
    "objectID": "14_get_functional_modules_shiny.html#step-5-review-final-clustering-results",
    "href": "14_get_functional_modules_shiny.html#step-5-review-final-clustering-results",
    "title": "14¬† Functional Module Identification",
    "section": "14.6 Step 5: Review Final Clustering Results",
    "text": "14.6 Step 5: Review Final Clustering Results\nAfter successful clustering, examine your results in the ‚ÄúFinal Clustering Result‚Äù tab with three sub-tabs:\n\nTable TabData Visualization TabR Object Tab\n\n\nBrowse the functional module results and download as CSV:\n\nView: Complete functional module results table with key metrics\nDownload: Click ‚ÄúDownload‚Äù button to save results as CSV for further analysis\n\nKey result columns:\n\nmodule: Functional Module identifier (e.g., ‚ÄúFunctional_module_127‚Äù)\nmodule_annotation: Representative pathway name (lowest p-value for ORA, highest |NES| for GSEA)\nDescription: Names of all pathways in the module (separated by ;)\nmodule_content: All pathway/term IDs grouped in this module\nCount: Number of genes/metabolites from input list in the module\np_adjust: Best (lowest) adjusted p-value among pathways in the module\n\n\n\n\n\n\n\n\nGenerate similarity network plots to visualize functional modules:\n\nConfigure plot parameters:\n\nDegree cutoff: Minimum pathways per module to display\nText: Show representative module names\nText all: Show all pathway names\n\nClick ‚ÄúGenerate plot‚Äù to create the network visualization\nExamine the network to understand module relationships and structure\n\n\n\n\n\n\n\n\nAccess the complete results object for further analysis:\n\nView: Summary of the complete functional module analysis\nDownload: Save the complete object (.rda format) for use in R",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>14</span>¬† <span class='chapter-title'>Functional Module Identification</span>"
    ]
  },
  {
    "objectID": "14_get_functional_modules_shiny.html#step-6-view-analysis-code",
    "href": "14_get_functional_modules_shiny.html#step-6-view-analysis-code",
    "title": "14¬† Functional Module Identification",
    "section": "14.7 Step 6: View Analysis Code",
    "text": "14.7 Step 6: View Analysis Code\nClick the ‚ÄúCode‚Äù button to see the exact R code that replicates your analysis:\n\nOptimal Parameter Analysis Code: Shows determine_optimal_clusters() function usage\nFinal Clustering Code: Shows get_functional_modules() function usage\n\nThis code can be copied and used in your own R scripts for reproducible analysis.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>14</span>¬† <span class='chapter-title'>Functional Module Identification</span>"
    ]
  },
  {
    "objectID": "14_get_functional_modules_shiny.html#clustering-quality-assessment",
    "href": "14_get_functional_modules_shiny.html#clustering-quality-assessment",
    "title": "14¬† Functional Module Identification",
    "section": "14.8 Clustering Quality Assessment",
    "text": "14.8 Clustering Quality Assessment\nEvaluate the quality of your functional modules by examining:\n\nModule Size Distribution: Check if modules have reasonable sizes (not too many singleton modules or one dominant large module) and investigate clusters that are major outliers.\nSilhouette score plot\nBiological Interpretation: Most importantly, examine whether the grouped pathways represent coherent biological processes or functions. Statistical optimization alone doesn‚Äôt guarantee biological meaningfulness - modules should tell a clear biological story.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>14</span>¬† <span class='chapter-title'>Functional Module Identification</span>"
    ]
  },
  {
    "objectID": "14_get_functional_modules_shiny.html#next-steps",
    "href": "14_get_functional_modules_shiny.html#next-steps",
    "title": "14¬† Functional Module Identification",
    "section": "14.9 Next Steps",
    "text": "14.9 Next Steps\nOnce your functional module identification is complete:\n\nDownload Results: Save both the table and R object for backup and further analysis\nProceed to LLM Interpretation: Click the ‚ÄúNext‚Äù button to move to LLM Interpretation for AI-powered functional annotations of your modules\n\nThe functional modules will automatically be available for the next step in your MAPA analysis workflow, where you can add biological context and interpretations using large language models.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>14</span>¬† <span class='chapter-title'>Functional Module Identification</span>"
    ]
  },
  {
    "objectID": "15_llm_interpretation_shiny.html",
    "href": "15_llm_interpretation_shiny.html",
    "title": "15¬† Functional Module Annotation",
    "section": "",
    "text": "15.1 Overview\nThis chapter describes how to interpret the functional modules by integrating Large Language Models (LLMs) with a Retrieval-Augmented Generation (RAG) strategy. The Shiny app provides an approach to combine pathway information, scientific literature, and advanced text analysis to generate meaningful names and summaries for your functional modules.\nThe LLM interpretation process integrates multiple information sources to provide comprehensive module annotations:\nThis approach leverages both structured biological knowledge and cutting-edge research to provide contextually rich interpretations of your functional modules.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>15</span>¬† <span class='chapter-title'>Functional Module Annotation</span>"
    ]
  },
  {
    "objectID": "15_llm_interpretation_shiny.html#overview",
    "href": "15_llm_interpretation_shiny.html#overview",
    "title": "15¬† Functional Module Annotation",
    "section": "",
    "text": "Information Sources:\n\nPathway descriptions from GO, KEGG, Reactome, and metabolite databases\nGene/metabolite names from your input data\nScientific literature retrieved from PubMed based on pathway and molecule relevance\nLocal documents (optional) - your own research papers or relevant literature\n\nAnalysis Pipeline:\n\nInformation Extraction: Extracts pathway descriptions and molecule information\nLiterature Retrieval: Searches PubMed for relevant scientific papers\nRAG Strategy: Uses embeddings to find and rank the most relevant literature, see Section 15.2\nLLM Generation: Generates biological module names and research summaries",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>15</span>¬† <span class='chapter-title'>Functional Module Annotation</span>"
    ]
  },
  {
    "objectID": "15_llm_interpretation_shiny.html#sec-rag-shiny",
    "href": "15_llm_interpretation_shiny.html#sec-rag-shiny",
    "title": "15¬† Functional Module Annotation",
    "section": "15.2 Understanding the RAG Strategy",
    "text": "15.2 Understanding the RAG Strategy\n\n\n\n\n\nThe Retrieval-Augmented Generation (RAG) strategy works in several stages:\nStage 1: Literature Search\n\nSearches PubMed using pathway names and gene/metabolite information\nRetrieves abstracts and titles for relevant papers\nIncludes reference papers cited in pathway databases\n\nStage 2: Embedding-based Similarity\n\nGenerates text embeddings for module descriptions (pathways + molecules)\nCalculates similarity between module embeddings and paper abstracts\nFilters top papers based on cosine similarity scores\n\nStage 3: GPT-powered Reranking\n\nUses LLM to assess relevance of each paper to the specific module by assigning relevance scores (0-1) where 1 indicates high relevance to module pathways and molecules\nSelect the most informative literature for final interpretation\n\nStage 4: Final Generation\n\nCombines module information with top-ranked papers\nGenerates biologically meaningful module names\nProduces research summaries highlighting current knowledge\nAssigns confidence scores (0-1) reflecting the LLM‚Äôs assessment of interpretation quality based on available evidence. High confidence means strong literature support and clear biological coherence\n\nThis multi-stage approach ensures that generated annotations are both scientifically accurate and contextually relevant.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>15</span>¬† <span class='chapter-title'>Functional Module Annotation</span>"
    ]
  },
  {
    "objectID": "15_llm_interpretation_shiny.html#step-1-load-your-data",
    "href": "15_llm_interpretation_shiny.html#step-1-load-your-data",
    "title": "15¬† Functional Module Annotation",
    "section": "15.3 Step 1: Load Your Data",
    "text": "15.3 Step 1: Load Your Data\nUpload previously saved results:\n\nClick ‚ÄúBrowse‚Äù at the top of the left panel ‚ÄúUpload functional module (.rda)‚Äù to upload your analyzed functional module file (.rda format)\nSelect your file",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>15</span>¬† <span class='chapter-title'>Functional Module Annotation</span>"
    ]
  },
  {
    "objectID": "15_llm_interpretation_shiny.html#step-2-configure-llm-and-api-settings",
    "href": "15_llm_interpretation_shiny.html#step-2-configure-llm-and-api-settings",
    "title": "15¬† Functional Module Annotation",
    "section": "15.4 Step 2: Configure LLM and API Settings",
    "text": "15.4 Step 2: Configure LLM and API Settings\n\n15.4.1 LLM Model Settings\nConfigure your LLM and text embedding models settings with references to the table below:\n\n\n\n\n\n\n\n\n\nParameter\nDescription\nDefault\nNotes\n\n\n\n\nAPI provider\nGPT model for text generation\n\"gpt-4o-mini-2024-07-18\"\nCurrently supports OpenAI models only\n\n\nEmbedding model\nModel for text embeddings\n\"text-embedding-3-small\"\nUsed for document similarity\n\n\nAPI key\nOpenAI API key\nRequired\nStore securely, never commit to version control\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nModel Selection: Due to changes in how requests are processed in GPT-5 model series, we strongly recommend using the default option (gpt-4o-mini-2024-07-18) for the best performance and quality.\n\n\n\n\n15.4.2 Literature Search Settings\n\n\n\n\n\n\n\n\n\nParameter\nDescription\nDefault\nUse Case\n\n\n\n\nModule size cutoff\nMinimum pathways per module\n1\nFilter small modules to focus on substantial ones\n\n\nYears to search\nYears to search back in PubMed\n5\nBalance between recent findings and comprehensive coverage\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nAPI Usage & Processing Time: Each module requires multiple API calls (embedding + LLM generation), with costs scaling by number of modules and literature volume, so consider tweaking Module size cutoff to focus on important modules. Typical processing takes 2-5 minutes per module, with time increasing for more literature and larger modules.\n\n\n\n\n15.4.3 Optional Enhancements\n\n\n\n\n\n\n\n\n\nParameter\nDescription\nDefault\nBenefits\n\n\n\n\nDisease or phenotype\nDisease/condition context\nNULL\nAdds disease-specific interpretation\n\n\nLocal corpus directory\nLocal directory with your own PDF files\nNULL\nIncorporates your own research or relevant literature to enhance the interpretation\n\n\n\n\n\n15.4.4 Required Parameters\nTwo parameters are required before submit to LLM interpretation:\n\nEmbeddings output directory: The analyzed results will be displayed here\nOrganism gene annotation database: Select the organism of your omic data. You can refer to Data Input Chapter for detailed instruction.\n\n\n\n\n\n\n\nImportant\n\n\n\nDouble Check: Please DO NOT select a directory that contains any of your files, as this step will erase everything inside the chosen directory. Make sure the output directory you select is completely empty.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>15</span>¬† <span class='chapter-title'>Functional Module Annotation</span>"
    ]
  },
  {
    "objectID": "15_llm_interpretation_shiny.html#step-3-run-the-analysis",
    "href": "15_llm_interpretation_shiny.html#step-3-run-the-analysis",
    "title": "15¬† Functional Module Annotation",
    "section": "15.5 Step 3: Run the Analysis",
    "text": "15.5 Step 3: Run the Analysis\n\nVerify your data is loaded - either from the current session or uploaded file\nReview all parameter selections to ensure they match your analysis goals\nClick the ‚ÄúSubmit‚Äù button to start the LLM interpretation progress\nMonitor progress - a progress indicator will show the analysis is running\nWait for completion - processing time usually takes more than 10 minutes, wait patiently",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>15</span>¬† <span class='chapter-title'>Functional Module Annotation</span>"
    ]
  },
  {
    "objectID": "15_llm_interpretation_shiny.html#step-4-review-results",
    "href": "15_llm_interpretation_shiny.html#step-4-review-results",
    "title": "15¬† Functional Module Annotation",
    "section": "15.6 Step 4: Review Results",
    "text": "15.6 Step 4: Review Results\nAfter successful completion, results will appear in the right panel with updated functional module.\nKey result elements:\n\nllm_module_name: AI-generated biological module name\nmodule_annotation: Original representative annotation (fallback if LLM interpretation unavailable)\n\n\nInterpretation resultsFull PromptR object\n\n\nFor each interpreted module, the results include:\n\nModule Name: AI-generated biological module name\nModule Summary: Original representative annotation (fallback if LLM interpretation unavailable)\nAssociation With Phenotype: How this module is associated with given phenotype. Empty if no disease or phenotype is entered\nConfidence Score: Indicate LLM‚Äôs assessment of interpretation quality based on available evidence. High confidence means strong literature support and clear biological coherence\n\n\n\nContains the exact prompt sent to the LLM for transparency. Useful for understanding AI reasoning.\n\n\nThe functional module results are automatically updated with a new column llm_module_name, which is the LLM-generated names. Download the R object for follow-up analysis.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>15</span>¬† <span class='chapter-title'>Functional Module Annotation</span>"
    ]
  },
  {
    "objectID": "15_llm_interpretation_shiny.html#step-5-download-the-results",
    "href": "15_llm_interpretation_shiny.html#step-5-download-the-results",
    "title": "15¬† Functional Module Annotation",
    "section": "15.7 Step 5: Download the Results",
    "text": "15.7 Step 5: Download the Results\nAfter completing the LLM Interpretation step, you have two options for accessing/downloading the results other than viewing it on Shiny app:\n\nDownload the R object (.rda) containing the LLM interpretation results, which can be used for follow-up visualizations described in Chapter 16: Visualization.\n\nCheck out the embeddings output directory, which already includes the following for each functional module:\n\nchunk.txt: AI-generated summaries of the retrieved PubMed literature\nembedding_vector.csv.gz: Text embeddings of the literature with cosine similarity values\n\npaper_title.txt: A list of PubMed articles identified for this functional module, including their titles and PubMed IDs",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>15</span>¬† <span class='chapter-title'>Functional Module Annotation</span>"
    ]
  },
  {
    "objectID": "15_llm_interpretation_shiny.html#step-6-view-analysis-code",
    "href": "15_llm_interpretation_shiny.html#step-6-view-analysis-code",
    "title": "15¬† Functional Module Annotation",
    "section": "15.8 Step 6: View Analysis Code",
    "text": "15.8 Step 6: View Analysis Code\nClick the ‚ÄúCode‚Äù button to see the exact R code that replicates your analysis:\n\nCode 1: Shows function() function usage\nCode 2: Shows function() function usage\n\nThis code can be copied and used in your own R scripts for reproducible analysis.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>15</span>¬† <span class='chapter-title'>Functional Module Annotation</span>"
    ]
  },
  {
    "objectID": "15_llm_interpretation_shiny.html#best-practices",
    "href": "15_llm_interpretation_shiny.html#best-practices",
    "title": "15¬† Functional Module Annotation",
    "section": "15.9 Best Practices",
    "text": "15.9 Best Practices\n\nStart Small: Begin with a subset of modules to estimate costs and processing time\nOptimize Parameters: Adjust filtering parameters based on your module complexity\nUse Phenotype Context: Specify relevant diseases/conditions for more targeted interpretations\nInclude Local Literature: Add your own papers for domain-specific insights\nReview Results: Examine confidence scores and retrieved literature quality\nIterate: Refine parameters based on initial results",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>15</span>¬† <span class='chapter-title'>Functional Module Annotation</span>"
    ]
  },
  {
    "objectID": "15_llm_interpretation_shiny.html#next-steps",
    "href": "15_llm_interpretation_shiny.html#next-steps",
    "title": "15¬† Functional Module Annotation",
    "section": "15.10 Next Steps",
    "text": "15.10 Next Steps\nContinue to Data Visualization to create informative plots showcasing your LLM-interpreted modules.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>15</span>¬† <span class='chapter-title'>Functional Module Annotation</span>"
    ]
  },
  {
    "objectID": "16_data_vis_shiny.html",
    "href": "16_data_vis_shiny.html",
    "title": "16¬† Data Visualization",
    "section": "",
    "text": "16.1 Overview of Visualization Functions\nThis chaper details on how to utilize comprehensive visualization functions to explore and present your pathway enrichment and functional module results. Four main visualization approaches are covered: pathway bar charts, module information plots, similarity networks, and relationship networks.\nmapa provides four main visualization functions:",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>16</span>¬† <span class='chapter-title'>Data Visualization</span>"
    ]
  },
  {
    "objectID": "16_data_vis_shiny.html#overview-of-visualization-functions",
    "href": "16_data_vis_shiny.html#overview-of-visualization-functions",
    "title": "16¬† Data Visualization",
    "section": "",
    "text": "Function tab\nPurpose\nBest Used For\n\n\n\n\nBarplot\nHorizontal bar charts of top enriched items\nShowing enrichment strength across pathways/modules\n\n\nModule Information\nMulti-panel module details (network + bar + wordcloud)\nDetailed examination of specific modules\n\n\nModule Similarity Network\nSimilarity-based networks\nUnderstanding pathway relationships and clustering\n\n\nRelationship Network\nMulti-level hierarchical networks\nVisualizing connections across biological levels",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>16</span>¬† <span class='chapter-title'>Data Visualization</span>"
    ]
  },
  {
    "objectID": "16_data_vis_shiny.html#option-1-pathway-bar-chart",
    "href": "16_data_vis_shiny.html#option-1-pathway-bar-chart",
    "title": "16¬† Data Visualization",
    "section": "16.2 Option 1: Pathway Bar Chart",
    "text": "16.2 Option 1: Pathway Bar Chart\nThis function creates horizontal bar charts showing the top enriched pathways, modules, or functional modules. This is ideal for presenting enrichment results in publications.\n\n16.2.1 Key Settings\n\n\n\n\n\n\n\n\nSettings\nDescription\nOptions/Default\n\n\n\n\nLevel\nAnalysis level\nPathway, Module, FM\n\n\nX axis name\nX-axis metric\nORA: qscore, RichFactor, FoldEnrichment;\nGSEA: NES\n\n\nLine type\nBar style\nStraight (default), Meteor\n\n\nLLM text\nUse LLM names for functional modules\nTick box\n\n\nTop N\nNumber of items to show\nDefault: 10\n\n\nDatabase\nDatabases to include\nGO, KEGG, Reactome\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nX-axis Metrics Explained:\n\nqscore: -log‚ÇÅ‚ÇÄ(adjusted p-value), higher values indicate more significant enrichment\nRichFactor: Ratio of input genes in pathway vs.¬†all genes in pathway\nFoldEnrichment: Enrichment fold change (GeneRatio divided by BgRatio), see Section 3.3\nNES: Normalized Enrichment Score (GSEA only), positive/negative indicates up/down-regulation\n\n\n\nBesides, you can tweak the color designated for each database by setting HEXA code or PGBA code or just manually set them.\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nColor Choice: You can view all available HEX color code in the RColorBrewer package by running RColorBrewer::display.brewer.all(), which displays each palette so you can visually choose the one you prefer.\nOnce you‚Äôve decided, you can access its HEX codes using RColorBrewer::brewer.pal(n = 99, name = \"PaletteName\").\n\n\n\n\n16.2.2 Basic Usage\nAfter setting all the parameters listed above, hit the Submit, and the plot will be shown on the right.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>16</span>¬† <span class='chapter-title'>Data Visualization</span>"
    ]
  },
  {
    "objectID": "16_data_vis_shiny.html#option-2-module-information-plot",
    "href": "16_data_vis_shiny.html#option-2-module-information-plot",
    "title": "16¬† Data Visualization",
    "section": "16.3 Option 2: Module Information Plot",
    "text": "16.3 Option 2: Module Information Plot\nThis function provides detailed, multi-panel visualizations of individual modules, including network topology, pathway rankings, and word clouds.\nThe content of each plot depends on the analysis level:\n\n\n\n\n\n\n\n\nPlot level\nModule Level\n(Database-specific)\nFM Level\n(Cross-database)\n\n\n\n\nNetwork\nShows pathways within the database-specific module and their similarity connections\nShows representative pathways from database-specific modules (SimCluster) or individual pathways (EmbedCluster)\n\n\nBar plot\nRanks individual pathways within the module by significance\nRanks the representative pathways or database-specific modules by significance\n\n\nWord cloud\nWord frequency from pathway descriptions, with word size reflecting statistical significance\nWord frequency from all pathway descriptions in the functional module, with word size proportional to the sum of statistical significance values\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWord Cloud Interpretation: Word size reflects the cumulative statistical significance of pathways containing that word:\n\nFor ORA (Over-Representation Analysis): Word size is proportional to the sum of -log10(adjusted p-value) across pathways containing that word. Larger words indicate terms appearing in pathways with stronger statistical enrichment.\nFor GSEA (Gene Set Enrichment Analysis): Word size is proportional to the sum of |NES| (absolute Normalized Enrichment Score) across pathways containing that word. Larger words indicate terms appearing in pathways with stronger enrichment signals, regardless of direction (up- or down-regulation).\n\n\n\n\n16.3.1 For FM (Functional Module) Level\nChoose FM to plot functional module-level module information plot. Plots will pop up on the right panel. Representative figure is shown below (use GO and KEGG database).\n  \n\n\n16.3.2 For Module Level\nChoose Module to plot database-specific module-level module information plot. Plots will pop up on the right panel. Representative figure is shown below (use GO database).",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>16</span>¬† <span class='chapter-title'>Data Visualization</span>"
    ]
  },
  {
    "objectID": "16_data_vis_shiny.html#option-3-similarity-network",
    "href": "16_data_vis_shiny.html#option-3-similarity-network",
    "title": "16¬† Data Visualization",
    "section": "16.4 Option 3: Similarity Network",
    "text": "16.4 Option 3: Similarity Network\nThis function visualizes how pathways or modules cluster together based on similarity metrics.\n\n16.4.1 Key Settings\n\n\n\n\n\n\n\n\nParameter\nDescription\nUsage\n\n\n\n\nDegree cutoff\nMinimum pathways per module\nFilter small modules\n\n\nText\nShow representative names\nOne label per module\n\n\nText all\nShow all pathway names\nAll nodes labeled\n\n\nLLM text\nUse LLM-generated names\nFor functional modules with LLM interpretation\n\n\n\n\n\n16.4.2 Basic Usage\nConfigure your customized plot settings and plots will pop up on the right panel. Representative figure is shown below.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>16</span>¬† <span class='chapter-title'>Data Visualization</span>"
    ]
  },
  {
    "objectID": "16_data_vis_shiny.html#option-4-relationship-network",
    "href": "16_data_vis_shiny.html#option-4-relationship-network",
    "title": "16¬† Data Visualization",
    "section": "16.5 Option 4: Relationship Network",
    "text": "16.5 Option 4: Relationship Network\nThis function creates comprehensive multi-level networks showing relationships between functional modules, modules, pathways, and molecules.\n\n16.5.1 Key Settings\n\n\n\n\n\n\n\n\nParameter\nDescription\nDefault\n\n\n\n\ncircular_plot\nCircular vs.¬†horizontal layout\nNot ticked\n\n\nModule ID\nSpecific modules to show\nNULL\n\n\nLevels Included\nThe extent of details to show on the plot\nAll ticked\n\n\nPosition Limits\nDetermine how dense the node is arranged\n[0, 1] for all\n\n\n\n\n\n16.5.2 Circular Layout\nTick Circular Plot to use a circular-style arrangement for relationship network. Plots will pop up on the right panel. Representative figure is shown below.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>16</span>¬† <span class='chapter-title'>Data Visualization</span>"
    ]
  },
  {
    "objectID": "16_data_vis_shiny.html#view-visualization-code",
    "href": "16_data_vis_shiny.html#view-visualization-code",
    "title": "16¬† Data Visualization",
    "section": "16.6 View Visualization Code",
    "text": "16.6 View Visualization Code\nClick the ‚ÄúCode‚Äù button to see the exact R code that replicates your analysis:\n\nCode 1: Shows function() function usage\nCode 2: Shows function() function usage\n\nThis code can be copied and used in your own R scripts for reproducible analysis.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>16</span>¬† <span class='chapter-title'>Data Visualization</span>"
    ]
  },
  {
    "objectID": "16_data_vis_shiny.html#troubleshooting-visualization-issues",
    "href": "16_data_vis_shiny.html#troubleshooting-visualization-issues",
    "title": "16¬† Data Visualization",
    "section": "16.7 Troubleshooting Visualization Issues",
    "text": "16.7 Troubleshooting Visualization Issues\nCommon Issues and Solutions:\n\nPlots are not shown (white canva shown on the right)\n\nVerify that modules exist at the specified level\n\nText labels overlapping or unreadable\n\nAdjust Y label width parameter\nUntick Text all to show only representative labels\nIncrease plot dimensions when saving\n\nLLM text not appearing\n\nEnsure Chapter 15: LLM Interpretation was run successfully\nCheck that the object contains LLM interpretation results",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>16</span>¬† <span class='chapter-title'>Data Visualization</span>"
    ]
  },
  {
    "objectID": "16_data_vis_shiny.html#next-steps",
    "href": "16_data_vis_shiny.html#next-steps",
    "title": "16¬† Data Visualization",
    "section": "16.8 Next Steps",
    "text": "16.8 Next Steps\nContinue to Results Report to learn how to generate comprehensive analysis reports that combine all your results into professional documents.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>16</span>¬† <span class='chapter-title'>Data Visualization</span>"
    ]
  },
  {
    "objectID": "17_res_report_shiny.html",
    "href": "17_res_report_shiny.html",
    "title": "17¬† Result Report",
    "section": "",
    "text": "17.1 Overview\nWith a single click, you can generate comprehensive analysis report in a HTML file with various plots and tables.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>17</span>¬† <span class='chapter-title'>Result Report</span>"
    ]
  },
  {
    "objectID": "17_res_report_shiny.html#step-1-load-your-data",
    "href": "17_res_report_shiny.html#step-1-load-your-data",
    "title": "17¬† Result Report",
    "section": "17.2 Step 1: Load Your Data",
    "text": "17.2 Step 1: Load Your Data\n\nOption 1: Continue from Previous Step\nIf you have completed datavisualization in the current session, your data will automatically be available for final report.\nOption 2: Upload Existing Results\nYou can also upload previously saved results:\n\nClick ‚ÄúBrowse‚Äù at the top of the left panel (of Data Visualization function page) ‚ÄúUpload functional module (.rda)‚Äù to upload your functional module file (.rda format)\nSelect your file\nWait for validation - the app will automatically detect the input type and prepare for final report.\nSwitch back to Results & Report page",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>17</span>¬† <span class='chapter-title'>Result Report</span>"
    ]
  },
  {
    "objectID": "17_res_report_shiny.html#step-2-start-report-generation",
    "href": "17_res_report_shiny.html#step-2-start-report-generation",
    "title": "17¬† Result Report",
    "section": "17.3 Step 2: Start Report Generation",
    "text": "17.3 Step 2: Start Report Generation\nWith just one simple click, you report will be generated. This process is expected to take around 30 seconds.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>17</span>¬† <span class='chapter-title'>Result Report</span>"
    ]
  },
  {
    "objectID": "17_res_report_shiny.html#step-3-review-the-report",
    "href": "17_res_report_shiny.html#step-3-review-the-report",
    "title": "17¬† Result Report",
    "section": "17.4 Step 3: Review the Report",
    "text": "17.4 Step 3: Review the Report\nThe generated report automatically includes:\nAnalysis Summary:\n\nParameters: Overview of enrichment analysis parameters and results\nObject information: Summary statistics for each database and analysis level, and processing timeline and method details\n\nVisualizations:\n\nTop enriched pathways bar charts\nDatabase-specific module bar charts (if applicable)\nFunctional module bar charts with LLM names (if available)\nSimilarity networks for all analysis levels\n\nData Tables:\n\nOne of Enrichment results for functional modules or LLM interpretation results with confidence scores (if available)",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>17</span>¬† <span class='chapter-title'>Result Report</span>"
    ]
  },
  {
    "objectID": "17_res_report_shiny.html#step-4-download-the-report",
    "href": "17_res_report_shiny.html#step-4-download-the-report",
    "title": "17¬† Result Report",
    "section": "17.5 Step 4: Download the Report",
    "text": "17.5 Step 4: Download the Report\nYou can also click Download to save the exact report shown in the right panel as an HTML file on your computer. The download will be a ZIP file‚Äîsimply unzip it to access the HTML report and view its contents.\n\n\n\n\n\n\nTip\n\n\n\nWorking with Downloaded HTML file: The easiest way to save images embedded in the HTML file is to right-click on the image and select ‚ÄúSave image as‚Ä¶‚Äù (in Mac) to download it to your local device.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>17</span>¬† <span class='chapter-title'>Result Report</span>"
    ]
  },
  {
    "objectID": "17_res_report_shiny.html#step-5-view-analysis-code",
    "href": "17_res_report_shiny.html#step-5-view-analysis-code",
    "title": "17¬† Result Report",
    "section": "17.6 Step 5: View Analysis Code",
    "text": "17.6 Step 5: View Analysis Code\nClick the ‚ÄúCode‚Äù button to see the exact R code that replicates your analysis:\n\nCode 1: Shows function() function usage\nCode 2: Shows function() function usage\n\nThis code can be copied and used in your own R scripts for reproducible analysis.",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>17</span>¬† <span class='chapter-title'>Result Report</span>"
    ]
  },
  {
    "objectID": "17_res_report_shiny.html#next-steps",
    "href": "17_res_report_shiny.html#next-steps",
    "title": "17¬† Result Report",
    "section": "17.7 Next Steps",
    "text": "17.7 Next Steps\nWith your results exported and reports generated, you now have comprehensive documentation of your functional module analysis. These outputs provide the foundation for:\n\nCollaboration: Share HTML reports with colleagues for easy viewing and discussion\nPublication: Use HTML reports and exported the figures for manuscript preparation\nPresentation: Extract visualizations and key findings for presentations",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>17</span>¬† <span class='chapter-title'>Result Report</span>"
    ]
  },
  {
    "objectID": "17_res_report_shiny.html#thank-you-reach-out",
    "href": "17_res_report_shiny.html#thank-you-reach-out",
    "title": "17¬† Result Report",
    "section": "17.8 Thank You & Reach Out",
    "text": "17.8 Thank You & Reach Out\nTo this point, mapa shiny app workflow is now complete! Thank you for your use.\nIf you have any questions regarding mapa shiny app workflow, feel free to reach out via the mapashiny GitHub Issues page.\n\n\n\n\n\n\nNote\n\n\n\nCite Our Work: If you used mapa in your publications, we would appreciate it if you could cite our paper [to be updated.]",
    "crumbs": [
      "MAPA Shiny App",
      "<span class='chapter-number'>17</span>¬† <span class='chapter-title'>Result Report</span>"
    ]
  },
  {
    "objectID": "09_res_report.html#cite-our-work",
    "href": "09_res_report.html#cite-our-work",
    "title": "9¬† Results Report",
    "section": "9.7 Cite Our Work",
    "text": "9.7 Cite Our Work",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>9</span>¬† <span class='chapter-title'>Results Report</span>"
    ]
  },
  {
    "objectID": "02_input.html#next-step",
    "href": "02_input.html#next-step",
    "title": "2¬† Data input and preprocessing",
    "section": "2.3 Next Step",
    "text": "2.3 Next Step\nOnce your data meets the format requirements, you can proceed to enrichment analysis to begin your mapa workflow.",
    "crumbs": [
      "MAPA R Package",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Data input and preprocessing</span>"
    ]
  }
]